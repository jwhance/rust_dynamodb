{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0","program":"C:\\Users\\jwh20\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tokio","--edition=2018","C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"bytes\"","--cfg","feature=\"default\"","--cfg","feature=\"io-util\"","--cfg","feature=\"libc\"","--cfg","feature=\"macros\"","--cfg","feature=\"memchr\"","--cfg","feature=\"mio\"","--cfg","feature=\"net\"","--cfg","feature=\"num_cpus\"","--cfg","feature=\"once_cell\"","--cfg","feature=\"process\"","--cfg","feature=\"rt\"","--cfg","feature=\"rt-multi-thread\"","--cfg","feature=\"signal-hook-registry\"","--cfg","feature=\"sync\"","--cfg","feature=\"time\"","--cfg","feature=\"tokio-macros\"","--cfg","feature=\"winapi\"","-C","metadata=14183d39157ce861","-C","extra-filename=-14183d39157ce861","--out-dir","c:\\Users\\jwh20\\rust\\dynamodb\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\jwh20\\rust\\dynamodb\\target\\rls\\debug\\deps","--extern","bytes=c:\\Users\\jwh20\\rust\\dynamodb\\target\\rls\\debug\\deps\\libbytes-cc41cd5f2580ad19.rmeta","--extern","memchr=c:\\Users\\jwh20\\rust\\dynamodb\\target\\rls\\debug\\deps\\libmemchr-d985a14c31411a47.rmeta","--extern","mio=c:\\Users\\jwh20\\rust\\dynamodb\\target\\rls\\debug\\deps\\libmio-8e4aa28cd3b28e54.rmeta","--extern","num_cpus=c:\\Users\\jwh20\\rust\\dynamodb\\target\\rls\\debug\\deps\\libnum_cpus-c7cf4e21833ddd47.rmeta","--extern","once_cell=c:\\Users\\jwh20\\rust\\dynamodb\\target\\rls\\debug\\deps\\libonce_cell-fc815db70ac173c2.rmeta","--extern","pin_project_lite=c:\\Users\\jwh20\\rust\\dynamodb\\target\\rls\\debug\\deps\\libpin_project_lite-14c2955641689317.rmeta","--extern","tokio_macros=c:\\Users\\jwh20\\rust\\dynamodb\\target\\rls\\debug\\deps\\tokio_macros-12c00341b9aee345.dll","--extern","winapi=c:\\Users\\jwh20\\rust\\dynamodb\\target\\rls\\debug\\deps\\libwinapi-a1a1896eca68bf6a.rmeta","--cap-lints","allow","--cfg","tokio_track_caller","--error-format=json","--sysroot","C:\\Users\\jwh20\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\jwh20\\rust\\dynamodb\\target\\rls\\debug\\deps\\libtokio-14183d39157ce861.rmeta"},"prelude":{"crate_id":{"name":"tokio","disambiguator":[5729305386329670995,4692436283752884923]},"crate_root":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src","external_crates":[{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[2134305066550747688,1377703208702874155]}},{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","num":2,"id":{"name":"core","disambiguator":[1322159461575500717,8297198428669169011]}},{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2376346800744392852,12342541482992122530]}},{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14946502858004023242,6637215598610016319]}},{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5305136910335682758,6890491777619641650]}},{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[8079093424489733033,9678018066858265018]}},{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8191054904896780843,65190916132359678]}},{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17454577518104061478,8473922882117178851]}},{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14702801963282246562,3385633331338644346]}},{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4483555191844012602,617965746000623535]}},{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6496369475756502088,8603909216288097824]}},{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[8790568169648576788,8899032378407077408]}},{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\try_join.rs","num":13,"id":{"name":"pin_project_lite","disambiguator":[2644437339410927922,951898177168017127]}},{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","num":14,"id":{"name":"mio","disambiguator":[5297502760048578412,2695384127322140669]}},{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","num":15,"id":{"name":"log","disambiguator":[8504233339469645036,5690753936056706292]}},{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","num":16,"id":{"name":"cfg_if","disambiguator":[12397753863589609571,14658349722023367951]}},{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","num":17,"id":{"name":"ntapi","disambiguator":[8973372892075446679,6512045174641570117]}},{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\windows.rs","num":18,"id":{"name":"winapi","disambiguator":[684914979688003623,17347183427265392971]}},{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","num":19,"id":{"name":"miow","disambiguator":[558642069379028169,4339818106622988506]}},{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","num":20,"id":{"name":"socket2","disambiguator":[12863810839843599364,16902007786393327616]}},{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","num":21,"id":{"name":"bytes","disambiguator":[13269346963828182122,12271515965260530847]}},{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","num":22,"id":{"name":"tokio_macros","disambiguator":[1431282075841758529,11004767840110059394]}},{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_until.rs","num":23,"id":{"name":"memchr","disambiguator":[13688098140377509438,4025734633509184242]}},{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\mod.rs","num":24,"id":{"name":"num_cpus","disambiguator":[14146176132480510232,9209178162447825701]}}],"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":0,"byte_end":17571,"line_start":1,"line_end":481,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\support.rs","byte_start":31489,"byte_end":31496,"line_start":2,"line_end":2,"column_start":28,"column_end":35},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\support.rs","byte_start":31537,"byte_end":31547,"line_start":3,"line_end":3,"column_start":40,"column_end":50},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":0,"index":696},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\support.rs","byte_start":31574,"byte_end":31586,"line_start":4,"line_end":4,"column_start":26,"column_end":38},"alias_span":null,"name":"thread_rng_n","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":2,"index":9138},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\support.rs","byte_start":31612,"byte_end":31618,"line_start":7,"line_end":7,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":2,"index":32457},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\support.rs","byte_start":31638,"byte_end":31641,"line_start":8,"line_end":8,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":2,"index":34962},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\support.rs","byte_start":31662,"byte_end":31666,"line_start":9,"line_end":9,"column_start":20,"column_end":24},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\mod.rs","byte_start":31869,"byte_end":31876,"line_start":9,"line_end":9,"column_start":18,"column_end":25},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":43007,"byte_end":43019,"line_start":188,"line_end":188,"column_start":31,"column_end":43},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":43064,"byte_end":43073,"line_start":191,"line_end":191,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":43118,"byte_end":43127,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":43174,"byte_end":43184,"line_start":197,"line_end":197,"column_start":28,"column_end":38},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":43225,"byte_end":43232,"line_start":200,"line_end":200,"column_start":25,"column_end":32},"alias_span":null,"name":"ReadBuf","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":1,"index":2704},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":43402,"byte_end":43407,"line_start":205,"line_end":205,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":1,"index":7080},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":43409,"byte_end":43418,"line_start":205,"line_end":205,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":1,"index":2702},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":43420,"byte_end":43426,"line_start":205,"line_end":205,"column_start":37,"column_end":43},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":1,"index":7157},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":43428,"byte_end":43436,"line_start":205,"line_end":205,"column_start":45,"column_end":53},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":1056},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":43530,"byte_end":43538,"line_start":211,"line_end":211,"column_start":26,"column_end":34},"alias_span":null,"name":"Interest","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":1069},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":43540,"byte_end":43545,"line_start":211,"line_end":211,"column_start":36,"column_end":41},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":1329},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44139,"byte_end":44144,"line_start":244,"line_end":244,"column_start":21,"column_end":26},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":1323},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44146,"byte_end":44154,"line_start":244,"line_end":244,"column_start":28,"column_end":36},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":1326},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44156,"byte_end":44165,"line_start":244,"line_end":244,"column_start":38,"column_end":47},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2235},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44247,"byte_end":44251,"line_start":249,"line_end":249,"column_start":9,"column_end":13},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2241},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44253,"byte_end":44261,"line_start":249,"line_end":249,"column_start":15,"column_end":23},"alias_span":null,"name":"copy_buf","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":1718},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44263,"byte_end":44269,"line_start":249,"line_end":249,"column_start":25,"column_end":31},"alias_span":null,"name":"duplex","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2261},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44271,"byte_end":44276,"line_start":249,"line_end":249,"column_start":33,"column_end":38},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2427},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44278,"byte_end":44284,"line_start":249,"line_end":249,"column_start":40,"column_end":46},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2434},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44286,"byte_end":44290,"line_start":249,"line_end":249,"column_start":48,"column_end":52},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2111},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44292,"byte_end":44307,"line_start":249,"line_end":249,"column_start":54,"column_end":69},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2119},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44309,"byte_end":44321,"line_start":249,"line_end":249,"column_start":71,"column_end":83},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2170},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44323,"byte_end":44335,"line_start":249,"line_end":249,"column_start":85,"column_end":97},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2173},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44337,"byte_end":44350,"line_start":249,"line_end":249,"column_start":99,"column_end":112},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":10271},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44360,"byte_end":44369,"line_start":250,"line_end":250,"column_start":9,"column_end":18},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":10240},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44371,"byte_end":44380,"line_start":250,"line_end":250,"column_start":20,"column_end":29},"alias_span":null,"name":"BufStream","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":10194},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44382,"byte_end":44391,"line_start":250,"line_end":250,"column_start":31,"column_end":40},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2262},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44393,"byte_end":44405,"line_start":250,"line_end":250,"column_start":42,"column_end":54},"alias_span":null,"name":"DuplexStream","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2259},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44407,"byte_end":44412,"line_start":250,"line_end":250,"column_start":56,"column_end":61},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":10053},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44414,"byte_end":44419,"line_start":250,"line_end":250,"column_start":63,"column_end":68},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2428},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44421,"byte_end":44427,"line_start":250,"line_end":250,"column_start":70,"column_end":76},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2432},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44429,"byte_end":44433,"line_start":250,"line_end":250,"column_start":78,"column_end":82},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":8690},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44435,"byte_end":44440,"line_start":250,"line_end":250,"column_start":84,"column_end":89},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":8650},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":44442,"byte_end":44446,"line_start":250,"line_end":250,"column_start":91,"column_end":95},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":82271,"byte_end":82284,"line_start":28,"line_end":28,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":3038},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":82344,"byte_end":82355,"line_start":32,"line_end":32,"column_start":26,"column_end":37},"alias_span":null,"name":"lookup_host","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":3047},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\mod.rs","byte_start":8619925,"byte_end":8619933,"line_start":8,"line_end":8,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":2644}},{"kind":"Use","ref_id":{"krate":0,"index":3054},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\mod.rs","byte_start":8619935,"byte_end":8619944,"line_start":8,"line_end":8,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":2644}},{"kind":"Use","ref_id":{"krate":0,"index":3061},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\mod.rs","byte_start":8619987,"byte_end":8620000,"line_start":11,"line_end":11,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedReadHalf","value":"","parent":{"krate":0,"index":2644}},{"kind":"Use","ref_id":{"krate":0,"index":3065},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\mod.rs","byte_start":8620002,"byte_end":8620016,"line_start":11,"line_end":11,"column_start":38,"column_end":52},"alias_span":null,"name":"OwnedWriteHalf","value":"","parent":{"krate":0,"index":2644}},{"kind":"Use","ref_id":{"krate":0,"index":3070},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\mod.rs","byte_start":8620018,"byte_end":8620030,"line_start":11,"line_end":11,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2644}},{"kind":"Use","ref_id":{"krate":0,"index":3071},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\mod.rs","byte_start":8620018,"byte_end":8620030,"line_start":11,"line_end":11,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2808}},{"kind":"Use","ref_id":{"krate":0,"index":3043},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":82402,"byte_end":82413,"line_start":35,"line_end":35,"column_start":28,"column_end":39},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":3045},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":82440,"byte_end":82449,"line_start":36,"line_end":36,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpSocket","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":3077},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":82476,"byte_end":82485,"line_start":37,"line_end":37,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":3084},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":82518,"byte_end":82527,"line_start":40,"line_end":40,"column_start":18,"column_end":27},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":4279},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8808377,"byte_end":8808384,"line_start":193,"line_end":193,"column_start":28,"column_end":35},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":3410}},{"kind":"Use","ref_id":{"krate":0,"index":4482},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8808509,"byte_end":8808519,"line_start":201,"line_end":201,"column_start":22,"column_end":32},"alias_span":null,"name":"EnterGuard","value":"","parent":{"krate":0,"index":3410}},{"kind":"Use","ref_id":{"krate":0,"index":4471},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8808521,"byte_end":8808527,"line_start":201,"line_end":201,"column_start":34,"column_end":40},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":3410}},{"kind":"Use","ref_id":{"krate":0,"index":6154},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9032284,"byte_end":9032291,"line_start":432,"line_end":432,"column_start":23,"column_end":30},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":4964}},{"kind":"Use","ref_id":{"krate":0,"index":6166},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9032293,"byte_end":9032310,"line_start":432,"line_end":432,"column_start":32,"column_end":49},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":4964}},{"kind":"Use","ref_id":{"krate":0,"index":5238},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9076192,"byte_end":9076199,"line_start":76,"line_end":76,"column_start":25,"column_end":32},"alias_span":null,"name":"channel","value":"","parent":{"krate":0,"index":5141}},{"kind":"Use","ref_id":{"krate":0,"index":5231},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9076201,"byte_end":9076207,"line_start":76,"line_end":76,"column_start":34,"column_end":40},"alias_span":null,"name":"Permit","value":"","parent":{"krate":0,"index":5141}},{"kind":"Use","ref_id":{"krate":0,"index":5235},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9076209,"byte_end":9076217,"line_start":76,"line_end":76,"column_start":42,"column_end":50},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":5141}},{"kind":"Use","ref_id":{"krate":0,"index":5228},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9076219,"byte_end":9076225,"line_start":76,"line_end":76,"column_start":52,"column_end":58},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":5141}},{"kind":"Use","ref_id":{"krate":0,"index":5496},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9076303,"byte_end":9076320,"line_start":83,"line_end":83,"column_start":27,"column_end":44},"alias_span":null,"name":"unbounded_channel","value":"","parent":{"krate":0,"index":5141}},{"kind":"Use","ref_id":{"krate":0,"index":5490},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9076322,"byte_end":9076339,"line_start":83,"line_end":83,"column_start":46,"column_end":63},"alias_span":null,"name":"UnboundedReceiver","value":"","parent":{"krate":0,"index":5141}},{"kind":"Use","ref_id":{"krate":0,"index":5481},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9076341,"byte_end":9076356,"line_start":83,"line_end":83,"column_start":65,"column_end":80},"alias_span":null,"name":"UnboundedSender","value":"","parent":{"krate":0,"index":5141}},{"kind":"Use","ref_id":{"krate":0,"index":5556},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9032392,"byte_end":9032397,"line_start":439,"line_end":439,"column_start":21,"column_end":26},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":4964}},{"kind":"Use","ref_id":{"krate":0,"index":5560},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9032399,"byte_end":9032409,"line_start":439,"line_end":439,"column_start":28,"column_end":38},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":4964}},{"kind":"Use","ref_id":{"krate":0,"index":6249},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9032411,"byte_end":9032423,"line_start":439,"line_end":439,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":4964}},{"kind":"Use","ref_id":{"krate":0,"index":6250},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9032411,"byte_end":9032423,"line_start":439,"line_end":439,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":5639}},{"kind":"Use","ref_id":{"krate":0,"index":5564},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9032425,"byte_end":9032440,"line_start":439,"line_end":439,"column_start":54,"column_end":69},"alias_span":null,"name":"OwnedMutexGuard","value":"","parent":{"krate":0,"index":4964}},{"kind":"Use","ref_id":{"krate":0,"index":6254},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9032491,"byte_end":9032497,"line_start":442,"line_end":442,"column_start":21,"column_end":27},"alias_span":null,"name":"Notify","value":"","parent":{"krate":0,"index":4964}},{"kind":"Use","ref_id":{"krate":0,"index":6347},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9032588,"byte_end":9032600,"line_start":447,"line_end":447,"column_start":31,"column_end":43},"alias_span":null,"name":"AcquireError","value":"","parent":{"krate":0,"index":4964}},{"kind":"Use","ref_id":{"krate":0,"index":6337},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9032602,"byte_end":9032617,"line_start":447,"line_end":447,"column_start":45,"column_end":60},"alias_span":null,"name":"TryAcquireError","value":"","parent":{"krate":0,"index":4964}},{"kind":"Use","ref_id":{"krate":0,"index":6352},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9032664,"byte_end":9032673,"line_start":450,"line_end":450,"column_start":25,"column_end":34},"alias_span":null,"name":"Semaphore","value":"","parent":{"krate":0,"index":4964}},{"kind":"Use","ref_id":{"krate":0,"index":6356},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9032675,"byte_end":9032690,"line_start":450,"line_end":450,"column_start":36,"column_end":51},"alias_span":null,"name":"SemaphorePermit","value":"","parent":{"krate":0,"index":4964}},{"kind":"Use","ref_id":{"krate":0,"index":6363},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9032692,"byte_end":9032712,"line_start":450,"line_end":450,"column_start":53,"column_end":73},"alias_span":null,"name":"OwnedSemaphorePermit","value":"","parent":{"krate":0,"index":4964}},{"kind":"Use","ref_id":{"krate":0,"index":6368},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9032753,"byte_end":9032759,"line_start":453,"line_end":453,"column_start":22,"column_end":28},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":4964}},{"kind":"Use","ref_id":{"krate":0,"index":5958},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9032761,"byte_end":9032776,"line_start":453,"line_end":453,"column_start":30,"column_end":45},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":4964}},{"kind":"Use","ref_id":{"krate":0,"index":5985},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9032778,"byte_end":9032794,"line_start":453,"line_end":453,"column_start":47,"column_end":63},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":4964}},{"kind":"Use","ref_id":{"krate":0,"index":3964},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136673,"byte_end":136682,"line_start":219,"line_end":219,"column_start":36,"column_end":45},"alias_span":null,"name":"JoinError","value":"","parent":{"krate":0,"index":634}},{"kind":"Use","ref_id":{"krate":0,"index":3966},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136684,"byte_end":136694,"line_start":219,"line_end":219,"column_start":47,"column_end":57},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":634}},{"kind":"Use","ref_id":{"krate":0,"index":6584},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136738,"byte_end":136752,"line_start":222,"line_end":222,"column_start":23,"column_end":37},"alias_span":null,"name":"spawn_blocking","value":"","parent":{"krate":0,"index":634}},{"kind":"Use","ref_id":{"krate":0,"index":6587},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136789,"byte_end":136794,"line_start":225,"line_end":225,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":634}},{"kind":"Use","ref_id":{"krate":0,"index":6581},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136850,"byte_end":136864,"line_start":228,"line_end":228,"column_start":27,"column_end":41},"alias_span":null,"name":"block_in_place","value":"","parent":{"krate":0,"index":634}},{"kind":"Use","ref_id":{"krate":0,"index":6590},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136915,"byte_end":136924,"line_start":232,"line_end":232,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":634}},{"kind":"Use","ref_id":{"krate":0,"index":6607},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136962,"byte_end":136973,"line_start":235,"line_end":235,"column_start":21,"column_end":32},"alias_span":null,"name":"spawn_local","value":"","parent":{"krate":0,"index":634}},{"kind":"Use","ref_id":{"krate":0,"index":6598},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136975,"byte_end":136983,"line_start":235,"line_end":235,"column_start":34,"column_end":42},"alias_span":null,"name":"LocalSet","value":"","parent":{"krate":0,"index":634}},{"kind":"Use","ref_id":{"krate":0,"index":6533},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":137031,"byte_end":137039,"line_start":238,"line_end":238,"column_start":25,"column_end":33},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":634}},{"kind":"Use","ref_id":{"krate":0,"index":6587},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14899,"byte_end":14904,"line_start":398,"line_end":398,"column_start":19,"column_end":24},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6805},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9333095,"byte_end":9333100,"line_start":99,"line_end":99,"column_start":25,"column_end":30},"alias_span":null,"name":"sleep","value":"","parent":{"krate":0,"index":6623}},{"kind":"Use","ref_id":{"krate":0,"index":6804},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9333102,"byte_end":9333113,"line_start":99,"line_end":99,"column_start":32,"column_end":43},"alias_span":null,"name":"sleep_until","value":"","parent":{"krate":0,"index":6623}},{"kind":"Use","ref_id":{"krate":0,"index":7485},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9333115,"byte_end":9333120,"line_start":99,"line_end":99,"column_start":45,"column_end":50},"alias_span":null,"name":"Sleep","value":"","parent":{"krate":0,"index":6623}},{"kind":"Use","ref_id":{"krate":0,"index":7118},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9333176,"byte_end":9333183,"line_start":104,"line_end":104,"column_start":24,"column_end":31},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":6623}},{"kind":"Use","ref_id":{"krate":0,"index":6955},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9333219,"byte_end":9333227,"line_start":107,"line_end":107,"column_start":20,"column_end":28},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":6623}},{"kind":"Use","ref_id":{"krate":0,"index":6956},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9333229,"byte_end":9333240,"line_start":107,"line_end":107,"column_start":30,"column_end":41},"alias_span":null,"name":"interval_at","value":"","parent":{"krate":0,"index":6623}},{"kind":"Use","ref_id":{"krate":0,"index":7141},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9333242,"byte_end":9333250,"line_start":107,"line_end":107,"column_start":43,"column_end":51},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":6623}},{"kind":"Use","ref_id":{"krate":0,"index":6980},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9333300,"byte_end":9333307,"line_start":111,"line_end":111,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":6623}},{"kind":"Use","ref_id":{"krate":0,"index":6982},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9333309,"byte_end":9333319,"line_start":111,"line_end":111,"column_start":28,"column_end":38},"alias_span":null,"name":"timeout_at","value":"","parent":{"krate":0,"index":6623}},{"kind":"Use","ref_id":{"krate":0,"index":7447},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9333321,"byte_end":9333328,"line_start":111,"line_end":111,"column_start":40,"column_end":47},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":6623}},{"kind":"Use","ref_id":{"krate":2,"index":34832},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9333441,"byte_end":9333449,"line_start":119,"line_end":119,"column_start":20,"column_end":28},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":6623}},{"kind":"Use","ref_id":{"krate":0,"index":696},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\mod.rs","byte_start":137749,"byte_end":137761,"line_start":37,"line_end":37,"column_start":21,"column_end":33},"alias_span":null,"name":"thread_rng_n","value":"","parent":{"krate":0,"index":635}},{"kind":"Use","ref_id":{"krate":22,"index":54},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16684,"byte_end":16715,"line_start":451,"line_end":451,"column_start":27,"column_end":58},"alias_span":null,"name":"select_priv_declare_output_enum","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":48},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16930,"byte_end":16934,"line_start":457,"line_end":457,"column_start":31,"column_end":35},"alias_span":null,"name":"main","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":50},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":17069,"byte_end":17073,"line_start":461,"line_end":461,"column_start":31,"column_end":35},"alias_span":null,"name":"test","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":0,"byte_end":17571,"line_start":1,"line_end":481,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":79},{"krate":0,"index":123},{"krate":0,"index":300},{"krate":0,"index":368},{"krate":0,"index":523},{"krate":0,"index":3165},{"krate":0,"index":614},{"krate":0,"index":3410},{"krate":0,"index":615},{"krate":0,"index":4964},{"krate":0,"index":634},{"krate":0,"index":6622},{"krate":0,"index":6623},{"krate":0,"index":635},{"krate":0,"index":702},{"krate":0,"index":7439},{"krate":0,"index":7440},{"krate":0,"index":7441}],"decl_id":null,"docs":" A runtime for writing reliable network applications without compromising speed.","sig":null,"attributes":[{"value":"allow(clippy :: cognitive_complexity, clippy :: large_enum_variant, clippy\n        :: needless_doctest_main)","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":55,"byte_end":167,"line_start":2,"line_end":6,"column_start":1,"column_end":3}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":168,"byte_end":274,"line_start":7,"line_end":12,"column_start":1,"column_end":3}},{"value":"/ A runtime for writing reliable network applications without compromising speed.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":483,"byte_end":566,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":567,"byte_end":570,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Tokio is an event-driven, non-blocking I/O platform for writing asynchronous","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":571,"byte_end":651,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ applications with the Rust programming language. At a high level, it","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":652,"byte_end":724,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ provides a few major components:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":725,"byte_end":761,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":762,"byte_end":765,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * Tools for [working with asynchronous tasks][tasks], including","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":766,"byte_end":833,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"/   [synchronization primitives and channels][sync] and [timeouts, sleeps, and","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":834,"byte_end":914,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/   intervals][time].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":915,"byte_end":938,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"/ * APIs for [performing asynchronous I/O][io], including [TCP and UDP][net] sockets,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":939,"byte_end":1026,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/   [filesystem][fs] operations, and [process] and [signal] management.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1027,"byte_end":1100,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"/ * A [runtime] for executing asynchronous code, including a task scheduler,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1101,"byte_end":1179,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/   an I/O driver backed by the operating system's event queue (epoll, kqueue,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1180,"byte_end":1260,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/   IOCP, etc...), and a high performance timer.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1261,"byte_end":1311,"line_start":33,"line_end":33,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1312,"byte_end":1315,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Guide level documentation is found on the [website].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1316,"byte_end":1372,"line_start":35,"line_end":35,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1373,"byte_end":1376,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [tasks]: #working-with-tasks","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1377,"byte_end":1409,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/ [sync]: crate::sync","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1410,"byte_end":1433,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/ [time]: crate::time","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1434,"byte_end":1457,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"/ [io]: #asynchronous-io","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1458,"byte_end":1484,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/ [net]: crate::net","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1485,"byte_end":1506,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"/ [fs]: crate::fs","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1507,"byte_end":1526,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/ [process]: crate::process","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1527,"byte_end":1556,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/ [signal]: crate::signal","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1557,"byte_end":1584,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/ [fs]: crate::fs","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1585,"byte_end":1604,"line_start":45,"line_end":45,"column_start":1,"column_end":20}},{"value":"/ [runtime]: crate::runtime","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1605,"byte_end":1634,"line_start":46,"line_end":46,"column_start":1,"column_end":30}},{"value":"/ [website]: https://tokio.rs/tokio/tutorial","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1635,"byte_end":1681,"line_start":47,"line_end":47,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1682,"byte_end":1685,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # A Tour of Tokio","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1686,"byte_end":1707,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1708,"byte_end":1711,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Tokio consists of a number of modules that provide a range of functionality","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1712,"byte_end":1791,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ essential for implementing asynchronous applications in Rust. In this","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1792,"byte_end":1865,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/ section, we will take a brief tour of Tokio, summarizing the major APIs and","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1866,"byte_end":1945,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ their uses.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1946,"byte_end":1961,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1962,"byte_end":1965,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The easiest way to get started is to enable all features. Do this by","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":1966,"byte_end":2038,"line_start":56,"line_end":56,"column_start":1,"column_end":73}},{"value":"/ enabling the `full` feature flag:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2039,"byte_end":2076,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2077,"byte_end":2080,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2081,"byte_end":2092,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"full\"] }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2093,"byte_end":2143,"line_start":60,"line_end":60,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2144,"byte_end":2151,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2152,"byte_end":2155,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ### Authoring applications","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2156,"byte_end":2186,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2187,"byte_end":2190,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Tokio is great for writing applications and most users in this case shouldn't","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2191,"byte_end":2272,"line_start":65,"line_end":65,"column_start":1,"column_end":82}},{"value":"/ worry too much about what features they should pick. If you're unsure, we suggest","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2273,"byte_end":2358,"line_start":66,"line_end":66,"column_start":1,"column_end":86}},{"value":"/ going with `full` to ensure that you don't run into any road blocks while you're","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2359,"byte_end":2443,"line_start":67,"line_end":67,"column_start":1,"column_end":85}},{"value":"/ building your application.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2444,"byte_end":2474,"line_start":68,"line_end":68,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2475,"byte_end":2478,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2479,"byte_end":2495,"line_start":70,"line_end":70,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2496,"byte_end":2499,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ This example shows the quickest way to get started with Tokio.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2500,"byte_end":2566,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2567,"byte_end":2570,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2571,"byte_end":2582,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"full\"] }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2583,"byte_end":2633,"line_start":75,"line_end":75,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2634,"byte_end":2641,"line_start":76,"line_end":76,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2642,"byte_end":2645,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ ### Authoring libraries","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2646,"byte_end":2673,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2674,"byte_end":2677,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ As a library author your goal should be to provide the lighest weight crate","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2678,"byte_end":2757,"line_start":80,"line_end":80,"column_start":1,"column_end":80}},{"value":"/ that is based on Tokio. To achieve this you should ensure that you only enable","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2758,"byte_end":2840,"line_start":81,"line_end":81,"column_start":1,"column_end":83}},{"value":"/ the features you need. This allows users to pick up your crate without having","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2841,"byte_end":2922,"line_start":82,"line_end":82,"column_start":1,"column_end":82}},{"value":"/ to enable unnecessary features.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2923,"byte_end":2958,"line_start":83,"line_end":83,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2959,"byte_end":2962,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2963,"byte_end":2979,"line_start":85,"line_end":85,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2980,"byte_end":2983,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ This example shows how you may want to import features for a library that just","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":2984,"byte_end":3066,"line_start":87,"line_end":87,"column_start":1,"column_end":83}},{"value":"/ needs to `tokio::spawn` and use a `TcpStream`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3067,"byte_end":3117,"line_start":88,"line_end":88,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3118,"byte_end":3121,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3122,"byte_end":3133,"line_start":90,"line_end":90,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"rt\", \"net\"] }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3134,"byte_end":3189,"line_start":91,"line_end":91,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3190,"byte_end":3197,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3198,"byte_end":3201,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ ## Working With Tasks","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3202,"byte_end":3227,"line_start":94,"line_end":94,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3228,"byte_end":3231,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ Asynchronous programs in Rust are based around lightweight, non-blocking","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3232,"byte_end":3308,"line_start":96,"line_end":96,"column_start":1,"column_end":77}},{"value":"/ units of execution called [_tasks_][tasks]. The [`tokio::task`] module provides","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3309,"byte_end":3392,"line_start":97,"line_end":97,"column_start":1,"column_end":84}},{"value":"/ important tools for working with tasks:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3393,"byte_end":3436,"line_start":98,"line_end":98,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3437,"byte_end":3440,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ * The [`spawn`] function and [`JoinHandle`] type, for scheduling a new task","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3441,"byte_end":3520,"line_start":100,"line_end":100,"column_start":1,"column_end":80}},{"value":"/   on the Tokio runtime and awaiting the output of a spawned task, respectively,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3521,"byte_end":3604,"line_start":101,"line_end":101,"column_start":1,"column_end":84}},{"value":"/ * Functions for [running blocking operations][blocking] in an asynchronous","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3605,"byte_end":3683,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/   task context.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3684,"byte_end":3703,"line_start":103,"line_end":103,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3704,"byte_end":3707,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::task`] module is present only when the \"rt\" feature flag","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3708,"byte_end":3781,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ is enabled.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3782,"byte_end":3797,"line_start":106,"line_end":106,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3798,"byte_end":3801,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [tasks]: task/index.html#what-are-tasks","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3802,"byte_end":3845,"line_start":108,"line_end":108,"column_start":1,"column_end":44}},{"value":"/ [`tokio::task`]: crate::task","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3846,"byte_end":3878,"line_start":109,"line_end":109,"column_start":1,"column_end":33}},{"value":"/ [`spawn`]: crate::task::spawn()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3879,"byte_end":3914,"line_start":110,"line_end":110,"column_start":1,"column_end":36}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3915,"byte_end":3958,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ [blocking]: task/index.html#blocking-and-yielding","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":3959,"byte_end":4012,"line_start":112,"line_end":112,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4013,"byte_end":4016,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::sync`] module contains synchronization primitives to use when","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4017,"byte_end":4095,"line_start":114,"line_end":114,"column_start":1,"column_end":79}},{"value":"/ needing to communicate or share data. These include:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4096,"byte_end":4152,"line_start":115,"line_end":115,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4153,"byte_end":4156,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ * channels ([`oneshot`], [`mpsc`], and [`watch`]), for sending values","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4157,"byte_end":4230,"line_start":117,"line_end":117,"column_start":1,"column_end":74}},{"value":"/   between tasks,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4231,"byte_end":4251,"line_start":118,"line_end":118,"column_start":1,"column_end":21}},{"value":"/ * a non-blocking [`Mutex`], for controlling access to a shared, mutable","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4252,"byte_end":4327,"line_start":119,"line_end":119,"column_start":1,"column_end":76}},{"value":"/   value,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4328,"byte_end":4340,"line_start":120,"line_end":120,"column_start":1,"column_end":13}},{"value":"/ * an asynchronous [`Barrier`] type, for multiple tasks to synchronize before","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4341,"byte_end":4421,"line_start":121,"line_end":121,"column_start":1,"column_end":81}},{"value":"/   beginning a computation.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4422,"byte_end":4452,"line_start":122,"line_end":122,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4453,"byte_end":4456,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The `tokio::sync` module is present only when the \"sync\" feature flag is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4457,"byte_end":4533,"line_start":124,"line_end":124,"column_start":1,"column_end":77}},{"value":"/ enabled.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4534,"byte_end":4546,"line_start":125,"line_end":125,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4547,"byte_end":4550,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ [`tokio::sync`]: crate::sync","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4551,"byte_end":4583,"line_start":127,"line_end":127,"column_start":1,"column_end":33}},{"value":"/ [`Mutex`]: crate::sync::Mutex","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4584,"byte_end":4617,"line_start":128,"line_end":128,"column_start":1,"column_end":34}},{"value":"/ [`Barrier`]: crate::sync::Barrier","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4618,"byte_end":4655,"line_start":129,"line_end":129,"column_start":1,"column_end":38}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4656,"byte_end":4693,"line_start":130,"line_end":130,"column_start":1,"column_end":38}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4694,"byte_end":4725,"line_start":131,"line_end":131,"column_start":1,"column_end":32}},{"value":"/ [`watch`]: crate::sync::watch","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4726,"byte_end":4759,"line_start":132,"line_end":132,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4760,"byte_end":4763,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::time`] module provides utilities for tracking time and","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4764,"byte_end":4835,"line_start":134,"line_end":134,"column_start":1,"column_end":72}},{"value":"/ scheduling work. This includes functions for setting [timeouts][timeout] for","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4836,"byte_end":4916,"line_start":135,"line_end":135,"column_start":1,"column_end":81}},{"value":"/ tasks, [sleeping][sleep] work to run in the future, or [repeating an operation at an","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":4917,"byte_end":5005,"line_start":136,"line_end":136,"column_start":1,"column_end":89}},{"value":"/ interval][interval].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5006,"byte_end":5030,"line_start":137,"line_end":137,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5031,"byte_end":5034,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ In order to use `tokio::time`, the \"time\" feature flag must be enabled.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5035,"byte_end":5110,"line_start":139,"line_end":139,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5111,"byte_end":5114,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ [`tokio::time`]: crate::time","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5115,"byte_end":5147,"line_start":141,"line_end":141,"column_start":1,"column_end":33}},{"value":"/ [sleep]: crate::time::sleep()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5148,"byte_end":5181,"line_start":142,"line_end":142,"column_start":1,"column_end":34}},{"value":"/ [interval]: crate::time::interval()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5182,"byte_end":5221,"line_start":143,"line_end":143,"column_start":1,"column_end":40}},{"value":"/ [timeout]: crate::time::timeout()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5222,"byte_end":5259,"line_start":144,"line_end":144,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5260,"byte_end":5263,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ Finally, Tokio provides a _runtime_ for executing asynchronous tasks. Most","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5264,"byte_end":5342,"line_start":146,"line_end":146,"column_start":1,"column_end":79}},{"value":"/ applications can use the [`#[tokio::main]`][main] macro to run their code on the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5343,"byte_end":5427,"line_start":147,"line_end":147,"column_start":1,"column_end":85}},{"value":"/ Tokio runtime. However, this macro provides only basic configuration options. As","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5428,"byte_end":5512,"line_start":148,"line_end":148,"column_start":1,"column_end":85}},{"value":"/ an alternative, the [`tokio::runtime`] module provides more powerful APIs for configuring","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5513,"byte_end":5606,"line_start":149,"line_end":149,"column_start":1,"column_end":94}},{"value":"/ and managing runtimes. You should use that module if the `#[tokio::main]` macro doesn't","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5607,"byte_end":5698,"line_start":150,"line_end":150,"column_start":1,"column_end":92}},{"value":"/ provide the functionality you need.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5699,"byte_end":5738,"line_start":151,"line_end":151,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5739,"byte_end":5742,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Using the runtime requires the \"rt\" or \"rt-multi-thread\" feature flags, to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5743,"byte_end":5821,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ enable the basic [single-threaded scheduler][rt] and the [thread-pool","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5822,"byte_end":5895,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ scheduler][rt-multi-thread], respectively. See the [`runtime` module","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5896,"byte_end":5968,"line_start":155,"line_end":155,"column_start":1,"column_end":73}},{"value":"/ documentation][rt-features] for details. In addition, the \"macros\" feature","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":5969,"byte_end":6047,"line_start":156,"line_end":156,"column_start":1,"column_end":79}},{"value":"/ flag enables the `#[tokio::main]` and `#[tokio::test]` attributes.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6048,"byte_end":6118,"line_start":157,"line_end":157,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6119,"byte_end":6122,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [main]: attr.main.html","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6123,"byte_end":6149,"line_start":159,"line_end":159,"column_start":1,"column_end":27}},{"value":"/ [`tokio::runtime`]: crate::runtime","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6150,"byte_end":6188,"line_start":160,"line_end":160,"column_start":1,"column_end":39}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6189,"byte_end":6229,"line_start":161,"line_end":161,"column_start":1,"column_end":41}},{"value":"/ [`Runtime`]: crate::runtime::Runtime","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6230,"byte_end":6270,"line_start":162,"line_end":162,"column_start":1,"column_end":41}},{"value":"/ [rt]: runtime/index.html#basic-scheduler","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6271,"byte_end":6315,"line_start":163,"line_end":163,"column_start":1,"column_end":45}},{"value":"/ [rt-multi-thread]: runtime/index.html#threaded-scheduler","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6316,"byte_end":6376,"line_start":164,"line_end":164,"column_start":1,"column_end":61}},{"value":"/ [rt-features]: runtime/index.html#runtime-scheduler","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6377,"byte_end":6432,"line_start":165,"line_end":165,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6433,"byte_end":6436,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ ## CPU-bound tasks and blocking code","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6437,"byte_end":6477,"line_start":167,"line_end":167,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6478,"byte_end":6481,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ Tokio is able to concurrently run many tasks on a few threads by repeatedly","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6482,"byte_end":6561,"line_start":169,"line_end":169,"column_start":1,"column_end":80}},{"value":"/ swapping the currently running task on each thread. However, this kind of","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6562,"byte_end":6639,"line_start":170,"line_end":170,"column_start":1,"column_end":78}},{"value":"/ swapping can only happen at `.await` points, so code that spends a long time","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6640,"byte_end":6720,"line_start":171,"line_end":171,"column_start":1,"column_end":81}},{"value":"/ without reaching an `.await` will prevent other tasks from running. To","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6721,"byte_end":6795,"line_start":172,"line_end":172,"column_start":1,"column_end":75}},{"value":"/ combat this, Tokio provides two kinds of threads: Core threads and blocking","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6796,"byte_end":6875,"line_start":173,"line_end":173,"column_start":1,"column_end":80}},{"value":"/ threads. The core threads are where all asynchronous code runs, and Tokio","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6876,"byte_end":6953,"line_start":174,"line_end":174,"column_start":1,"column_end":78}},{"value":"/ will by default spawn one for each CPU core. The blocking threads are","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":6954,"byte_end":7027,"line_start":175,"line_end":175,"column_start":1,"column_end":74}},{"value":"/ spawned on demand, can be used to run blocking code that would otherwise","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7028,"byte_end":7104,"line_start":176,"line_end":176,"column_start":1,"column_end":77}},{"value":"/ block other tasks from running and are kept alive when not used for a certain","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7105,"byte_end":7186,"line_start":177,"line_end":177,"column_start":1,"column_end":82}},{"value":"/ amount of time which can be configured with [`thread_keep_alive`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7187,"byte_end":7257,"line_start":178,"line_end":178,"column_start":1,"column_end":71}},{"value":"/ Since it is not possible for Tokio to swap out blocking tasks, like it","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7258,"byte_end":7332,"line_start":179,"line_end":179,"column_start":1,"column_end":75}},{"value":"/ can do with asynchronous code, the upper limit on the number of blocking","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7333,"byte_end":7409,"line_start":180,"line_end":180,"column_start":1,"column_end":77}},{"value":"/ threads is very large. These limits can be configured on the [`Builder`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7410,"byte_end":7487,"line_start":181,"line_end":181,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7488,"byte_end":7491,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ To spawn a blocking task, you should use the [`spawn_blocking`] function.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7492,"byte_end":7569,"line_start":183,"line_end":183,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7570,"byte_end":7573,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7574,"byte_end":7614,"line_start":185,"line_end":185,"column_start":1,"column_end":41}},{"value":"/ [`spawn_blocking`]: crate::task::spawn_blocking()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7615,"byte_end":7668,"line_start":186,"line_end":186,"column_start":1,"column_end":54}},{"value":"/ [`thread_keep_alive`]: crate::runtime::Builder::thread_keep_alive()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7669,"byte_end":7740,"line_start":187,"line_end":187,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7741,"byte_end":7744,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7745,"byte_end":7752,"line_start":189,"line_end":189,"column_start":1,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7753,"byte_end":7771,"line_start":190,"line_end":190,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7772,"byte_end":7793,"line_start":191,"line_end":191,"column_start":1,"column_end":22}},{"value":"/     // This is running on a core thread.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7794,"byte_end":7838,"line_start":192,"line_end":192,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7839,"byte_end":7842,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/     let blocking_task = tokio::task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7843,"byte_end":7903,"line_start":194,"line_end":194,"column_start":1,"column_end":61}},{"value":"/         // This is running on a blocking thread.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7904,"byte_end":7956,"line_start":195,"line_end":195,"column_start":1,"column_end":53}},{"value":"/         // Blocking here is ok.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7957,"byte_end":7992,"line_start":196,"line_end":196,"column_start":1,"column_end":36}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":7993,"byte_end":8004,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8005,"byte_end":8008,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/     // We can wait for the blocking task like this:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8009,"byte_end":8064,"line_start":199,"line_end":199,"column_start":1,"column_end":56}},{"value":"/     // If the blocking task panics, the unwrap below will propagate the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8065,"byte_end":8140,"line_start":200,"line_end":200,"column_start":1,"column_end":76}},{"value":"/     // panic.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8141,"byte_end":8158,"line_start":201,"line_end":201,"column_start":1,"column_end":18}},{"value":"/     blocking_task.await.unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8159,"byte_end":8196,"line_start":202,"line_end":202,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8197,"byte_end":8202,"line_start":203,"line_end":203,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8203,"byte_end":8210,"line_start":204,"line_end":204,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8211,"byte_end":8214,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ If your code is CPU-bound and you wish to limit the number of threads used","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8215,"byte_end":8293,"line_start":206,"line_end":206,"column_start":1,"column_end":79}},{"value":"/ to run it, you should run it on another thread pool such as [rayon]. You","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8294,"byte_end":8370,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ can use an [`oneshot`] channel to send the result back to Tokio when the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8371,"byte_end":8447,"line_start":208,"line_end":208,"column_start":1,"column_end":77}},{"value":"/ rayon task finishes.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8448,"byte_end":8472,"line_start":209,"line_end":209,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8473,"byte_end":8476,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ [rayon]: https://docs.rs/rayon","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8477,"byte_end":8511,"line_start":211,"line_end":211,"column_start":1,"column_end":35}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8512,"byte_end":8549,"line_start":212,"line_end":212,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8550,"byte_end":8553,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ ## Asynchronous IO","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8554,"byte_end":8576,"line_start":214,"line_end":214,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8577,"byte_end":8580,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ As well as scheduling and running tasks, Tokio provides everything you need","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8581,"byte_end":8660,"line_start":216,"line_end":216,"column_start":1,"column_end":80}},{"value":"/ to perform input and output asynchronously.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8661,"byte_end":8708,"line_start":217,"line_end":217,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8709,"byte_end":8712,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::io`] module provides Tokio's asynchronous core I/O primitives,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8713,"byte_end":8792,"line_start":219,"line_end":219,"column_start":1,"column_end":80}},{"value":"/ the [`AsyncRead`], [`AsyncWrite`], and [`AsyncBufRead`] traits. In addition,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8793,"byte_end":8873,"line_start":220,"line_end":220,"column_start":1,"column_end":81}},{"value":"/ when the \"io-util\" feature flag is enabled, it also provides combinators and","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8874,"byte_end":8954,"line_start":221,"line_end":221,"column_start":1,"column_end":81}},{"value":"/ functions for working with these traits, forming as an asynchronous","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":8955,"byte_end":9026,"line_start":222,"line_end":222,"column_start":1,"column_end":72}},{"value":"/ counterpart to [`std::io`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9027,"byte_end":9058,"line_start":223,"line_end":223,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9059,"byte_end":9062,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ Tokio also includes APIs for performing various kinds of I/O and interacting","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9063,"byte_end":9143,"line_start":225,"line_end":225,"column_start":1,"column_end":81}},{"value":"/ with the operating system asynchronously. These include:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9144,"byte_end":9204,"line_start":226,"line_end":226,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9205,"byte_end":9208,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ * [`tokio::net`], which contains non-blocking versions of [TCP], [UDP], and","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9209,"byte_end":9288,"line_start":228,"line_end":228,"column_start":1,"column_end":80}},{"value":"/   [Unix Domain Sockets][UDS] (enabled by the \"net\" feature flag),","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9289,"byte_end":9358,"line_start":229,"line_end":229,"column_start":1,"column_end":70}},{"value":"/ * [`tokio::fs`], similar to [`std::fs`] but for performing filesystem I/O","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9359,"byte_end":9436,"line_start":230,"line_end":230,"column_start":1,"column_end":78}},{"value":"/   asynchronously (enabled by the \"fs\" feature flag),","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9437,"byte_end":9493,"line_start":231,"line_end":231,"column_start":1,"column_end":57}},{"value":"/ * [`tokio::signal`], for asynchronously handling Unix and Windows OS signals","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9494,"byte_end":9574,"line_start":232,"line_end":232,"column_start":1,"column_end":81}},{"value":"/   (enabled by the \"signal\" feature flag),","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9575,"byte_end":9620,"line_start":233,"line_end":233,"column_start":1,"column_end":46}},{"value":"/ * [`tokio::process`], for spawning and managing child processes (enabled by","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9621,"byte_end":9700,"line_start":234,"line_end":234,"column_start":1,"column_end":80}},{"value":"/   the \"process\" feature flag).","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9701,"byte_end":9735,"line_start":235,"line_end":235,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9736,"byte_end":9739,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ [`tokio::io`]: crate::io","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9740,"byte_end":9768,"line_start":237,"line_end":237,"column_start":1,"column_end":29}},{"value":"/ [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9769,"byte_end":9808,"line_start":238,"line_end":238,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: crate::io::AsyncWrite","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9809,"byte_end":9850,"line_start":239,"line_end":239,"column_start":1,"column_end":42}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9851,"byte_end":9896,"line_start":240,"line_end":240,"column_start":1,"column_end":46}},{"value":"/ [`std::io`]: std::io","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9897,"byte_end":9921,"line_start":241,"line_end":241,"column_start":1,"column_end":25}},{"value":"/ [`tokio::net`]: crate::net","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9922,"byte_end":9952,"line_start":242,"line_end":242,"column_start":1,"column_end":31}},{"value":"/ [TCP]: crate::net::tcp","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9953,"byte_end":9979,"line_start":243,"line_end":243,"column_start":1,"column_end":27}},{"value":"/ [UDP]: crate::net::UdpSocket","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":9980,"byte_end":10012,"line_start":244,"line_end":244,"column_start":1,"column_end":33}},{"value":"/ [UDS]: crate::net::unix","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10013,"byte_end":10040,"line_start":245,"line_end":245,"column_start":1,"column_end":28}},{"value":"/ [`tokio::fs`]: crate::fs","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10041,"byte_end":10069,"line_start":246,"line_end":246,"column_start":1,"column_end":29}},{"value":"/ [`std::fs`]: std::fs","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10070,"byte_end":10094,"line_start":247,"line_end":247,"column_start":1,"column_end":25}},{"value":"/ [`tokio::signal`]: crate::signal","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10095,"byte_end":10131,"line_start":248,"line_end":248,"column_start":1,"column_end":37}},{"value":"/ [`tokio::process`]: crate::process","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10132,"byte_end":10170,"line_start":249,"line_end":249,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10171,"byte_end":10174,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10175,"byte_end":10189,"line_start":251,"line_end":251,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10190,"byte_end":10193,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ A simple TCP echo server:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10194,"byte_end":10223,"line_start":253,"line_end":253,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10224,"byte_end":10227,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10228,"byte_end":10241,"line_start":255,"line_end":255,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10242,"byte_end":10274,"line_start":256,"line_end":256,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10275,"byte_end":10324,"line_start":257,"line_end":257,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10325,"byte_end":10328,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10329,"byte_end":10347,"line_start":259,"line_end":259,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10348,"byte_end":10411,"line_start":260,"line_end":260,"column_start":1,"column_end":64}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10412,"byte_end":10478,"line_start":261,"line_end":261,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10479,"byte_end":10482,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10483,"byte_end":10497,"line_start":263,"line_end":263,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10498,"byte_end":10557,"line_start":264,"line_end":264,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10558,"byte_end":10561,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10562,"byte_end":10599,"line_start":266,"line_end":266,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10600,"byte_end":10640,"line_start":267,"line_end":267,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10641,"byte_end":10644,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10645,"byte_end":10725,"line_start":269,"line_end":269,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10726,"byte_end":10748,"line_start":270,"line_end":270,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10749,"byte_end":10812,"line_start":271,"line_end":271,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10813,"byte_end":10853,"line_start":272,"line_end":272,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10854,"byte_end":10904,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10905,"byte_end":10940,"line_start":274,"line_end":274,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10941,"byte_end":10976,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/                         eprintln!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":10977,"byte_end":11060,"line_start":276,"line_end":276,"column_start":1,"column_end":84}},{"value":"/                         return;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11061,"byte_end":11096,"line_start":277,"line_end":277,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11097,"byte_end":11122,"line_start":278,"line_end":278,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11123,"byte_end":11145,"line_start":279,"line_end":279,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11146,"byte_end":11149,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11150,"byte_end":11192,"line_start":281,"line_end":281,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11193,"byte_end":11265,"line_start":282,"line_end":282,"column_start":1,"column_end":73}},{"value":"/                     eprintln!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11266,"byte_end":11344,"line_start":283,"line_end":283,"column_start":1,"column_end":79}},{"value":"/                     return;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11345,"byte_end":11376,"line_start":284,"line_end":284,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11377,"byte_end":11398,"line_start":285,"line_end":285,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11399,"byte_end":11416,"line_start":286,"line_end":286,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11417,"byte_end":11432,"line_start":287,"line_end":287,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11433,"byte_end":11442,"line_start":288,"line_end":288,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11443,"byte_end":11448,"line_start":289,"line_end":289,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11449,"byte_end":11456,"line_start":290,"line_end":290,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11457,"byte_end":11460,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ ## Feature flags","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11461,"byte_end":11481,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11482,"byte_end":11485,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ Tokio uses a set of [feature flags] to reduce the amount of compiled code. It","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11486,"byte_end":11567,"line_start":294,"line_end":294,"column_start":1,"column_end":82}},{"value":"/ is possible to just enable certain features over others. By default, Tokio","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11568,"byte_end":11646,"line_start":295,"line_end":295,"column_start":1,"column_end":79}},{"value":"/ does not enable any features but allows one to enable a subset for their use","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11647,"byte_end":11727,"line_start":296,"line_end":296,"column_start":1,"column_end":81}},{"value":"/ case. Below is a list of the available feature flags. You may also notice","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11728,"byte_end":11805,"line_start":297,"line_end":297,"column_start":1,"column_end":78}},{"value":"/ above each function, struct and trait there is listed one or more feature flags","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11806,"byte_end":11889,"line_start":298,"line_end":298,"column_start":1,"column_end":84}},{"value":"/ that are required for that item to be used. If you are new to Tokio it is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11890,"byte_end":11967,"line_start":299,"line_end":299,"column_start":1,"column_end":78}},{"value":"/ recommended that you use the `full` feature flag which will enable all public APIs.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":11968,"byte_end":12055,"line_start":300,"line_end":300,"column_start":1,"column_end":88}},{"value":"/ Beware though that this will pull in many extra dependencies that you may not","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12056,"byte_end":12137,"line_start":301,"line_end":301,"column_start":1,"column_end":82}},{"value":"/ need.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12138,"byte_end":12147,"line_start":302,"line_end":302,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12148,"byte_end":12151,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ - `full`: Enables all Tokio public API features listed below except `test-util`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12152,"byte_end":12236,"line_start":304,"line_end":304,"column_start":1,"column_end":85}},{"value":"/ - `rt`: Enables `tokio::spawn`, the basic (current thread) scheduler,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12237,"byte_end":12310,"line_start":305,"line_end":305,"column_start":1,"column_end":74}},{"value":"/         and non-scheduler utilities.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12311,"byte_end":12351,"line_start":306,"line_end":306,"column_start":1,"column_end":41}},{"value":"/ - `rt-multi-thread`: Enables the heavier, multi-threaded, work-stealing scheduler.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12352,"byte_end":12438,"line_start":307,"line_end":307,"column_start":1,"column_end":87}},{"value":"/ - `io-util`: Enables the IO based `Ext` traits.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12439,"byte_end":12490,"line_start":308,"line_end":308,"column_start":1,"column_end":52}},{"value":"/ - `io-std`: Enable `Stdout`, `Stdin` and `Stderr` types.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12491,"byte_end":12551,"line_start":309,"line_end":309,"column_start":1,"column_end":61}},{"value":"/ - `net`: Enables `tokio::net` types such as `TcpStream`, `UnixStream` and `UdpSocket`,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12552,"byte_end":12642,"line_start":310,"line_end":310,"column_start":1,"column_end":91}},{"value":"/          as well as (on Unix-like systems) `AsyncFd`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12643,"byte_end":12699,"line_start":311,"line_end":311,"column_start":1,"column_end":57}},{"value":"/ - `time`: Enables `tokio::time` types and allows the schedulers to enable","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12700,"byte_end":12777,"line_start":312,"line_end":312,"column_start":1,"column_end":78}},{"value":"/           the built in timer.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12778,"byte_end":12811,"line_start":313,"line_end":313,"column_start":1,"column_end":34}},{"value":"/ - `process`: Enables `tokio::process` types.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12812,"byte_end":12860,"line_start":314,"line_end":314,"column_start":1,"column_end":49}},{"value":"/ - `macros`: Enables `#[tokio::main]` and `#[tokio::test]` macros.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12861,"byte_end":12930,"line_start":315,"line_end":315,"column_start":1,"column_end":70}},{"value":"/ - `sync`: Enables all `tokio::sync` types.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12931,"byte_end":12977,"line_start":316,"line_end":316,"column_start":1,"column_end":47}},{"value":"/ - `signal`: Enables all `tokio::signal` types.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":12978,"byte_end":13028,"line_start":317,"line_end":317,"column_start":1,"column_end":51}},{"value":"/ - `fs`: Enables `tokio::fs` types.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13029,"byte_end":13067,"line_start":318,"line_end":318,"column_start":1,"column_end":39}},{"value":"/ - `test-util`: Enables testing based infrastructure for the Tokio runtime.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13068,"byte_end":13146,"line_start":319,"line_end":319,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13147,"byte_end":13150,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ _Note: `AsyncRead` and `AsyncWrite` traits do not require any features and are","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13151,"byte_end":13233,"line_start":321,"line_end":321,"column_start":1,"column_end":83}},{"value":"/ always available._","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13234,"byte_end":13256,"line_start":322,"line_end":322,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13257,"byte_end":13260,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ ### Internal features","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13261,"byte_end":13286,"line_start":324,"line_end":324,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13287,"byte_end":13290,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ These features do not expose any new API, but influence internal","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13291,"byte_end":13359,"line_start":326,"line_end":326,"column_start":1,"column_end":69}},{"value":"/ implementation aspects of Tokio, and can pull in additional","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13360,"byte_end":13423,"line_start":327,"line_end":327,"column_start":1,"column_end":64}},{"value":"/ dependencies.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13424,"byte_end":13441,"line_start":328,"line_end":328,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13442,"byte_end":13445,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ - `parking_lot`: As a potential optimization, use the _parking_lot_ crate's","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13446,"byte_end":13525,"line_start":330,"line_end":330,"column_start":1,"column_end":80}},{"value":"/ synchronization primitives internally. MSRV may increase according to the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13526,"byte_end":13603,"line_start":331,"line_end":331,"column_start":1,"column_end":78}},{"value":"/ _parking_lot_ release in use.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13604,"byte_end":13637,"line_start":332,"line_end":332,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13638,"byte_end":13641,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/ ### Unstable features","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13642,"byte_end":13667,"line_start":334,"line_end":334,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13668,"byte_end":13671,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ These feature flags enable **unstable** features. The public API may break in 1.x","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13672,"byte_end":13757,"line_start":336,"line_end":336,"column_start":1,"column_end":86}},{"value":"/ releases. To enable these features, the `--cfg tokio_unstable` must be passed to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13758,"byte_end":13842,"line_start":337,"line_end":337,"column_start":1,"column_end":85}},{"value":"/ `rustc` when compiling. This is easiest done using the `RUSTFLAGS` env variable:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13843,"byte_end":13927,"line_start":338,"line_end":338,"column_start":1,"column_end":85}},{"value":"/ `RUSTFLAGS=\"--cfg tokio_unstable\"`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13928,"byte_end":13967,"line_start":339,"line_end":339,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13968,"byte_end":13971,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/ - `tracing`: Enables tracing events.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":13972,"byte_end":14012,"line_start":341,"line_end":341,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14013,"byte_end":14016,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14017,"byte_end":14114,"line_start":343,"line_end":343,"column_start":1,"column_end":98}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":703},{"krate":0,"index":707},{"krate":0,"index":709},{"krate":0,"index":75}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14303,"byte_end":14315,"line_start":349,"line_end":349,"column_start":1,"column_end":13}},{"value":"allow(unused_macros)","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\mod.rs","byte_start":17608,"byte_end":17628,"line_start":1,"line_end":1,"column_start":36,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\support.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"support","qualname":"::macros::support","value":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\support.rs","parent":null,"children":[{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":716},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":32363,"byte_end":32369,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":32328,"byte_end":32358,"line_start":11,"line_end":11,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":719},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":32423,"byte_end":32427,"line_start":14,"line_end":14,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":32380,"byte_end":32418,"line_start":13,"line_end":13,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":722},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":32589,"byte_end":32593,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":32446,"byte_end":32512,"line_start":15,"line_end":15,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":32517,"byte_end":32584,"line_start":16,"line_end":16,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":714},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":32299,"byte_end":32308,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> {\n\n    /// A not-yet-completed future\n    Future(Fut),\n\n    /// The output of the completed future\n    Done(Fut::Output),\n\n    /// The empty variant after the result of a [`MaybeDone`] has been\n    /// taken using the [`take_output`](MaybeDone::take_output) method.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":716},{"krate":0,"index":719},{"krate":0,"index":722}],"decl_id":null,"docs":" A future that may have completed.\n","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":32235,"byte_end":32272,"line_start":8,"line_end":8,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":32756,"byte_end":32766,"line_start":24,"line_end":24,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":32711,"byte_end":32748,"line_start":23,"line_end":23,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":33169,"byte_end":33179,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":32885,"byte_end":32970,"line_start":29,"line_end":29,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":32975,"byte_end":33046,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":33051,"byte_end":33124,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":33129,"byte_end":33157,"line_start":32,"line_end":32,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":33557,"byte_end":33568,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempts to take the output of a `MaybeDone` without driving it","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":33436,"byte_end":33503,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ towards completion.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":33508,"byte_end":33531,"line_start":44,"line_end":44,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":33536,"byte_end":33545,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\poll_fn.rs","byte_start":34802,"byte_end":34808,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":108}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\poll_fn.rs","byte_start":34750,"byte_end":34790,"line_start":10,"line_end":10,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\poll_fn.rs","byte_start":34938,"byte_end":34945,"line_start":18,"line_end":18,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].\n","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\poll_fn.rs","byte_start":34859,"byte_end":34930,"line_start":17,"line_end":17,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":745},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\ready.rs","byte_start":8378337,"byte_end":8378342,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ok`](ok()) function.","sig":null,"attributes":[{"value":"/ Future for the [`ok`](ok()) function.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\ready.rs","byte_start":8378108,"byte_end":8378149,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\ready.rs","byte_start":8378150,"byte_end":8378153,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `pub` in order to use the future as an associated type in a sealed trait.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\ready.rs","byte_start":8378154,"byte_end":8378231,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"allow(unreachable_pub)","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\ready.rs","byte_start":8378300,"byte_end":8378325,"line_start":10,"line_end":10,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":806},{"krate":0,"index":1191},{"krate":0,"index":1192},{"krate":0,"index":1193},{"krate":0,"index":1029},{"krate":0,"index":1055},{"krate":0,"index":1216},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1311},{"krate":0,"index":1312},{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1316},{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1322}],"decl_id":null,"docs":" Traits, helpers, and type definitions for asynchronous I/O functionality.","sig":null,"attributes":[{"value":"/ Traits, helpers, and type definitions for asynchronous I/O functionality.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35459,"byte_end":35536,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35537,"byte_end":35540,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. Primarily, it","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35541,"byte_end":35612,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/ defines two traits, [`AsyncRead`] and [`AsyncWrite`], which are asynchronous","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35613,"byte_end":35693,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ versions of the [`Read`] and [`Write`] traits in the standard library.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35694,"byte_end":35768,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35769,"byte_end":35772,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # AsyncRead and AsyncWrite","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35773,"byte_end":35803,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35804,"byte_end":35807,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Like the standard library's [`Read`] and [`Write`] traits, [`AsyncRead`] and","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35808,"byte_end":35888,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`] provide the most general interface for reading and writing","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35889,"byte_end":35966,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ input and output. Unlike the standard library's traits, however, they are","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":35967,"byte_end":36044,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ _asynchronous_ &mdash; meaning that reading from or writing to a `tokio::io`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36045,"byte_end":36125,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ type will _yield_ to the Tokio scheduler when IO is not ready, rather than","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36126,"byte_end":36204,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ blocking. This allows other tasks to run while waiting on IO.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36205,"byte_end":36270,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36271,"byte_end":36274,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Another difference is that `AsyncRead` and `AsyncWrite` only contain","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36275,"byte_end":36347,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ core methods needed to provide asynchronous reading and writing","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36348,"byte_end":36415,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/ functionality. Instead, utility methods are defined in the [`AsyncReadExt`]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36416,"byte_end":36495,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ and [`AsyncWriteExt`] extension traits. These traits are automatically","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36496,"byte_end":36570,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ implemented for all values that implement `AsyncRead` and `AsyncWrite`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36571,"byte_end":36645,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ respectively.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36646,"byte_end":36663,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36664,"byte_end":36667,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ End users will rarely interact directly with `AsyncRead` and","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36668,"byte_end":36732,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `AsyncWrite`. Instead, they will use the async functions defined in the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36733,"byte_end":36808,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ extension traits. Library authors are expected to implement `AsyncRead`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36809,"byte_end":36884,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ and `AsyncWrite` in order to provide types that behave like byte streams.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36885,"byte_end":36962,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36963,"byte_end":36966,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Even with these differences, Tokio's `AsyncRead` and `AsyncWrite` traits","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":36967,"byte_end":37043,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ can be used in almost exactly the same manner as the standard library's","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37044,"byte_end":37119,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ `Read` and `Write`. Most types in the standard library that implement `Read`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37120,"byte_end":37200,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ and `Write` have asynchronous equivalents in `tokio` that implement","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37201,"byte_end":37272,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ `AsyncRead` and `AsyncWrite`, such as [`File`] and [`TcpStream`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37273,"byte_end":37342,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37343,"byte_end":37346,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ For example, the standard library documentation introduces `Read` by","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37347,"byte_end":37419,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ [demonstrating][std_example] reading some bytes from a [`std::fs::File`]. We","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37420,"byte_end":37500,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ can do the same with [`tokio::fs::File`][`File`]:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37501,"byte_end":37554,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37555,"byte_end":37558,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37559,"byte_end":37572,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncReadExt};","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37573,"byte_end":37613,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37614,"byte_end":37638,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37639,"byte_end":37642,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37643,"byte_end":37661,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37662,"byte_end":37701,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/     let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37702,"byte_end":37751,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"/     let mut buffer = [0; 10];","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37752,"byte_end":37785,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37786,"byte_end":37789,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     // read up to 10 bytes","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37790,"byte_end":37820,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/     let n = f.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37821,"byte_end":37864,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37865,"byte_end":37868,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/     println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37869,"byte_end":37919,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37920,"byte_end":37934,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37935,"byte_end":37940,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37941,"byte_end":37948,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37949,"byte_end":37952,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`File`]: crate::fs::File","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37953,"byte_end":37982,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/ [`TcpStream`]: crate::net::TcpStream","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":37983,"byte_end":38023,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/ [`std::fs::File`]: std::fs::File","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38024,"byte_end":38060,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ [std_example]: std::io#read-and-write","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38061,"byte_end":38102,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38103,"byte_end":38106,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Buffered Readers and Writers","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38107,"byte_end":38142,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38143,"byte_end":38146,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38147,"byte_end":38228,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"/ making near-constant calls to the operating system. To help with this,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38229,"byte_end":38303,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/ `std::io` comes with [support for _buffered_ readers and writers][stdbuf],","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38304,"byte_end":38382,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ and therefore, `tokio::io` does as well.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38383,"byte_end":38427,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38428,"byte_end":38431,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Tokio provides an async version of the [`std::io::BufRead`] trait,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38432,"byte_end":38502,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/ [`AsyncBufRead`]; and async [`BufReader`] and [`BufWriter`] structs, which","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38503,"byte_end":38581,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ wrap readers and writers. These wrappers use a buffer, reducing the number","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38582,"byte_end":38660,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ of calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38661,"byte_end":38738,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38739,"byte_end":38742,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ For example, [`BufReader`] works with the [`AsyncBufRead`] trait to add","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38743,"byte_end":38818,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ extra methods to any async reader:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38819,"byte_end":38857,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38858,"byte_end":38861,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38862,"byte_end":38875,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufReader, AsyncBufReadExt};","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38876,"byte_end":38930,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38931,"byte_end":38955,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38956,"byte_end":38959,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38960,"byte_end":38978,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":38979,"byte_end":39018,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/     let f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39019,"byte_end":39064,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/     let mut reader = BufReader::new(f);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39065,"byte_end":39108,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/     let mut buffer = String::new();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39109,"byte_end":39148,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39149,"byte_end":39152,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     // read a line into buffer","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39153,"byte_end":39187,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"/     reader.read_line(&mut buffer).await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39188,"byte_end":39233,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39234,"byte_end":39237,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     println!(\"{}\", buffer);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39238,"byte_end":39269,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39270,"byte_end":39284,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39285,"byte_end":39290,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39291,"byte_end":39298,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39299,"byte_end":39302,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39303,"byte_end":39384,"line_start":95,"line_end":95,"column_start":1,"column_end":82}},{"value":"/ to [`write`](crate::io::AsyncWriteExt::write). However, you **must** flush","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39385,"byte_end":39463,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/ [`BufWriter`] to ensure that any buffered data is written.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39464,"byte_end":39526,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39527,"byte_end":39530,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39531,"byte_end":39544,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufWriter, AsyncWriteExt};","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39545,"byte_end":39597,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39598,"byte_end":39622,"line_start":101,"line_end":101,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39623,"byte_end":39626,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39627,"byte_end":39645,"line_start":103,"line_end":103,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39646,"byte_end":39685,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"/     let f = File::create(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39686,"byte_end":39733,"line_start":105,"line_end":105,"column_start":1,"column_end":48}},{"value":"/     {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39734,"byte_end":39743,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"/         let mut writer = BufWriter::new(f);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39744,"byte_end":39791,"line_start":107,"line_end":107,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39792,"byte_end":39795,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         // Write a byte to the buffer.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39796,"byte_end":39838,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"/         writer.write(&[42u8]).await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39839,"byte_end":39880,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39881,"byte_end":39884,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/         // Flush the buffer before it goes out of scope.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39885,"byte_end":39945,"line_start":112,"line_end":112,"column_start":1,"column_end":61}},{"value":"/         writer.flush().await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39946,"byte_end":39980,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39981,"byte_end":39984,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/     } // Unless flushed or shut down, the contents of the buffer is discarded on drop.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":39985,"byte_end":40075,"line_start":115,"line_end":115,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40076,"byte_end":40079,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40080,"byte_end":40094,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40095,"byte_end":40100,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40101,"byte_end":40108,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40109,"byte_end":40112,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ [stdbuf]: std::io#bufreader-and-bufwriter","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40113,"byte_end":40158,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40159,"byte_end":40201,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40202,"byte_end":40247,"line_start":123,"line_end":123,"column_start":1,"column_end":46}},{"value":"/ [`BufReader`]: crate::io::BufReader","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40248,"byte_end":40287,"line_start":124,"line_end":124,"column_start":1,"column_end":40}},{"value":"/ [`BufWriter`]: crate::io::BufWriter","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40288,"byte_end":40327,"line_start":125,"line_end":125,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40328,"byte_end":40331,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ## Implementing AsyncRead and AsyncWrite","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40332,"byte_end":40376,"line_start":127,"line_end":127,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40377,"byte_end":40380,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Because they are traits, we can implement [`AsyncRead`] and [`AsyncWrite`] for","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40381,"byte_end":40463,"line_start":129,"line_end":129,"column_start":1,"column_end":83}},{"value":"/ our own types, as well. Note that these traits must only be implemented for","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40464,"byte_end":40543,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ non-blocking I/O types that integrate with the futures type system. In","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40544,"byte_end":40618,"line_start":131,"line_end":131,"column_start":1,"column_end":75}},{"value":"/ other words, these types must never block the thread, and instead the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40619,"byte_end":40692,"line_start":132,"line_end":132,"column_start":1,"column_end":74}},{"value":"/ current task is notified when the I/O resource is ready.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40693,"byte_end":40753,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40754,"byte_end":40757,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ## Conversion to and from Sink/Stream","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40758,"byte_end":40799,"line_start":135,"line_end":135,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40800,"byte_end":40803,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ It is often convenient to encapsulate the reading and writing of","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40804,"byte_end":40872,"line_start":137,"line_end":137,"column_start":1,"column_end":69}},{"value":"/ bytes and instead work with a [`Sink`] or [`Stream`] of some data","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40873,"byte_end":40942,"line_start":138,"line_end":138,"column_start":1,"column_end":70}},{"value":"/ type that is encoded as bytes and/or decoded from bytes. Tokio","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":40943,"byte_end":41009,"line_start":139,"line_end":139,"column_start":1,"column_end":67}},{"value":"/ provides some utility traits in the [tokio-util] crate that","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41010,"byte_end":41073,"line_start":140,"line_end":140,"column_start":1,"column_end":64}},{"value":"/ abstract the asynchronous buffering that is required and allows","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41074,"byte_end":41141,"line_start":141,"line_end":141,"column_start":1,"column_end":68}},{"value":"/ you to write [`Encoder`] and [`Decoder`] functions working with a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41142,"byte_end":41211,"line_start":142,"line_end":142,"column_start":1,"column_end":70}},{"value":"/ buffer of bytes, and then use that [\"codec\"] to transform anything","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41212,"byte_end":41282,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"/ that implements [`AsyncRead`] and [`AsyncWrite`] into a `Sink`/`Stream` of","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41283,"byte_end":41361,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ your structured data.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41362,"byte_end":41387,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41388,"byte_end":41391,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ [tokio-util]: https://docs.rs/tokio-util/0.6/tokio_util/codec/index.html","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41392,"byte_end":41468,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41469,"byte_end":41472,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ # Standard input and output","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41473,"byte_end":41504,"line_start":149,"line_end":149,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41505,"byte_end":41508,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ Tokio provides asynchronous APIs to standard [input], [output], and [error].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41509,"byte_end":41589,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"/ These APIs are very similar to the ones provided by `std`, but they also","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41590,"byte_end":41666,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"/ implement [`AsyncRead`] and [`AsyncWrite`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41667,"byte_end":41714,"line_start":153,"line_end":153,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41715,"byte_end":41718,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ Note that the standard input / output APIs  **must** be used from the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41719,"byte_end":41792,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"/ context of the Tokio runtime, as they require Tokio-specific features to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41793,"byte_end":41869,"line_start":156,"line_end":156,"column_start":1,"column_end":77}},{"value":"/ function. Calling these functions outside of a Tokio runtime will panic.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41870,"byte_end":41946,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41947,"byte_end":41950,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [input]: fn@stdin","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41951,"byte_end":41972,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/ [output]: fn@stdout","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41973,"byte_end":41996,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/ [error]: fn@stderr","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":41997,"byte_end":42019,"line_start":161,"line_end":161,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42020,"byte_end":42023,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ # `std` re-exports","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42024,"byte_end":42046,"line_start":163,"line_end":163,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42047,"byte_end":42050,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ Additionally, [`Error`], [`ErrorKind`], [`Result`], and [`SeekFrom`] are","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42051,"byte_end":42127,"line_start":165,"line_end":165,"column_start":1,"column_end":77}},{"value":"/ re-exported from `std::io` for ease of use.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42128,"byte_end":42175,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42176,"byte_end":42179,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: trait@AsyncRead","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42180,"byte_end":42214,"line_start":168,"line_end":168,"column_start":1,"column_end":35}},{"value":"/ [`AsyncWrite`]: trait@AsyncWrite","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42215,"byte_end":42251,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"/ [`AsyncReadExt`]: trait@AsyncReadExt","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42252,"byte_end":42292,"line_start":170,"line_end":170,"column_start":1,"column_end":41}},{"value":"/ [`AsyncWriteExt`]: trait@AsyncWriteExt","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42293,"byte_end":42335,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/ [\"codec\"]: https://docs.rs/tokio-util/0.6/tokio_util/codec/index.html","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42336,"byte_end":42409,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"/ [`Encoder`]: https://docs.rs/tokio-util/0.6/tokio_util/codec/trait.Encoder.html","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42410,"byte_end":42493,"line_start":173,"line_end":173,"column_start":1,"column_end":84}},{"value":"/ [`Decoder`]: https://docs.rs/tokio-util/0.6/tokio_util/codec/trait.Decoder.html","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42494,"byte_end":42577,"line_start":174,"line_end":174,"column_start":1,"column_end":84}},{"value":"/ [`Error`]: struct@Error","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42578,"byte_end":42605,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"/ [`ErrorKind`]: enum@ErrorKind","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42606,"byte_end":42639,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"/ [`Result`]: type@Result","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42640,"byte_end":42667,"line_start":177,"line_end":177,"column_start":1,"column_end":28}},{"value":"/ [`Read`]: std::io::Read","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42668,"byte_end":42695,"line_start":178,"line_end":178,"column_start":1,"column_end":28}},{"value":"/ [`SeekFrom`]: enum@SeekFrom","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42696,"byte_end":42727,"line_start":179,"line_end":179,"column_start":1,"column_end":32}},{"value":"/ [`Sink`]: https://docs.rs/futures/0.3/futures/sink/trait.Sink.html","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42728,"byte_end":42798,"line_start":180,"line_end":180,"column_start":1,"column_end":71}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.3/futures/stream/trait.Stream.html","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42799,"byte_end":42875,"line_start":181,"line_end":181,"column_start":1,"column_end":77}},{"value":"/ [`Write`]: std::io::Write","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\mod.rs","byte_start":42876,"byte_end":42905,"line_start":182,"line_end":182,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45583,"byte_end":45595,"line_start":23,"line_end":23,"column_start":11,"column_end":23},"name":"AsyncBufRead","qualname":"::io::async_buf_read::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134}],"decl_id":null,"docs":" Reads bytes asynchronously.","sig":null,"attributes":[{"value":"/ Reads bytes asynchronously.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":44906,"byte_end":44937,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":44938,"byte_end":44941,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to [`std::io::BufRead`], but integrates with","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":44942,"byte_end":45014,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ the asynchronous task system. In particular, the [`poll_fill_buf`] method,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45015,"byte_end":45093,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ unlike [`BufRead::fill_buf`], will automatically queue the current task for wakeup","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45094,"byte_end":45180,"line_start":12,"line_end":12,"column_start":1,"column_end":87}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45181,"byte_end":45258,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45259,"byte_end":45270,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45271,"byte_end":45274,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncBufRead` values are provided by","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45275,"byte_end":45343,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ [`AsyncBufReadExt`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45344,"byte_end":45368,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45369,"byte_end":45372,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45373,"byte_end":45415,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45416,"byte_end":45466,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ [`BufRead::fill_buf`]: std::io::BufRead::fill_buf","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45467,"byte_end":45520,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ [`AsyncBufReadExt`]: crate::io::AsyncBufReadExt","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45521,"byte_end":45572,"line_start":22,"line_end":22,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46693,"byte_end":46706,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"::io::async_buf_read::AsyncBufRead::poll_fill_buf","value":"pub fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Attempts to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempts to return the contents of the internal buffer, filling it with more data","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45613,"byte_end":45698,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45703,"byte_end":45744,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45749,"byte_end":45752,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45757,"byte_end":45804,"line_start":27,"line_end":27,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45809,"byte_end":45812,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45817,"byte_end":45876,"line_start":29,"line_end":29,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45881,"byte_end":45939,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45944,"byte_end":46025,"line_start":31,"line_end":31,"column_start":5,"column_end":86}},{"value":"/ readable or is closed.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46030,"byte_end":46056,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46061,"byte_end":46064,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46069,"byte_end":46140,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46145,"byte_end":46207,"line_start":35,"line_end":35,"column_start":5,"column_end":67}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46212,"byte_end":46283,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46288,"byte_end":46369,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46374,"byte_end":46450,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46455,"byte_end":46506,"line_start":39,"line_end":39,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46511,"byte_end":46514,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46519,"byte_end":46590,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46595,"byte_end":46598,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46603,"byte_end":46642,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46647,"byte_end":46685,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":47609,"byte_end":47616,"line_start":62,"line_end":62,"column_start":8,"column_end":15},"name":"consume","qualname":"::io::async_buf_read::AsyncBufRead::consume","value":"pub fn consume(Pin<&mut Self>, usize)","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46784,"byte_end":46858,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46863,"byte_end":46930,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46935,"byte_end":46938,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":46943,"byte_end":47014,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":47019,"byte_end":47088,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":47093,"byte_end":47167,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":47172,"byte_end":47249,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":47254,"byte_end":47324,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":47329,"byte_end":47382,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":47387,"byte_end":47390,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":47395,"byte_end":47467,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":47472,"byte_end":47494,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":47499,"byte_end":47502,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":47507,"byte_end":47546,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":47551,"byte_end":47601,"line_start":61,"line_end":61,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50930,"byte_end":50939,"line_start":43,"line_end":43,"column_start":11,"column_end":20},"name":"AsyncRead","qualname":"::io::async_read::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":161}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"/ Reads bytes from a source.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49243,"byte_end":49273,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49274,"byte_end":49277,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Read`] trait, but integrates with","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49278,"byte_end":49357,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ the asynchronous task system. In particular, the [`poll_read`] method,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49358,"byte_end":49432,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ unlike [`Read::read`], will automatically queue the current task for wakeup","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49433,"byte_end":49512,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49513,"byte_end":49590,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49591,"byte_end":49602,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49603,"byte_end":49606,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_read` function will return one of","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49607,"byte_end":49684,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ the following:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49685,"byte_end":49703,"line_start":16,"line_end":16,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49704,"byte_end":49707,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(()))` means that data was immediately read and placed into","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49708,"byte_end":49788,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/   the output buffer. The amount of data read can be determined by the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49789,"byte_end":49862,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/   increase in the length of the slice returned by `ReadBuf::filled`. If the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49863,"byte_end":49942,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   difference is 0, EOF has been reached.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49943,"byte_end":49987,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49988,"byte_end":49991,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was read into the buffer","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":49992,"byte_end":50057,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/   provided. The I/O object is not currently readable but may become readable","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50058,"byte_end":50138,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50139,"byte_end":50218,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is readable**. This means that like","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50219,"byte_end":50292,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50293,"byte_end":50366,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   readable again.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50367,"byte_end":50388,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50389,"byte_end":50392,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50393,"byte_end":50477,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50478,"byte_end":50502,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50503,"byte_end":50506,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `read` method only works in the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50507,"byte_end":50580,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50581,"byte_end":50660,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50661,"byte_end":50664,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncRead` values are provided by","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50665,"byte_end":50730,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ [`AsyncReadExt`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50731,"byte_end":50752,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50753,"byte_end":50756,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50757,"byte_end":50796,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ [`std::io::Read`]: std::io::Read","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50797,"byte_end":50833,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/ [`Read::read`]: std::io::Read::read","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50834,"byte_end":50873,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ [`AsyncReadExt`]: crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50874,"byte_end":50919,"line_start":42,"line_end":42,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":51429,"byte_end":51438,"line_start":53,"line_end":53,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::io::async_read::AsyncRead::poll_read","value":"pub fn poll_read(Pin<&mut Self>, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":160},"children":[],"decl_id":null,"docs":" Attempts to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempts to read from the `AsyncRead` into `buf`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":50946,"byte_end":50999,"line_start":44,"line_end":44,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":51004,"byte_end":51007,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))` and fills `buf` with data","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":51012,"byte_end":51083,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ read. If no data was read (`buf.filled().is_empty()`) it implies that","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":51088,"byte_end":51161,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ EOF has been reached.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":51166,"byte_end":51191,"line_start":48,"line_end":48,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":51196,"byte_end":51199,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns `Poll::Pending`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":51204,"byte_end":51279,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ and arranges for the current task (via `cx.waker()`) to receive a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":51284,"byte_end":51353,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ notification when the object becomes readable or is closed.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":51358,"byte_end":51421,"line_start":52,"line_end":52,"column_start":5,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54034,"byte_end":54043,"line_start":18,"line_end":18,"column_start":11,"column_end":20},"name":"AsyncSeek","qualname":"::io::async_seek::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":53552,"byte_end":53582,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":53583,"byte_end":53586,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Seek`] trait, but integrates","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":53587,"byte_end":53661,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ with the asynchronous task system. In particular, the `start_seek`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":53662,"byte_end":53732,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ method, unlike [`Seek::seek`], will not block the calling thread.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":53733,"byte_end":53802,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":53803,"byte_end":53806,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncSeek` values are provided by","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":53807,"byte_end":53872,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ [`AsyncSeekExt`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":53873,"byte_end":53894,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":53895,"byte_end":53898,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Seek`]: std::io::Seek","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":53899,"byte_end":53935,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ [`Seek::seek`]: std::io::Seek::seek()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":53936,"byte_end":53977,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [`AsyncSeekExt`]: crate::io::AsyncSeekExt","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":53978,"byte_end":54023,"line_start":17,"line_end":17,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54685,"byte_end":54695,"line_start":33,"line_end":33,"column_start":8,"column_end":18},"name":"start_seek","qualname":"::io::async_seek::AsyncSeek::start_seek","value":"pub fn start_seek(Pin<&mut Self>, SeekFrom) -> io::Result<()>","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":" Attempts to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempts to seek to an offset, in bytes, in a stream.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54050,"byte_end":54107,"line_start":19,"line_end":19,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54112,"byte_end":54115,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54120,"byte_end":54193,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ by the implementation.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54198,"byte_end":54224,"line_start":22,"line_end":22,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54229,"byte_end":54232,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If this function returns successfully, then the job has been submitted.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54237,"byte_end":54312,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ To find out when it completes, call `poll_complete`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54317,"byte_end":54373,"line_start":25,"line_end":25,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54378,"byte_end":54381,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54386,"byte_end":54398,"line_start":27,"line_end":27,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54403,"byte_end":54406,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This function can return [`io::ErrorKind::Other`] in case there is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54411,"byte_end":54481,"line_start":29,"line_end":29,"column_start":5,"column_end":75}},{"value":"/ another seek in progress. To avoid this, it is advisable that any call","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54486,"byte_end":54560,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ to `start_seek` is preceded by a call to `poll_complete` to ensure all","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54565,"byte_end":54639,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ pending seeks have completed.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54644,"byte_end":54677,"line_start":32,"line_end":32,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":55218,"byte_end":55231,"line_start":46,"line_end":46,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"::io::async_seek::AsyncSeek::poll_complete","value":"pub fn poll_complete(Pin<&mut Self>, &mut Context) -> Poll<io::Result<u64>>","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":" Waits for a seek operation to complete.","sig":null,"attributes":[{"value":"/ Waits for a seek operation to complete.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54762,"byte_end":54805,"line_start":35,"line_end":35,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54810,"byte_end":54813,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54818,"byte_end":54867,"line_start":37,"line_end":37,"column_start":5,"column_end":54}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54872,"byte_end":54942,"line_start":38,"line_end":38,"column_start":5,"column_end":75}},{"value":"/ That position can be used later with [`SeekFrom::Start`]. Repeatedly","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":54947,"byte_end":55019,"line_start":39,"line_end":39,"column_start":5,"column_end":77}},{"value":"/ calling this function without calling `start_seek` might return the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":55024,"byte_end":55095,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ same result.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":55100,"byte_end":55116,"line_start":41,"line_end":41,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":55121,"byte_end":55124,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":55129,"byte_end":55141,"line_start":43,"line_end":43,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":55146,"byte_end":55149,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":55154,"byte_end":55210,"line_start":45,"line_end":45,"column_start":5,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58522,"byte_end":58532,"line_start":45,"line_end":45,"column_start":11,"column_end":21},"name":"AsyncWrite","qualname":"::io::async_write::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":218}],"decl_id":null,"docs":" Writes bytes asynchronously.","sig":null,"attributes":[{"value":"/ Writes bytes asynchronously.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":56659,"byte_end":56691,"line_start":6,"line_end":6,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":56692,"byte_end":56695,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The trait inherits from [`std::io::Write`] and indicates that an I/O object is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":56696,"byte_end":56778,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ **nonblocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":56779,"byte_end":56854,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ bytes cannot be written instead of blocking the current thread.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":56855,"byte_end":56922,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":56923,"byte_end":56926,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the [`poll_write`] function will return one of","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":56927,"byte_end":57007,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ the following:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57008,"byte_end":57026,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57027,"byte_end":57030,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57031,"byte_end":57102,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/   written.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57103,"byte_end":57117,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57118,"byte_end":57121,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was written from the buffer","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57122,"byte_end":57190,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/   provided. The I/O object is not currently writable but may become writable","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57191,"byte_end":57271,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57272,"byte_end":57351,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is writable**. This means that like","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57352,"byte_end":57425,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57426,"byte_end":57499,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   writable again.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57500,"byte_end":57521,"line_start":23,"line_end":23,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57522,"byte_end":57525,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57526,"byte_end":57610,"line_start":25,"line_end":25,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57611,"byte_end":57635,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57636,"byte_end":57639,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the [`write`][stdwrite] method only works in","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57640,"byte_end":57722,"line_start":28,"line_end":28,"column_start":1,"column_end":83}},{"value":"/ the context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57723,"byte_end":57806,"line_start":29,"line_end":29,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57807,"byte_end":57810,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Note that this trait also represents that the  [`Write::flush`][stdflush] method","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57811,"byte_end":57895,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/ works very similarly to the `write` method, notably that `Ok(())` means that the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57896,"byte_end":57980,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/ writer has successfully been flushed, a \"would block\" error means that the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":57981,"byte_end":58059,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ current task is ready to receive a notification when flushing can make more","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58060,"byte_end":58139,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ progress, and otherwise normal errors can happen as well.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58140,"byte_end":58201,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58202,"byte_end":58205,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncWrite` values are provided by","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58206,"byte_end":58272,"line_start":37,"line_end":37,"column_start":1,"column_end":67}},{"value":"/ [`AsyncWriteExt`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58273,"byte_end":58295,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58296,"byte_end":58299,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Write`]: std::io::Write","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58300,"byte_end":58338,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58339,"byte_end":58383,"line_start":41,"line_end":41,"column_start":1,"column_end":45}},{"value":"/ [stdwrite]: std::io::Write::write()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58384,"byte_end":58423,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/ [stdflush]: std::io::Write::flush()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58424,"byte_end":58463,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWriteExt`]: crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58464,"byte_end":58511,"line_start":44,"line_end":44,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58916,"byte_end":58926,"line_start":54,"line_end":54,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::io::async_write::AsyncWrite::poll_write","value":"pub fn poll_write(Pin<&mut Self>, &mut Context, &[u8])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":211},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58539,"byte_end":58593,"line_start":46,"line_end":46,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58598,"byte_end":58601,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58606,"byte_end":58667,"line_start":48,"line_end":48,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58672,"byte_end":58675,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58680,"byte_end":58742,"line_start":50,"line_end":50,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58747,"byte_end":58805,"line_start":51,"line_end":51,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58810,"byte_end":58877,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":58882,"byte_end":58908,"line_start":53,"line_end":53,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59467,"byte_end":59477,"line_start":69,"line_end":69,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"::io::async_write::AsyncWrite::poll_flush","value":"pub fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":211},"children":[],"decl_id":null,"docs":" Attempts to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempts to flush the object, ensuring that any buffered data reach","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59054,"byte_end":59125,"line_start":60,"line_end":60,"column_start":5,"column_end":76}},{"value":"/ their destination.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59130,"byte_end":59152,"line_start":61,"line_end":61,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59157,"byte_end":59160,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59165,"byte_end":59211,"line_start":63,"line_end":63,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59216,"byte_end":59219,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59224,"byte_end":59288,"line_start":65,"line_end":65,"column_start":5,"column_end":69}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59293,"byte_end":59351,"line_start":66,"line_end":66,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object can make","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59356,"byte_end":59424,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/ progress towards flushing.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59429,"byte_end":59459,"line_start":68,"line_end":68,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62763,"byte_end":62776,"line_start":129,"line_end":129,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"::io::async_write::AsyncWrite::poll_shutdown","value":"pub fn poll_shutdown(Pin<&mut Self>, &mut Context)\n-> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":211},"children":[],"decl_id":null,"docs":" Initiates or attempts to shut down this writer, returning success when\n the I/O connection has completely shut down.","sig":null,"attributes":[{"value":"/ Initiates or attempts to shut down this writer, returning success when","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59559,"byte_end":59633,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ the I/O connection has completely shut down.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59638,"byte_end":59686,"line_start":72,"line_end":72,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59691,"byte_end":59694,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method is intended to be used for asynchronous shutdown of I/O","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59699,"byte_end":59770,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ connections. For example this is suitable for implementing shutdown of a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59775,"byte_end":59851,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/ TLS connection or calling `TcpStream::shutdown` on a proxied connection.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59856,"byte_end":59932,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ Protocols sometimes need to flush out final pieces of data or otherwise","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":59937,"byte_end":60012,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ perform a graceful shutdown handshake, reading/writing more data as","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60017,"byte_end":60088,"line_start":78,"line_end":78,"column_start":5,"column_end":76}},{"value":"/ appropriate. This method is the hook for such protocols to implement the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60093,"byte_end":60169,"line_start":79,"line_end":79,"column_start":5,"column_end":81}},{"value":"/ graceful shutdown logic.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60174,"byte_end":60202,"line_start":80,"line_end":80,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60207,"byte_end":60210,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This `shutdown` method is required by implementers of the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60215,"byte_end":60276,"line_start":82,"line_end":82,"column_start":5,"column_end":66}},{"value":"/ `AsyncWrite` trait. Wrappers typically just want to proxy this call","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60281,"byte_end":60352,"line_start":83,"line_end":83,"column_start":5,"column_end":76}},{"value":"/ through to the wrapped type, and base types will typically implement","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60357,"byte_end":60429,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ shutdown logic here or just return `Ok(().into())`. Note that if you're","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60434,"byte_end":60509,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ wrapping an underlying `AsyncWrite` a call to `shutdown` implies that","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60514,"byte_end":60587,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ transitively the entire stream has been shut down. After your wrapper's","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60592,"byte_end":60667,"line_start":87,"line_end":87,"column_start":5,"column_end":80}},{"value":"/ shutdown logic has been executed you should shut down the underlying","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60672,"byte_end":60744,"line_start":88,"line_end":88,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60749,"byte_end":60760,"line_start":89,"line_end":89,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60765,"byte_end":60768,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Invocation of a `shutdown` implies an invocation of `flush`. Once this","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60773,"byte_end":60847,"line_start":91,"line_end":91,"column_start":5,"column_end":79}},{"value":"/ method returns `Ready` it implies that a flush successfully happened","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60852,"byte_end":60924,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/ before the shutdown happened. That is, callers don't need to call","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":60929,"byte_end":60998,"line_start":93,"line_end":93,"column_start":5,"column_end":74}},{"value":"/ `flush` before calling `shutdown`. They can rely that by calling","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61003,"byte_end":61071,"line_start":94,"line_end":94,"column_start":5,"column_end":73}},{"value":"/ `shutdown` any pending buffered data will be written out.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61076,"byte_end":61137,"line_start":95,"line_end":95,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61142,"byte_end":61145,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61150,"byte_end":61168,"line_start":97,"line_end":97,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61173,"byte_end":61176,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This function returns a `Poll<io::Result<()>>` classified as such:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61181,"byte_end":61251,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61256,"byte_end":61259,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(()))` - indicates that the connection was","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61264,"byte_end":61327,"line_start":101,"line_end":101,"column_start":5,"column_end":68}},{"value":"/   successfully shut down and is now safe to deallocate/drop/close","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61332,"byte_end":61401,"line_start":102,"line_end":102,"column_start":5,"column_end":74}},{"value":"/   resources associated with it. This method means that the current task","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61406,"byte_end":61481,"line_start":103,"line_end":103,"column_start":5,"column_end":80}},{"value":"/   will no longer receive any notifications due to this method and the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61486,"byte_end":61559,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/   I/O object itself is likely no longer usable.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61564,"byte_end":61615,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61620,"byte_end":61623,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` - indicates that shutdown is initiated but could","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61628,"byte_end":61698,"line_start":107,"line_end":107,"column_start":5,"column_end":75}},{"value":"/   not complete just yet. This may mean that more I/O needs to happen to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61703,"byte_end":61778,"line_start":108,"line_end":108,"column_start":5,"column_end":80}},{"value":"/   continue this shutdown operation. The current task is scheduled to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61783,"byte_end":61855,"line_start":109,"line_end":109,"column_start":5,"column_end":77}},{"value":"/   receive a notification when it's otherwise ready to continue the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61860,"byte_end":61930,"line_start":110,"line_end":110,"column_start":5,"column_end":75}},{"value":"/   shutdown operation. When woken up this method should be called again.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":61935,"byte_end":62010,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62015,"byte_end":62018,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(e))` - indicates a fatal error has happened with shutdown,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62023,"byte_end":62104,"line_start":113,"line_end":113,"column_start":5,"column_end":86}},{"value":"/   indicating that the shutdown operation did not complete successfully.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62109,"byte_end":62184,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/   This typically means that the I/O object is no longer usable.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62189,"byte_end":62256,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62261,"byte_end":62264,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62269,"byte_end":62281,"line_start":117,"line_end":117,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62286,"byte_end":62289,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This function can return normal I/O errors through `Err`, described","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62294,"byte_end":62365,"line_start":119,"line_end":119,"column_start":5,"column_end":76}},{"value":"/ above. Additionally this method may also render the underlying","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62370,"byte_end":62436,"line_start":120,"line_end":120,"column_start":5,"column_end":71}},{"value":"/ `Write::write` method no longer usable (e.g. will return errors in the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62441,"byte_end":62515,"line_start":121,"line_end":121,"column_start":5,"column_end":79}},{"value":"/ future). It's recommended that once `shutdown` is called the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62520,"byte_end":62584,"line_start":122,"line_end":122,"column_start":5,"column_end":69}},{"value":"/ `write` method is no longer called.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62589,"byte_end":62628,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62633,"byte_end":62636,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62641,"byte_end":62653,"line_start":125,"line_end":125,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62658,"byte_end":62661,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a future's","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62666,"byte_end":62741,"line_start":127,"line_end":127,"column_start":5,"column_end":80}},{"value":"/ task.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62746,"byte_end":62755,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63889,"byte_end":63908,"line_start":154,"line_end":154,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"::io::async_write::AsyncWrite::poll_write_vectored","value":"pub fn poll_write_vectored(Pin<&mut Self>, &mut Context, &[IoSlice])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":211},"children":[],"decl_id":null,"docs":" Like [`poll_write`], except that it writes from a slice of buffers.","sig":null,"attributes":[{"value":"/ Like [`poll_write`], except that it writes from a slice of buffers.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62858,"byte_end":62929,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62934,"byte_end":62937,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Data is copied from each buffer in order, with the final buffer","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":62942,"byte_end":63009,"line_start":133,"line_end":133,"column_start":5,"column_end":72}},{"value":"/ read from possibly being only partially consumed. This method must","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63014,"byte_end":63084,"line_start":134,"line_end":134,"column_start":5,"column_end":75}},{"value":"/ behave as a call to [`write`] with the buffers concatenated would.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63089,"byte_end":63159,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63164,"byte_end":63167,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ The default implementation calls [`poll_write`] with either the first nonempty","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63172,"byte_end":63254,"line_start":137,"line_end":137,"column_start":5,"column_end":87}},{"value":"/ buffer provided, or an empty one if none exists.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63259,"byte_end":63311,"line_start":138,"line_end":138,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63316,"byte_end":63319,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63324,"byte_end":63385,"line_start":140,"line_end":140,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63390,"byte_end":63393,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63398,"byte_end":63460,"line_start":142,"line_end":142,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63465,"byte_end":63523,"line_start":143,"line_end":143,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63528,"byte_end":63595,"line_start":144,"line_end":144,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63600,"byte_end":63626,"line_start":145,"line_end":145,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63631,"byte_end":63634,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63639,"byte_end":63649,"line_start":147,"line_end":147,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63654,"byte_end":63657,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ This should be implemented as a single \"atomic\" write action. If any","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63662,"byte_end":63734,"line_start":149,"line_end":149,"column_start":5,"column_end":77}},{"value":"/ data has been partially written, it is wrong to return an error or","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63739,"byte_end":63809,"line_start":150,"line_end":150,"column_start":5,"column_end":75}},{"value":"/ pending.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63814,"byte_end":63826,"line_start":151,"line_end":151,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63831,"byte_end":63834,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":63839,"byte_end":63881,"line_start":153,"line_end":153,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":64676,"byte_end":64693,"line_start":176,"line_end":176,"column_start":8,"column_end":25},"name":"is_write_vectored","qualname":"::io::async_write::AsyncWrite::is_write_vectored","value":"pub fn is_write_vectored(&Self) -> bool","parent":{"krate":0,"index":211},"children":[],"decl_id":null,"docs":" Determines if this writer has an efficient [`poll_write_vectored`]\n implementation.","sig":null,"attributes":[{"value":"/ Determines if this writer has an efficient [`poll_write_vectored`]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":64206,"byte_end":64276,"line_start":166,"line_end":166,"column_start":5,"column_end":75}},{"value":"/ implementation.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":64281,"byte_end":64300,"line_start":167,"line_end":167,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":64305,"byte_end":64308,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ If a writer does not override the default [`poll_write_vectored`]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":64313,"byte_end":64382,"line_start":169,"line_end":169,"column_start":5,"column_end":74}},{"value":"/ implementation, code using it may want to avoid the method all together","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":64387,"byte_end":64462,"line_start":170,"line_end":170,"column_start":5,"column_end":80}},{"value":"/ and coalesce writes into a single buffer for higher performance.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":64467,"byte_end":64535,"line_start":171,"line_end":171,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":64540,"byte_end":64543,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The default implementation returns `false`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":64548,"byte_end":64595,"line_start":173,"line_end":173,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":64600,"byte_end":64603,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`poll_write_vectored`]: AsyncWrite::poll_write_vectored","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":64608,"byte_end":64668,"line_start":175,"line_end":175,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71933,"byte_end":71940,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"ReadBuf","qualname":"::io::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271}],"decl_id":null,"docs":" A wrapper around a byte buffer that is incrementally filled and initialized.","sig":null,"attributes":[{"value":"/ A wrapper around a byte buffer that is incrementally filled and initialized.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":70985,"byte_end":71065,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71066,"byte_end":71069,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a sort of \"double cursor\". It tracks three regions in the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71070,"byte_end":71144,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ buffer: a region at the beginning of the buffer that has been logically","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71145,"byte_end":71220,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ filled with data, a region that has been initialized at some point but not","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71221,"byte_end":71299,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ yet logically filled, and a region at the end that may be uninitialized.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71300,"byte_end":71376,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ The filled region is guaranteed to be a subset of the initialized region.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71377,"byte_end":71454,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71455,"byte_end":71458,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ In summary, the contents of the buffer can be visualized as:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71459,"byte_end":71523,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71524,"byte_end":71527,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```not_rust","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71528,"byte_end":71543,"line_start":18,"line_end":18,"column_start":1,"column_end":16}},{"value":"/ [             capacity              ]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71544,"byte_end":71585,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/ [ filled |         unfilled         ]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71586,"byte_end":71627,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ [    initialized    | uninitialized ]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71628,"byte_end":71669,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71670,"byte_end":71677,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71678,"byte_end":71681,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ It is undefined behavior to de-initialize any bytes from the uninitialized","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71682,"byte_end":71760,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ region, since it is merely unknown whether this region is uninitialized or","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71761,"byte_end":71839,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ not, and if part of it turns out to be initialized, it must stay initialized.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":71840,"byte_end":71921,"line_start":26,"line_end":26,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72142,"byte_end":72145,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadBuf>::new","value":"pub fn new(&'a mut [u8]) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ReadBuf` from a fully initialized buffer.\n","sig":null,"attributes":[{"value":"/ Creates a new `ReadBuf` from a fully initialized buffer.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72056,"byte_end":72116,"line_start":34,"line_end":34,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72121,"byte_end":72130,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72591,"byte_end":72597,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"uninit","qualname":"<ReadBuf>::uninit","value":"pub fn uninit(&'a mut [MaybeUninit<u8>]) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ReadBuf` from a fully uninitialized buffer.","sig":null,"attributes":[{"value":"/ Creates a new `ReadBuf` from a fully uninitialized buffer.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72410,"byte_end":72472,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72477,"byte_end":72480,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Use `assume_init` if part of the buffer is known to be already inintialized.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72485,"byte_end":72565,"line_start":48,"line_end":48,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72570,"byte_end":72579,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72825,"byte_end":72833,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"capacity","qualname":"<ReadBuf>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the total capacity of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns the total capacity of the buffer.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72754,"byte_end":72799,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72804,"byte_end":72813,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72979,"byte_end":72985,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"filled","qualname":"<ReadBuf>::filled","value":"pub fn filled(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the filled portion of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the filled portion of the buffer.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72886,"byte_end":72953,"line_start":64,"line_end":64,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72958,"byte_end":72967,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":73439,"byte_end":73449,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"filled_mut","qualname":"<ReadBuf>::filled_mut","value":"pub fn filled_mut(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the filled portion of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the filled portion of the buffer.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":73345,"byte_end":73413,"line_start":74,"line_end":74,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":73418,"byte_end":73427,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":73927,"byte_end":73931,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"take","qualname":"<ReadBuf>::take","value":"pub fn take(&mut Self, usize) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `ReadBuf` comprised of the unfilled section up to `n`.\n","sig":null,"attributes":[{"value":"/ Returns a new `ReadBuf` comprised of the unfilled section up to `n`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":73829,"byte_end":73901,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":73906,"byte_end":73915,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":74337,"byte_end":74348,"line_start":96,"line_end":96,"column_start":12,"column_end":23},"name":"initialized","qualname":"<ReadBuf>::initialized","value":"pub fn initialized(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the initialized portion of the buffer.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the initialized portion of the buffer.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":74189,"byte_end":74261,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":74266,"byte_end":74269,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ This includes the filled portion.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":74274,"byte_end":74311,"line_start":94,"line_end":94,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":74316,"byte_end":74325,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":74860,"byte_end":74875,"line_start":108,"line_end":108,"column_start":12,"column_end":27},"name":"initialized_mut","qualname":"<ReadBuf>::initialized_mut","value":"pub fn initialized_mut(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the initialized portion of the buffer.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the initialized portion of the buffer.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":74711,"byte_end":74784,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":74789,"byte_end":74792,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This includes the filled portion.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":74797,"byte_end":74834,"line_start":106,"line_end":106,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":74839,"byte_end":74848,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76098,"byte_end":76107,"line_start":131,"line_end":131,"column_start":19,"column_end":28},"name":"inner_mut","qualname":"<ReadBuf>::inner_mut","value":"pub unsafe fn inner_mut(&mut Self) -> &mut [MaybeUninit<u8>]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the entire buffer, without ensuring that it has been fully\n initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the entire buffer, without ensuring that it has been fully","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":75258,"byte_end":75351,"line_start":116,"line_end":116,"column_start":5,"column_end":98}},{"value":"/ initialized.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":75356,"byte_end":75372,"line_start":117,"line_end":117,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":75377,"byte_end":75380,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The elements between 0 and `self.filled().len()` are filled, and those between 0 and","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":75385,"byte_end":75473,"line_start":119,"line_end":119,"column_start":5,"column_end":93}},{"value":"/ `self.initialized().len()` are initialized (and so can be transmuted to a `&mut [u8]`).","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":75478,"byte_end":75569,"line_start":120,"line_end":120,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":75574,"byte_end":75577,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ The caller of this method must ensure that these invariants are upheld. For example, if the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":75582,"byte_end":75677,"line_start":122,"line_end":122,"column_start":5,"column_end":100}},{"value":"/ caller initializes some of the uninitialized section of the buffer, it must call","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":75682,"byte_end":75766,"line_start":123,"line_end":123,"column_start":5,"column_end":89}},{"value":"/ [`assume_init`](Self::assume_init) with the number of bytes initialized.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":75771,"byte_end":75847,"line_start":124,"line_end":124,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":75852,"byte_end":75855,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":75860,"byte_end":75872,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":75877,"byte_end":75880,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ The caller must not de-initialize portions of the buffer that have already been initialized.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":75885,"byte_end":75981,"line_start":128,"line_end":128,"column_start":5,"column_end":101}},{"value":"/ This includes any bytes in the region marked as uninitialized by `ReadBuf`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":75986,"byte_end":76065,"line_start":129,"line_end":129,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76070,"byte_end":76079,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76553,"byte_end":76565,"line_start":143,"line_end":143,"column_start":19,"column_end":31},"name":"unfilled_mut","qualname":"<ReadBuf>::unfilled_mut","value":"pub unsafe fn unfilled_mut(&mut Self) -> &mut [MaybeUninit<u8>]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the unfilled part of the buffer without ensuring that it has been fully\n initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the unfilled part of the buffer without ensuring that it has been fully","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76175,"byte_end":76281,"line_start":135,"line_end":135,"column_start":5,"column_end":111}},{"value":"/ initialized.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76286,"byte_end":76302,"line_start":136,"line_end":136,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76307,"byte_end":76310,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76315,"byte_end":76327,"line_start":138,"line_end":138,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76332,"byte_end":76335,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ The caller must not de-initialize portions of the buffer that have already been initialized.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76340,"byte_end":76436,"line_start":140,"line_end":140,"column_start":5,"column_end":101}},{"value":"/ This includes any bytes in the region marked as uninitialized by `ReadBuf`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76441,"byte_end":76520,"line_start":141,"line_end":141,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76525,"byte_end":76534,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76927,"byte_end":76946,"line_start":152,"line_end":152,"column_start":12,"column_end":31},"name":"initialize_unfilled","qualname":"<ReadBuf>::initialize_unfilled","value":"pub fn initialize_unfilled(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the unfilled part of the buffer, ensuring it is fully initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the unfilled part of the buffer, ensuring it is fully initialized.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76653,"byte_end":76754,"line_start":147,"line_end":147,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76759,"byte_end":76762,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Since `ReadBuf` tracks the region of the buffer that has been initialized, this is effectively \"free\" after","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76767,"byte_end":76878,"line_start":149,"line_end":149,"column_start":5,"column_end":116}},{"value":"/ the first use.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76883,"byte_end":76901,"line_start":150,"line_end":150,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":76906,"byte_end":76915,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":77284,"byte_end":77306,"line_start":163,"line_end":163,"column_start":12,"column_end":34},"name":"initialize_unfilled_to","qualname":"<ReadBuf>::initialize_unfilled_to","value":"pub fn initialize_unfilled_to(&mut Self, usize) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the first `n` bytes of the unfilled part of the buffer, ensuring it is\n fully initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the first `n` bytes of the unfilled part of the buffer, ensuring it is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":77038,"byte_end":77143,"line_start":156,"line_end":156,"column_start":5,"column_end":110}},{"value":"/ fully initialized.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":77148,"byte_end":77170,"line_start":157,"line_end":157,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":77175,"byte_end":77178,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":77183,"byte_end":77195,"line_start":159,"line_end":159,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":77200,"byte_end":77203,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Panics if `self.remaining()` is less than `n`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":77208,"byte_end":77258,"line_start":161,"line_end":161,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":77263,"byte_end":77272,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78151,"byte_end":78160,"line_start":186,"line_end":186,"column_start":12,"column_end":21},"name":"remaining","qualname":"<ReadBuf>::remaining","value":"pub fn remaining(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes at the end of the slice that have not yet been filled.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes at the end of the slice that have not yet been filled.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78039,"byte_end":78125,"line_start":184,"line_end":184,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78130,"byte_end":78139,"line_start":185,"line_end":185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78427,"byte_end":78432,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"clear","qualname":"<ReadBuf>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the buffer, resetting the filled region to empty.","sig":null,"attributes":[{"value":"/ Clears the buffer, resetting the filled region to empty.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78228,"byte_end":78288,"line_start":190,"line_end":190,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78293,"byte_end":78296,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed, and the contents of the buffer are not modified.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78301,"byte_end":78401,"line_start":192,"line_end":192,"column_start":5,"column_end":105}},{"value":"inline","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78406,"byte_end":78415,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78761,"byte_end":78768,"line_start":206,"line_end":206,"column_start":12,"column_end":19},"name":"advance","qualname":"<ReadBuf>::advance","value":"pub fn advance(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Advances the size of the filled region of the buffer.","sig":null,"attributes":[{"value":"/ Advances the size of the filled region of the buffer.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78482,"byte_end":78539,"line_start":198,"line_end":198,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78544,"byte_end":78547,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78552,"byte_end":78603,"line_start":200,"line_end":200,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78608,"byte_end":78611,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78616,"byte_end":78628,"line_start":202,"line_end":202,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78633,"byte_end":78636,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ Panics if the filled region of the buffer would become larger than the initialized region.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78641,"byte_end":78735,"line_start":204,"line_end":204,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78740,"byte_end":78749,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79378,"byte_end":79388,"line_start":222,"line_end":222,"column_start":12,"column_end":22},"name":"set_filled","qualname":"<ReadBuf>::set_filled","value":"pub fn set_filled(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the filled region of the buffer.","sig":null,"attributes":[{"value":"/ Sets the size of the filled region of the buffer.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78905,"byte_end":78958,"line_start":211,"line_end":211,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78963,"byte_end":78966,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":78971,"byte_end":79022,"line_start":213,"line_end":213,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79027,"byte_end":79030,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Note that this can be used to *shrink* the filled region of the buffer in addition to growing it (for","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79035,"byte_end":79140,"line_start":215,"line_end":215,"column_start":5,"column_end":110}},{"value":"/ example, by a `AsyncRead` implementation that compresses data in-place).","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79145,"byte_end":79221,"line_start":216,"line_end":216,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79226,"byte_end":79229,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79234,"byte_end":79246,"line_start":218,"line_end":218,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79251,"byte_end":79254,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Panics if the filled region of the buffer would become larger than the intialized region.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79259,"byte_end":79352,"line_start":220,"line_end":220,"column_start":5,"column_end":98}},{"value":"inline","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79357,"byte_end":79366,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79992,"byte_end":80003,"line_start":239,"line_end":239,"column_start":19,"column_end":30},"name":"assume_init","qualname":"<ReadBuf>::assume_init","value":"pub unsafe fn assume_init(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Asserts that the first `n` unfilled bytes of the buffer are initialized.","sig":null,"attributes":[{"value":"/ Asserts that the first `n` unfilled bytes of the buffer are initialized.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79572,"byte_end":79648,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79653,"byte_end":79656,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ `ReadBuf` assumes that bytes are never de-initialized, so this method does nothing when called with fewer","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79661,"byte_end":79770,"line_start":232,"line_end":232,"column_start":5,"column_end":114}},{"value":"/ bytes than are already known to be initialized.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79775,"byte_end":79826,"line_start":233,"line_end":233,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79831,"byte_end":79834,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79839,"byte_end":79851,"line_start":235,"line_end":235,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79856,"byte_end":79859,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that `n` unfilled bytes of the buffer have already been initialized.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79864,"byte_end":79959,"line_start":237,"line_end":237,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":79964,"byte_end":79973,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":80383,"byte_end":80392,"line_start":252,"line_end":252,"column_start":12,"column_end":21},"name":"put_slice","qualname":"<ReadBuf>::put_slice","value":"pub fn put_slice(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Appends data to the buffer, advancing the written position and possibly also the initialized position.","sig":null,"attributes":[{"value":"/ Appends data to the buffer, advancing the written position and possibly also the initialized position.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":80155,"byte_end":80261,"line_start":246,"line_end":246,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":80266,"byte_end":80269,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":80274,"byte_end":80286,"line_start":248,"line_end":248,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":80291,"byte_end":80294,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Panics if `self.remaining()` is less than `buf.len()`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":80299,"byte_end":80357,"line_start":250,"line_end":250,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":80362,"byte_end":80371,"line_start":251,"line_end":251,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1056},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8391754,"byte_end":8391762,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"Interest","qualname":"::io::driver::interest::Interest","value":"","parent":null,"children":[],"decl_id":null,"docs":" Readiness event interest","sig":null,"attributes":[{"value":"/ Readiness event interest","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8391510,"byte_end":8391538,"line_start":8,"line_end":8,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8391539,"byte_end":8391542,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Specifies the readiness events the caller is interested in when awaiting on","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8391543,"byte_end":8391622,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ I/O resource readiness states.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8391623,"byte_end":8391657,"line_start":11,"line_end":11,"column_start":1,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":812},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8391914,"byte_end":8391922,"line_start":20,"line_end":20,"column_start":15,"column_end":23},"name":"READABLE","qualname":"::io::driver::interest::Interest::READABLE","value":"Interest","parent":{"krate":0,"index":811},"children":[],"decl_id":null,"docs":" Interest in all readable events.","sig":null,"attributes":[{"value":"/ Interest in all readable events.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8391800,"byte_end":8391836,"line_start":17,"line_end":17,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8391841,"byte_end":8391844,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ Readable interest includes read-closed events.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8391849,"byte_end":8391899,"line_start":19,"line_end":19,"column_start":5,"column_end":55}}]},{"kind":"Const","id":{"krate":0,"index":813},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8392089,"byte_end":8392097,"line_start":25,"line_end":25,"column_start":15,"column_end":23},"name":"WRITABLE","qualname":"::io::driver::interest::Interest::WRITABLE","value":"Interest","parent":{"krate":0,"index":811},"children":[],"decl_id":null,"docs":" Interest in all writable events","sig":null,"attributes":[{"value":"/ Interest in all writable events","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8391975,"byte_end":8392010,"line_start":22,"line_end":22,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8392015,"byte_end":8392018,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Writable interest includes write-closed events.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8392023,"byte_end":8392074,"line_start":24,"line_end":24,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8392533,"byte_end":8392544,"line_start":40,"line_end":40,"column_start":18,"column_end":29},"name":"is_readable","qualname":"<Interest>::is_readable","value":"pub const fn is_readable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes readable interest.","sig":null,"attributes":[{"value":"/ Returns true if the value includes readable interest.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8392150,"byte_end":8392207,"line_start":27,"line_end":27,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8392212,"byte_end":8392215,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8392220,"byte_end":8392234,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8392239,"byte_end":8392242,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8392247,"byte_end":8392254,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8392259,"byte_end":8392287,"line_start":32,"line_end":32,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8392292,"byte_end":8392295,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ assert!(Interest::READABLE.is_readable());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8392300,"byte_end":8392346,"line_start":34,"line_end":34,"column_start":5,"column_end":51}},{"value":"/ assert!(!Interest::WRITABLE.is_readable());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8392351,"byte_end":8392398,"line_start":35,"line_end":35,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8392403,"byte_end":8392406,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ let both = Interest::READABLE | Interest::WRITABLE;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8392411,"byte_end":8392466,"line_start":37,"line_end":37,"column_start":5,"column_end":60}},{"value":"/ assert!(both.is_readable());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8392471,"byte_end":8392503,"line_start":38,"line_end":38,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8392508,"byte_end":8392515,"line_start":39,"line_end":39,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":815},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8392984,"byte_end":8392995,"line_start":57,"line_end":57,"column_start":18,"column_end":29},"name":"is_writable","qualname":"<Interest>::is_writable","value":"pub const fn is_writable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes writable interest.","sig":null,"attributes":[{"value":"/ Returns true if the value includes writable interest.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8392601,"byte_end":8392658,"line_start":44,"line_end":44,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8392663,"byte_end":8392666,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8392671,"byte_end":8392685,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8392690,"byte_end":8392693,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8392698,"byte_end":8392705,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8392710,"byte_end":8392738,"line_start":49,"line_end":49,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8392743,"byte_end":8392746,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ assert!(!Interest::READABLE.is_writable());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8392751,"byte_end":8392798,"line_start":51,"line_end":51,"column_start":5,"column_end":52}},{"value":"/ assert!(Interest::WRITABLE.is_writable());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8392803,"byte_end":8392849,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8392854,"byte_end":8392857,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ let both = Interest::READABLE | Interest::WRITABLE;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8392862,"byte_end":8392917,"line_start":54,"line_end":54,"column_start":5,"column_end":60}},{"value":"/ assert!(both.is_writable());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8392922,"byte_end":8392954,"line_start":55,"line_end":55,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8392959,"byte_end":8392966,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8393413,"byte_end":8393416,"line_start":74,"line_end":74,"column_start":18,"column_end":21},"name":"add","qualname":"<Interest>::add","value":"pub const fn add(Self, Interest) -> Interest","parent":null,"children":[],"decl_id":null,"docs":" Add together two `Interst` values.","sig":null,"attributes":[{"value":"/ Add together two `Interst` values.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8393052,"byte_end":8393090,"line_start":61,"line_end":61,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8393095,"byte_end":8393098,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function works from a `const` context.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8393103,"byte_end":8393150,"line_start":63,"line_end":63,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8393155,"byte_end":8393158,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8393163,"byte_end":8393177,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8393182,"byte_end":8393185,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8393190,"byte_end":8393197,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8393202,"byte_end":8393230,"line_start":68,"line_end":68,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8393235,"byte_end":8393238,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ const BOTH: Interest = Interest::READABLE.add(Interest::WRITABLE);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8393243,"byte_end":8393313,"line_start":70,"line_end":70,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8393318,"byte_end":8393321,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ assert!(BOTH.is_readable());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8393326,"byte_end":8393358,"line_start":72,"line_end":72,"column_start":5,"column_end":37}},{"value":"/ assert!(BOTH.is_writable());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8393363,"byte_end":8393395,"line_start":73,"line_end":73,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1069},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8394794,"byte_end":8394799,"line_start":16,"line_end":16,"column_start":12,"column_end":17},"name":"Ready","qualname":"::io::driver::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Describes the readiness state of an I/O resources.","sig":null,"attributes":[{"value":"/ Describes the readiness state of an I/O resources.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8394559,"byte_end":8394613,"line_start":11,"line_end":11,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8394614,"byte_end":8394617,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ `Ready` tracks which operation an I/O resource is ready to perform.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8394618,"byte_end":8394689,"line_start":13,"line_end":13,"column_start":1,"column_end":72}}]},{"kind":"Const","id":{"krate":0,"index":835},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8394875,"byte_end":8394880,"line_start":20,"line_end":20,"column_start":15,"column_end":20},"name":"EMPTY","qualname":"::io::driver::ready::Ready::EMPTY","value":"Ready","parent":{"krate":0,"index":834},"children":[],"decl_id":null,"docs":" Returns the empty `Ready` set.\n","sig":null,"attributes":[{"value":"/ Returns the empty `Ready` set.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8394826,"byte_end":8394860,"line_start":19,"line_end":19,"column_start":5,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":836},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8394974,"byte_end":8394982,"line_start":23,"line_end":23,"column_start":15,"column_end":23},"name":"READABLE","qualname":"::io::driver::ready::Ready::READABLE","value":"Ready","parent":{"krate":0,"index":834},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing readable readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing readable readiness.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8394905,"byte_end":8394959,"line_start":22,"line_end":22,"column_start":5,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":837},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8395083,"byte_end":8395091,"line_start":26,"line_end":26,"column_start":15,"column_end":23},"name":"WRITABLE","qualname":"::io::driver::ready::Ready::WRITABLE","value":"Ready","parent":{"krate":0,"index":834},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing writable readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing writable readiness.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8395014,"byte_end":8395068,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":838},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8395195,"byte_end":8395206,"line_start":29,"line_end":29,"column_start":15,"column_end":26},"name":"READ_CLOSED","qualname":"::io::driver::ready::Ready::READ_CLOSED","value":"Ready","parent":{"krate":0,"index":834},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing read closed readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing read closed readiness.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8395123,"byte_end":8395180,"line_start":28,"line_end":28,"column_start":5,"column_end":62}}]},{"kind":"Const","id":{"krate":0,"index":839},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8395314,"byte_end":8395326,"line_start":32,"line_end":32,"column_start":15,"column_end":27},"name":"WRITE_CLOSED","qualname":"::io::driver::ready::Ready::WRITE_CLOSED","value":"Ready","parent":{"krate":0,"index":834},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing write closed readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing write closed readiness.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8395241,"byte_end":8395299,"line_start":31,"line_end":31,"column_start":5,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8395441,"byte_end":8395444,"line_start":35,"line_end":35,"column_start":15,"column_end":18},"name":"ALL","qualname":"::io::driver::ready::Ready::ALL","value":"Ready","parent":{"krate":0,"index":834},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing readiness for all operations.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing readiness for all operations.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8395362,"byte_end":8395426,"line_start":34,"line_end":34,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8396301,"byte_end":8396309,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Ready>::is_empty","value":"pub fn is_empty(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `Ready` is the empty set","sig":null,"attributes":[{"value":"/ Returns true if `Ready` is the empty set","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8396060,"byte_end":8396104,"line_start":60,"line_end":60,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8396109,"byte_end":8396112,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8396117,"byte_end":8396131,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8396136,"byte_end":8396139,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8396144,"byte_end":8396151,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8396156,"byte_end":8396181,"line_start":65,"line_end":65,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8396186,"byte_end":8396189,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ assert!(Ready::EMPTY.is_empty());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8396194,"byte_end":8396231,"line_start":67,"line_end":67,"column_start":5,"column_end":42}},{"value":"/ assert!(!Ready::READABLE.is_empty());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8396236,"byte_end":8396277,"line_start":68,"line_end":68,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8396282,"byte_end":8396289,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8396720,"byte_end":8396731,"line_start":86,"line_end":86,"column_start":12,"column_end":23},"name":"is_readable","qualname":"<Ready>::is_readable","value":"pub fn is_readable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes `readable`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes `readable`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8396366,"byte_end":8396417,"line_start":74,"line_end":74,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8396422,"byte_end":8396425,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8396430,"byte_end":8396444,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8396449,"byte_end":8396452,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8396457,"byte_end":8396464,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8396469,"byte_end":8396494,"line_start":79,"line_end":79,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8396499,"byte_end":8396502,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_readable());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8396507,"byte_end":8396548,"line_start":81,"line_end":81,"column_start":5,"column_end":46}},{"value":"/ assert!(Ready::READABLE.is_readable());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8396553,"byte_end":8396596,"line_start":82,"line_end":82,"column_start":5,"column_end":48}},{"value":"/ assert!(Ready::READ_CLOSED.is_readable());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8396601,"byte_end":8396647,"line_start":83,"line_end":83,"column_start":5,"column_end":51}},{"value":"/ assert!(!Ready::WRITABLE.is_readable());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8396652,"byte_end":8396696,"line_start":84,"line_end":84,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8396701,"byte_end":8396708,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8397188,"byte_end":8397199,"line_start":102,"line_end":102,"column_start":12,"column_end":23},"name":"is_writable","qualname":"<Ready>::is_writable","value":"pub fn is_writable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes writable `readiness`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes writable `readiness`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8396823,"byte_end":8396884,"line_start":90,"line_end":90,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8396889,"byte_end":8396892,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8396897,"byte_end":8396911,"line_start":92,"line_end":92,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8396916,"byte_end":8396919,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8396924,"byte_end":8396931,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8396936,"byte_end":8396961,"line_start":95,"line_end":95,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8396966,"byte_end":8396969,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_writable());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8396974,"byte_end":8397015,"line_start":97,"line_end":97,"column_start":5,"column_end":46}},{"value":"/ assert!(!Ready::READABLE.is_writable());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8397020,"byte_end":8397064,"line_start":98,"line_end":98,"column_start":5,"column_end":49}},{"value":"/ assert!(Ready::WRITABLE.is_writable());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8397069,"byte_end":8397112,"line_start":99,"line_end":99,"column_start":5,"column_end":48}},{"value":"/ assert!(Ready::WRITE_CLOSED.is_writable());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8397117,"byte_end":8397164,"line_start":100,"line_end":100,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8397169,"byte_end":8397176,"line_start":101,"line_end":101,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8397620,"byte_end":8397634,"line_start":117,"line_end":117,"column_start":12,"column_end":26},"name":"is_read_closed","qualname":"<Ready>::is_read_closed","value":"pub fn is_read_closed(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes read-closed `readiness`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes read-closed `readiness`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8397292,"byte_end":8397356,"line_start":106,"line_end":106,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8397361,"byte_end":8397364,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8397369,"byte_end":8397383,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8397388,"byte_end":8397391,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8397396,"byte_end":8397403,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8397408,"byte_end":8397433,"line_start":111,"line_end":111,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8397438,"byte_end":8397441,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_read_closed());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8397446,"byte_end":8397490,"line_start":113,"line_end":113,"column_start":5,"column_end":49}},{"value":"/ assert!(!Ready::READABLE.is_read_closed());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8397495,"byte_end":8397542,"line_start":114,"line_end":114,"column_start":5,"column_end":52}},{"value":"/ assert!(Ready::READ_CLOSED.is_read_closed());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8397547,"byte_end":8397596,"line_start":115,"line_end":115,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8397601,"byte_end":8397608,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8398037,"byte_end":8398052,"line_start":132,"line_end":132,"column_start":12,"column_end":27},"name":"is_write_closed","qualname":"<Ready>::is_write_closed","value":"pub fn is_write_closed(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes write-closed `readiness`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes write-closed `readiness`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8397704,"byte_end":8397769,"line_start":121,"line_end":121,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8397774,"byte_end":8397777,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8397782,"byte_end":8397796,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8397801,"byte_end":8397804,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8397809,"byte_end":8397816,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8397821,"byte_end":8397846,"line_start":126,"line_end":126,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8397851,"byte_end":8397854,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_write_closed());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8397859,"byte_end":8397904,"line_start":128,"line_end":128,"column_start":5,"column_end":50}},{"value":"/ assert!(!Ready::WRITABLE.is_write_closed());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8397909,"byte_end":8397957,"line_start":129,"line_end":129,"column_start":5,"column_end":53}},{"value":"/ assert!(Ready::WRITE_CLOSED.is_write_closed());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8397962,"byte_end":8398013,"line_start":130,"line_end":130,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8398018,"byte_end":8398025,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1323},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8436837,"byte_end":8436845,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":1325}],"decl_id":null,"docs":" The readable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1326},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8436974,"byte_end":8436983,"line_start":25,"line_end":25,"column_start":16,"column_end":25},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":1328}],"decl_id":null,"docs":" The writable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1329},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8437297,"byte_end":8437302,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"name":"split","qualname":"::io::split::split","value":"pub fn split<T>(T) -> (ReadHalf<T>, WriteHalf<T>) where T: AsyncRead +\nAsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Splits a single value implementing `AsyncRead + AsyncWrite` into separate\n `AsyncRead` and `AsyncWrite` handles.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1243},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8437928,"byte_end":8437938,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<ReadHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &WriteHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this `ReadHalf` and some `WriteHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Checks if this `ReadHalf` and some `WriteHalf` were split from the same","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8437825,"byte_end":8437900,"line_start":63,"line_end":63,"column_start":5,"column_end":80}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8437905,"byte_end":8437916,"line_start":64,"line_end":64,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1244},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8438345,"byte_end":8438352,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<ReadHalf<T>>::unsplit","value":"pub fn unsplit(Self, WriteHalf<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Reunites with a previously split `WriteHalf`.","sig":null,"attributes":[{"value":"/ Reunites with a previously split `WriteHalf`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8438021,"byte_end":8438070,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8438075,"byte_end":8438078,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8438083,"byte_end":8438095,"line_start":71,"line_end":71,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8438100,"byte_end":8438103,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ If this `ReadHalf` and the given `WriteHalf` do not originate from the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8438108,"byte_end":8438182,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ same `split` operation this method will panic.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8438187,"byte_end":8438237,"line_start":74,"line_end":74,"column_start":5,"column_end":55}},{"value":"/ This can be checked ahead of time by comparing the stream ID","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8438242,"byte_end":8438306,"line_start":75,"line_end":75,"column_start":5,"column_end":69}},{"value":"/ of the two halves.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8438311,"byte_end":8438333,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1247},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8438853,"byte_end":8438863,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<WriteHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &ReadHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this `WriteHalf` and some `ReadHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Check if this `WriteHalf` and some `ReadHalf` were split from the same","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8438751,"byte_end":8438825,"line_start":93,"line_end":93,"column_start":5,"column_end":79}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8438830,"byte_end":8438841,"line_start":94,"line_end":94,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":10323},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\seek.rs","byte_start":8441732,"byte_end":8441736,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":10326},{"krate":0,"index":10327},{"krate":0,"index":10328}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":2111},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":8445024,"byte_end":8445039,"line_start":11,"line_end":11,"column_start":15,"column_end":30},"name":"AsyncBufReadExt","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":2112},{"krate":0,"index":2114},{"krate":0,"index":2116},{"krate":0,"index":2117}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncBufRead`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2112},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":8447749,"byte_end":8447759,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"read_until","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":2111},"children":[],"decl_id":null,"docs":" Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2114},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":8450650,"byte_end":8450659,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"read_line","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":2111},"children":[],"decl_id":null,"docs":" Reads all bytes until a newline (the 0xA byte) is reached, and append\n them to the provided buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2116},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":8452059,"byte_end":8452064,"line_start":200,"line_end":200,"column_start":12,"column_end":17},"name":"split","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::split","value":"pub fn split(Self, u8) -> Split<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":2111},"children":[],"decl_id":null,"docs":" Returns a stream of the contents of this reader split on the byte\n `byte`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2117},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":8453904,"byte_end":8453909,"line_start":248,"line_end":248,"column_start":12,"column_end":17},"name":"lines","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":2111},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2119},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":8455982,"byte_end":8455994,"line_start":61,"line_end":61,"column_start":15,"column_end":27},"name":"AsyncReadExt","qualname":"::io::util::async_read_ext::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":2120},{"krate":0,"index":2122},{"krate":0,"index":2124},{"krate":0,"index":2127},{"krate":0,"index":2134},{"krate":0,"index":2136},{"krate":0,"index":2138},{"krate":0,"index":2140},{"krate":0,"index":2142},{"krate":0,"index":2144},{"krate":0,"index":2146},{"krate":0,"index":2148},{"krate":0,"index":2150},{"krate":0,"index":2152},{"krate":0,"index":2154},{"krate":0,"index":2156},{"krate":0,"index":2158},{"krate":0,"index":2160},{"krate":0,"index":2162},{"krate":0,"index":2164},{"krate":0,"index":2166},{"krate":0,"index":2168},{"krate":0,"index":2129},{"krate":0,"index":2131},{"krate":0,"index":2133}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2120},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":8457114,"byte_end":8457119,"line_start":91,"line_end":91,"column_start":12,"column_end":17},"name":"chain","qualname":"::io::util::async_read_ext::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":2119},"children":[],"decl_id":null,"docs":" Creates a new `AsyncRead` instance that chains this stream with\n `next`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2122},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":8459948,"byte_end":8459952,"line_start":159,"line_end":159,"column_start":12,"column_end":16},"name":"read","qualname":"::io::util::async_read_ext::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":2119},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n returning how many bytes were read.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2124},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":8462255,"byte_end":8462263,"line_start":223,"line_end":223,"column_start":12,"column_end":20},"name":"read_buf","qualname":"::io::util::async_read_ext::AsyncReadExt::read_buf","value":"pub fn read_buf<'a, B>(&'a mut Self, &'a mut B) -> ReadBuf where Self: Sized +\nUnpin, B: BufMut","parent":{"krate":0,"index":2119},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n advancing the buffer's internal cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2127},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":8464160,"byte_end":8464170,"line_start":277,"line_end":277,"column_start":12,"column_end":22},"name":"read_exact","qualname":"::io::util::async_read_ext::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":2119},"children":[],"decl_id":null,"docs":" Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2134},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":8465607,"byte_end":8465614,"line_start":321,"line_end":321,"column_start":16,"column_end":23},"name":"read_u8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u8","value":"pub fn read_u8<'a>(&'a mut Self) -> ReadU8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2119},"children":[],"decl_id":null,"docs":" Reads an unsigned 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2136},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":8466903,"byte_end":8466910,"line_start":359,"line_end":359,"column_start":16,"column_end":23},"name":"read_i8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i8","value":"pub fn read_i8<'a>(&'a mut Self) -> ReadI8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2119},"children":[],"decl_id":null,"docs":" Reads a signed 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2138},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":8468241,"byte_end":8468249,"line_start":397,"line_end":397,"column_start":16,"column_end":24},"name":"read_u16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16","value":"pub fn read_u16<'a>(&'a mut Self) -> ReadU16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2119},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2140},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":8469589,"byte_end":8469597,"line_start":435,"line_end":435,"column_start":16,"column_end":24},"name":"read_i16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16","value":"pub fn read_i16<'a>(&'a mut Self) -> ReadI16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2119},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2142},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":8470878,"byte_end":8470886,"line_start":472,"line_end":472,"column_start":16,"column_end":24},"name":"read_u32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32","value":"pub fn read_u32<'a>(&'a mut Self) -> ReadU32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2119},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2144},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":8472181,"byte_end":8472189,"line_start":510,"line_end":510,"column_start":16,"column_end":24},"name":"read_i32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32","value":"pub fn read_i32<'a>(&'a mut Self) -> ReadI32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2119},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2146},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":8473552,"byte_end":8473560,"line_start":549,"line_end":549,"column_start":16,"column_end":24},"name":"read_u64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64","value":"pub fn read_u64<'a>(&'a mut Self) -> ReadU64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2119},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2148},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":8474853,"byte_end":8474861,"line_start":586,"line_end":586,"column_start":16,"column_end":24},"name":"read_i64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64","value":"pub fn read_i64<'a>(&'a mut Self) -> ReadI64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2119},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2150},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":8476321,"byte_end":8476330,"line_start":626,"line_end":626,"column_start":16,"column_end":25},"name":"read_u128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128","value":"pub fn read_u128<'a>(&'a mut Self) -> ReadU128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2119},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2152},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":8477724,"byte_end":8477733,"line_start":666,"line_end":666,"column_start":16,"column_end":25},"name":"read_i128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128","value":"pub fn read_i128<'a>(&'a mut Self) -> ReadI128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2119},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2154},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":8479080,"byte_end":8479091,"line_start":704,"line_end":704,"column_start":16,"column_end":27},"name":"read_u16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16_le","value":"pub fn read_u16_le<'a>(&'a mut Self) -> ReadU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2119},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2156},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":8480452,"byte_end":8480463,"line_start":742,"line_end":742,"column_start":16,"column_end":27},"name":"read_i16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16_le","value":"pub fn read_i16_le<'a>(&'a mut Self) -> ReadI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2119},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2158},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":8481764,"byte_end":8481775,"line_start":779,"line_end":779,"column_start":16,"column_end":27},"name":"read_u32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32_le","value":"pub fn read_u32_le<'a>(&'a mut Self) -> ReadU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2119},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2160},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":8483087,"byte_end":8483098,"line_start":817,"line_end":817,"column_start":16,"column_end":27},"name":"read_i32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32_le","value":"pub fn read_i32_le<'a>(&'a mut Self) -> ReadI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2119},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2162},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":8484479,"byte_end":8484490,"line_start":856,"line_end":856,"column_start":16,"column_end":27},"name":"read_u64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64_le","value":"pub fn read_u64_le<'a>(&'a mut Self) -> ReadU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2119},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2164},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":8485784,"byte_end":8485795,"line_start":893,"line_end":893,"column_start":16,"column_end":27},"name":"read_i64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64_le","value":"pub fn read_i64_le<'a>(&'a mut Self) -> ReadI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2119},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2166},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":8487273,"byte_end":8487285,"line_start":933,"line_end":933,"column_start":16,"column_end":28},"name":"read_u128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128_le","value":"pub fn read_u128_le<'a>(&'a mut Self) -> ReadU128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2119},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2168},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":8488679,"byte_end":8488691,"line_start":973,"line_end":973,"column_start":16,"column_end":28},"name":"read_i128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128_le","value":"pub fn read_i128_le<'a>(&'a mut Self) -> ReadI128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2119},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2129},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":8490350,"byte_end":8490361,"line_start":1021,"line_end":1021,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":2119},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, placing them into `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2131},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":8491916,"byte_end":8491930,"line_start":1068,"line_end":1068,"column_start":12,"column_end":26},"name":"read_to_string","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":2119},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, appending them to `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2133},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":8493222,"byte_end":8493226,"line_start":1106,"line_end":1106,"column_start":12,"column_end":16},"name":"take","qualname":"::io::util::async_read_ext::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":2119},"children":[],"decl_id":null,"docs":" Creates an adaptor which reads at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2170},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_seek_ext.rs","byte_start":8494314,"byte_end":8494326,"line_start":33,"line_end":33,"column_start":15,"column_end":27},"name":"AsyncSeekExt","qualname":"::io::util::async_seek_ext::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":2171}],"decl_id":null,"docs":" An extension trait that adds utility methods to [`AsyncSeek`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2171},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_seek_ext.rs","byte_start":8495322,"byte_end":8495326,"line_start":63,"line_end":63,"column_start":12,"column_end":16},"name":"seek","qualname":"::io::util::async_seek_ext::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":2170},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2173},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":8497450,"byte_end":8497463,"line_start":65,"line_end":65,"column_start":15,"column_end":28},"name":"AsyncWriteExt","qualname":"::io::util::async_write_ext::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":2174},{"krate":0,"index":2176},{"krate":0,"index":2179},{"krate":0,"index":2183},{"krate":0,"index":2185},{"krate":0,"index":2187},{"krate":0,"index":2189},{"krate":0,"index":2191},{"krate":0,"index":2193},{"krate":0,"index":2195},{"krate":0,"index":2197},{"krate":0,"index":2199},{"krate":0,"index":2201},{"krate":0,"index":2203},{"krate":0,"index":2205},{"krate":0,"index":2207},{"krate":0,"index":2209},{"krate":0,"index":2211},{"krate":0,"index":2213},{"krate":0,"index":2215},{"krate":0,"index":2217},{"krate":0,"index":2181},{"krate":0,"index":2182}],"decl_id":null,"docs":" Writes bytes to a sink.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2174},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":8499305,"byte_end":8499310,"line_start":112,"line_end":112,"column_start":12,"column_end":17},"name":"write","qualname":"::io::util::async_write_ext::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, returning how many bytes were\n written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2176},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":8502117,"byte_end":8502126,"line_start":185,"line_end":185,"column_start":12,"column_end":21},"name":"write_buf","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_buf","value":"pub fn write_buf<'a, B>(&'a mut Self, &'a mut B) -> WriteBuf where\nSelf: Sized + Unpin, B: Buf","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, advancing the buffer's internal\n cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2179},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":8503468,"byte_end":8503477,"line_start":226,"line_end":226,"column_start":12,"column_end":21},"name":"write_all","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":" Attempts to write an entire buffer into this writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2183},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":8504877,"byte_end":8504885,"line_start":269,"line_end":269,"column_start":16,"column_end":24},"name":"write_u8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u8","value":"pub fn write_u8<'a>(&'a mut Self, u8) -> WriteU8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2185},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":8506146,"byte_end":8506154,"line_start":306,"line_end":306,"column_start":16,"column_end":24},"name":"write_i8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i8","value":"pub fn write_i8<'a>(&'a mut Self, i8) -> WriteI8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2187},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":8507469,"byte_end":8507478,"line_start":344,"line_end":344,"column_start":16,"column_end":25},"name":"write_u16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16","value":"pub fn write_u16<'a>(&'a mut Self, u16) -> WriteU16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2189},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":8508791,"byte_end":8508800,"line_start":382,"line_end":382,"column_start":16,"column_end":25},"name":"write_i16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16","value":"pub fn write_i16<'a>(&'a mut Self, i16) -> WriteI16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2191},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":8510140,"byte_end":8510149,"line_start":420,"line_end":420,"column_start":16,"column_end":25},"name":"write_u32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32","value":"pub fn write_u32<'a>(&'a mut Self, u32) -> WriteU32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2193},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":8511484,"byte_end":8511493,"line_start":458,"line_end":458,"column_start":16,"column_end":25},"name":"write_i32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32","value":"pub fn write_i32<'a>(&'a mut Self, i32) -> WriteI32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2195},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":8512870,"byte_end":8512879,"line_start":496,"line_end":496,"column_start":16,"column_end":25},"name":"write_u64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64","value":"pub fn write_u64<'a>(&'a mut Self, u64) -> WriteU64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2197},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":8514266,"byte_end":8514275,"line_start":534,"line_end":534,"column_start":16,"column_end":25},"name":"write_i64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64","value":"pub fn write_i64<'a>(&'a mut Self, i64) -> WriteI64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2199},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":8515730,"byte_end":8515740,"line_start":574,"line_end":574,"column_start":16,"column_end":26},"name":"write_u128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128","value":"pub fn write_u128<'a>(&'a mut Self, u128) -> WriteU128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2201},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":8517130,"byte_end":8517140,"line_start":614,"line_end":614,"column_start":16,"column_end":26},"name":"write_i128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128","value":"pub fn write_i128<'a>(&'a mut Self, i128) -> WriteI128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2203},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":8518472,"byte_end":8518484,"line_start":653,"line_end":653,"column_start":16,"column_end":28},"name":"write_u16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16_le","value":"pub fn write_u16_le<'a>(&'a mut Self, u16) -> WriteU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2205},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":8519811,"byte_end":8519823,"line_start":691,"line_end":691,"column_start":16,"column_end":28},"name":"write_i16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16_le","value":"pub fn write_i16_le<'a>(&'a mut Self, i16) -> WriteI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2207},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":8521177,"byte_end":8521189,"line_start":729,"line_end":729,"column_start":16,"column_end":28},"name":"write_u32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32_le","value":"pub fn write_u32_le<'a>(&'a mut Self, u32) -> WriteU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2209},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":8522538,"byte_end":8522550,"line_start":767,"line_end":767,"column_start":16,"column_end":28},"name":"write_i32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32_le","value":"pub fn write_i32_le<'a>(&'a mut Self, i32) -> WriteI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2211},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":8523941,"byte_end":8523953,"line_start":805,"line_end":805,"column_start":16,"column_end":28},"name":"write_u64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64_le","value":"pub fn write_u64_le<'a>(&'a mut Self, u64) -> WriteU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2213},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":8525354,"byte_end":8525366,"line_start":843,"line_end":843,"column_start":16,"column_end":28},"name":"write_i64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64_le","value":"pub fn write_i64_le<'a>(&'a mut Self, i64) -> WriteI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2215},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":8526833,"byte_end":8526846,"line_start":883,"line_end":883,"column_start":16,"column_end":29},"name":"write_u128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128_le","value":"pub fn write_u128_le<'a>(&'a mut Self, u128) -> WriteU128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2217},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":8528248,"byte_end":8528261,"line_start":923,"line_end":923,"column_start":16,"column_end":29},"name":"write_i128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128_le","value":"pub fn write_i128_le<'a>(&'a mut Self, i128) -> WriteI128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2181},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":8529281,"byte_end":8529286,"line_start":956,"line_end":956,"column_start":12,"column_end":17},"name":"flush","qualname":"::io::util::async_write_ext::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":" Flushes this output stream, ensuring that all intermediately buffered\n contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2182},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":8530576,"byte_end":8530584,"line_start":995,"line_end":995,"column_start":12,"column_end":20},"name":"shutdown","qualname":"::io::util::async_write_ext::AsyncWriteExt::shutdown","value":"pub fn shutdown(&mut Self) -> Shutdown<, Self> where Self: Unpin","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":" Shuts down the output stream, ensuring that the value can be dropped\n cleanly.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10271},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":8531945,"byte_end":8531954,"line_start":27,"line_end":27,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::util::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":10273},{"krate":0,"index":10274},{"krate":0,"index":10275},{"krate":0,"index":10276}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1463},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":8532290,"byte_end":8532293,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":8532148,"byte_end":8532240,"line_start":37,"line_end":37,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":8532245,"byte_end":8532278,"line_start":38,"line_end":38,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1464},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":8532455,"byte_end":8532468,"line_start":44,"line_end":44,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":8532378,"byte_end":8532443,"line_start":43,"line_end":43,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1465},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":8532822,"byte_end":8532829,"line_start":57,"line_end":57,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":8532685,"byte_end":8532731,"line_start":54,"line_end":54,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":8532736,"byte_end":8532739,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":8532744,"byte_end":8532810,"line_start":56,"line_end":56,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1466},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":8533021,"byte_end":8533028,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":8532876,"byte_end":8532930,"line_start":61,"line_end":61,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":8532935,"byte_end":8532938,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":8532943,"byte_end":8533009,"line_start":63,"line_end":63,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1467},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":8533239,"byte_end":8533250,"line_start":71,"line_end":71,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufReader<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":8533087,"byte_end":8533148,"line_start":68,"line_end":68,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":8533153,"byte_end":8533156,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":8533161,"byte_end":8533227,"line_start":70,"line_end":70,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1468},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":8533481,"byte_end":8533491,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufReader`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this `BufReader`, returning the underlying reader.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":8533330,"byte_end":8533393,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":8533398,"byte_end":8533401,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":8533406,"byte_end":8533469,"line_start":77,"line_end":77,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1469},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":8533695,"byte_end":8533701,"line_start":85,"line_end":85,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":8533535,"byte_end":8533591,"line_start":82,"line_end":82,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":8533596,"byte_end":8533599,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":8533604,"byte_end":8533683,"line_start":84,"line_end":84,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":10240},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8537640,"byte_end":8537649,"line_start":19,"line_end":19,"column_start":16,"column_end":25},"name":"BufStream","qualname":"::io::util::buf_stream::BufStream","value":"BufStream {  }","parent":null,"children":[{"krate":0,"index":10242}],"decl_id":null,"docs":" Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and buffers its input and output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1504},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8537928,"byte_end":8537931,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<BufStream<RW>>::new","value":"pub fn new(RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type in both [`BufWriter`] and [`BufReader`].","sig":null,"attributes":[{"value":"/ Wraps a type in both [`BufWriter`] and [`BufReader`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8537774,"byte_end":8537831,"line_start":26,"line_end":26,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8537836,"byte_end":8537839,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8537844,"byte_end":8537916,"line_start":28,"line_end":28,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1505},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8538263,"byte_end":8538276,"line_start":39,"line_end":39,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufStream<RW>>::with_capacity","value":"pub fn with_capacity(usize, usize, RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]\n capacity.","sig":null,"attributes":[{"value":"/ Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8538063,"byte_end":8538148,"line_start":35,"line_end":35,"column_start":5,"column_end":90}},{"value":"/ capacity.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8538153,"byte_end":8538166,"line_start":36,"line_end":36,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8538171,"byte_end":8538174,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8538179,"byte_end":8538251,"line_start":38,"line_end":38,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1506},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8538733,"byte_end":8538740,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufStream<RW>>::get_ref","value":"pub fn get_ref(&Self) -> &RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying I/O object.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8538588,"byte_end":8538638,"line_start":52,"line_end":52,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8538643,"byte_end":8538646,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8538651,"byte_end":8538721,"line_start":54,"line_end":54,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1507},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8538960,"byte_end":8538967,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufStream<RW>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying I/O object.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8538807,"byte_end":8538865,"line_start":59,"line_end":59,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8538870,"byte_end":8538873,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8538878,"byte_end":8538948,"line_start":61,"line_end":61,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1508},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8539202,"byte_end":8539213,"line_start":69,"line_end":69,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufStream<RW>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut RW>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying I/O object.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8539042,"byte_end":8539107,"line_start":66,"line_end":66,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8539112,"byte_end":8539115,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8539120,"byte_end":8539190,"line_start":68,"line_end":68,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1509},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8539477,"byte_end":8539487,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufStream<RW>>::into_inner","value":"pub fn into_inner(Self) -> RW","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufStream`, returning the underlying I/O object.","sig":null,"attributes":[{"value":"/ Consumes this `BufStream`, returning the underlying I/O object.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8539322,"byte_end":8539389,"line_start":73,"line_end":73,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8539394,"byte_end":8539397,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8539402,"byte_end":8539465,"line_start":75,"line_end":75,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10194},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":8543064,"byte_end":8543073,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::util::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":10196},{"krate":0,"index":10197},{"krate":0,"index":10198}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1547},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":8543381,"byte_end":8543384,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":8543239,"byte_end":8543331,"line_start":41,"line_end":41,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":8543336,"byte_end":8543369,"line_start":42,"line_end":42,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1548},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":8543546,"byte_end":8543559,"line_start":48,"line_end":48,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":8543469,"byte_end":8543534,"line_start":47,"line_end":47,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1550},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":8544641,"byte_end":8544648,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":8544583,"byte_end":8544629,"line_start":84,"line_end":84,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1551},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":8544839,"byte_end":8544846,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":8544695,"byte_end":8544749,"line_start":89,"line_end":89,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":8544754,"byte_end":8544757,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":8544762,"byte_end":8544827,"line_start":91,"line_end":91,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1552},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":8545056,"byte_end":8545067,"line_start":99,"line_end":99,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufWriter<W>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut W>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying writer.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":8544905,"byte_end":8544966,"line_start":96,"line_end":96,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":8544971,"byte_end":8544974,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":8544979,"byte_end":8545044,"line_start":98,"line_end":98,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1553},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":8545298,"byte_end":8545308,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying writer.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying writer.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":8545147,"byte_end":8545210,"line_start":103,"line_end":103,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":8545215,"byte_end":8545218,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":8545223,"byte_end":8545286,"line_start":105,"line_end":105,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1554},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":8545420,"byte_end":8545426,"line_start":111,"line_end":111,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":8545352,"byte_end":8545408,"line_start":110,"line_end":110,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":10145},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":8547840,"byte_end":8547845,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::util::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":10148},{"krate":0,"index":10149},{"krate":0,"index":10150}],"decl_id":null,"docs":" Stream for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1589},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":8548286,"byte_end":8548293,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":8548212,"byte_end":8548274,"line_start":39,"line_end":39,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1590},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":8548625,"byte_end":8548632,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":8548362,"byte_end":8548432,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":8548437,"byte_end":8548440,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":8548445,"byte_end":8548518,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":8548523,"byte_end":8548596,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":8548601,"byte_end":8548613,"line_start":48,"line_end":48,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1591},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":8548991,"byte_end":8549002,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":8548721,"byte_end":8548798,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":8548803,"byte_end":8548806,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":8548811,"byte_end":8548884,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":8548889,"byte_end":8548962,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":8548967,"byte_end":8548979,"line_start":57,"line_end":57,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1592},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":8549199,"byte_end":8549209,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":8549131,"byte_end":8549187,"line_start":63,"line_end":63,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":2235},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\copy.rs","byte_start":8552602,"byte_end":8552606,"line_start":56,"line_end":56,"column_start":18,"column_end":22},"name":"copy","qualname":"::io::util::copy::copy","value":"pub async fn copy<'a, R: ?Sized, W: ?Sized>(&'a mut R, &'a mut W)\n-> /*impl Trait*/ where R: AsyncRead + Unpin, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2241},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\copy_buf.rs","byte_start":8556411,"byte_end":8556419,"line_start":54,"line_end":54,"column_start":18,"column_end":26},"name":"copy_buf","qualname":"::io::util::copy_buf::copy_buf","value":"pub async fn copy_buf<'a, R: ?Sized, W: ?Sized>(&'a mut R, &'a mut W)\n-> /*impl Trait*/ where R: AsyncBufRead + Unpin, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2259},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\empty.rs","byte_start":8558228,"byte_end":8558233,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"name":"Empty","qualname":"::io::util::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":2260}],"decl_id":null,"docs":" An async reader which is always at EOF.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2261},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\empty.rs","byte_start":8558912,"byte_end":8558917,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"empty","qualname":"::io::util::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty async reader.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":10103},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\flush.rs","byte_start":8560158,"byte_end":8560163,"line_start":17,"line_end":17,"column_start":16,"column_end":21},"name":"Flush","qualname":"::io::util::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":10106},{"krate":0,"index":10107}],"decl_id":null,"docs":" A future used to fully flush an I/O object.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10053},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8561597,"byte_end":8561602,"line_start":23,"line_end":23,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::util::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":10055},{"krate":0,"index":10056},{"krate":0,"index":10057},{"krate":0,"index":10058}],"decl_id":null,"docs":" Read lines from an [`AsyncBufRead`].","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1690},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8562449,"byte_end":8562458,"line_start":65,"line_end":65,"column_start":18,"column_end":27},"name":"next_line","qualname":"<Lines<R>>::next_line","value":"pub async fn next_line<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next line in the stream.","sig":null,"attributes":[{"value":"/ Returns the next line in the stream.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8561959,"byte_end":8561999,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8562004,"byte_end":8562007,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8562012,"byte_end":8562026,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8562031,"byte_end":8562034,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8562039,"byte_end":8562046,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8562051,"byte_end":8562085,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8562090,"byte_end":8562125,"line_start":54,"line_end":54,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8562130,"byte_end":8562133,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8562138,"byte_end":8562221,"line_start":56,"line_end":56,"column_start":5,"column_end":88}},{"value":"/ let mut lines = my_buf_read.lines();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8562226,"byte_end":8562266,"line_start":57,"line_end":57,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8562271,"byte_end":8562274,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ while let Some(line) = lines.next_line().await? {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8562279,"byte_end":8562332,"line_start":59,"line_end":59,"column_start":5,"column_end":58}},{"value":"/     println!(\"length = {}\", line.len())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8562337,"byte_end":8562380,"line_start":60,"line_end":60,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8562385,"byte_end":8562390,"line_start":61,"line_end":61,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8562395,"byte_end":8562407,"line_start":62,"line_end":62,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8562412,"byte_end":8562419,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8562424,"byte_end":8562431,"line_start":64,"line_end":64,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1695},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8562685,"byte_end":8562692,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Lines<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a mutable reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a mutable reference to the underlying reader","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8562618,"byte_end":8562673,"line_start":71,"line_end":71,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1696},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8562811,"byte_end":8562818,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Lines<R>>::get_ref","value":"pub fn get_ref(&mut Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a reference to the underlying reader","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8562752,"byte_end":8562799,"line_start":76,"line_end":76,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1697},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8563105,"byte_end":8563115,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Lines<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `Lines<R>`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `Lines<R>`, returning the underlying reader.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8562870,"byte_end":8562931,"line_start":81,"line_end":81,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8562936,"byte_end":8562939,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8562944,"byte_end":8563007,"line_start":83,"line_end":83,"column_start":5,"column_end":68}},{"value":"/ Therefore, a following read from the underlying reader may lead to data loss.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8563012,"byte_end":8563093,"line_start":84,"line_end":84,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1700},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8564001,"byte_end":8564015,"line_start":110,"line_end":110,"column_start":12,"column_end":26},"name":"poll_next_line","qualname":"<Lines<R>>::poll_next_line","value":"pub fn poll_next_line(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<String>>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for the next line in the stream.","sig":null,"attributes":[{"value":"/ Polls for the next line in the stream.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8563208,"byte_end":8563250,"line_start":94,"line_end":94,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8563255,"byte_end":8563258,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8563263,"byte_end":8563287,"line_start":96,"line_end":96,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8563292,"byte_end":8563295,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next line is not yet available.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8563300,"byte_end":8563361,"line_start":98,"line_end":98,"column_start":5,"column_end":66}},{"value":"/  * `Poll::Ready(Ok(Some(line)))` if the next line is available.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8563366,"byte_end":8563433,"line_start":99,"line_end":99,"column_start":5,"column_end":72}},{"value":"/  * `Poll::Ready(Ok(None))` if there are no more lines in this stream.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8563438,"byte_end":8563511,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/  * `Poll::Ready(Err(err))` if an IO error occurred while reading the next line.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8563516,"byte_end":8563599,"line_start":101,"line_end":101,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8563604,"byte_end":8563607,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8563612,"byte_end":8563684,"line_start":103,"line_end":103,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when more bytes become","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8563689,"byte_end":8563758,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ available on the underlying IO resource.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8563763,"byte_end":8563807,"line_start":105,"line_end":105,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8563812,"byte_end":8563815,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_next_line`, only the `Waker` from","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8563820,"byte_end":8563894,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/ the `Context` passed to the most recent call is scheduled to receive a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8563899,"byte_end":8563973,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ wakeup.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8563978,"byte_end":8563989,"line_start":109,"line_end":109,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2262},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8565743,"byte_end":8565755,"line_start":40,"line_end":40,"column_start":12,"column_end":24},"name":"DuplexStream","qualname":"::io::util::mem::DuplexStream","value":"DuplexStream {  }","parent":null,"children":[{"krate":0,"index":2263},{"krate":0,"index":2264}],"decl_id":null,"docs":" A bidirectional pipe to read and write bytes in memory.","sig":null,"attributes":[{"value":"/ A bidirectional pipe to read and write bytes in memory.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8564955,"byte_end":8565014,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8565015,"byte_end":8565018,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ A pair of `DuplexStream`s are created together, and they act as a \"channel\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8565019,"byte_end":8565098,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ that can be used as in-memory IO types. Writing to one of the pairs will","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8565099,"byte_end":8565175,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ allow that data to be read from the other, and vice versa.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8565176,"byte_end":8565238,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8565239,"byte_end":8565242,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8565243,"byte_end":8565256,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8565257,"byte_end":8565260,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8565261,"byte_end":8565268,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # async fn ex() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8565269,"byte_end":8565313,"line_start":22,"line_end":22,"column_start":1,"column_end":45}},{"value":"/ # use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8565314,"byte_end":8565365,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ let (mut client, mut server) = tokio::io::duplex(64);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8565366,"byte_end":8565423,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8565424,"byte_end":8565427,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ client.write_all(b\"ping\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8565428,"byte_end":8565465,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8565466,"byte_end":8565469,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let mut buf = [0u8; 4];","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8565470,"byte_end":8565497,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/ server.read_exact(&mut buf).await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8565498,"byte_end":8565537,"line_start":29,"line_end":29,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"ping\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8565538,"byte_end":8565568,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8565569,"byte_end":8565572,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ server.write_all(b\"pong\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8565573,"byte_end":8565610,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8565611,"byte_end":8565614,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ client.read_exact(&mut buf).await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8565615,"byte_end":8565654,"line_start":34,"line_end":34,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"pong\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8565655,"byte_end":8565685,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8565686,"byte_end":8565698,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8565699,"byte_end":8565706,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8565707,"byte_end":8565714,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1718},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8567052,"byte_end":8567058,"line_start":75,"line_end":75,"column_start":8,"column_end":14},"name":"duplex","qualname":"::io::util::mem::duplex","value":"pub fn duplex(usize) -> (DuplexStream, DuplexStream)","parent":null,"children":[],"decl_id":null,"docs":" Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","sig":null,"attributes":[{"value":"/ Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8566818,"byte_end":8566901,"line_start":71,"line_end":71,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8566902,"byte_end":8566905,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ The `max_buf_size` argument is the maximum amount of bytes that can be","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8566906,"byte_end":8566980,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ written to a side before the write returns `Poll::Pending`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8566981,"byte_end":8567044,"line_start":74,"line_end":74,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":10002},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read.rs","byte_start":8572114,"byte_end":8572118,"line_start":34,"line_end":34,"column_start":16,"column_end":20},"name":"Read","qualname":"::io::util::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":10005},{"krate":0,"index":10006},{"krate":0,"index":10007}],"decl_id":null,"docs":" A future which can be used to easily read available number of bytes to fill\n a buffer.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9942},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_buf.rs","byte_start":8573335,"byte_end":8573342,"line_start":27,"line_end":27,"column_start":16,"column_end":23},"name":"ReadBuf","qualname":"::io::util::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":9946},{"krate":0,"index":9947},{"krate":0,"index":9948}],"decl_id":null,"docs":" Future returned by [`read_buf`](crate::io::AsyncReadExt::read_buf).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9887},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_exact.rs","byte_start":8575547,"byte_end":8575556,"line_start":34,"line_end":34,"column_start":16,"column_end":25},"name":"ReadExact","qualname":"::io::util::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":9890},{"krate":0,"index":9891},{"krate":0,"index":9892}],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if EOF is hit sooner.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9843},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":8580580,"byte_end":8580586,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"name":"ReadU8","qualname":"::io::util::read_int::ReadU8","value":"ReadU8 {  }","parent":null,"children":[{"krate":0,"index":9845},{"krate":0,"index":9846}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9806},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":8580602,"byte_end":8580608,"line_start":133,"line_end":133,"column_start":10,"column_end":16},"name":"ReadI8","qualname":"::io::util::read_int::ReadI8","value":"ReadI8 {  }","parent":null,"children":[{"krate":0,"index":9808},{"krate":0,"index":9809}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9757},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":8580624,"byte_end":8580631,"line_start":135,"line_end":135,"column_start":9,"column_end":16},"name":"ReadU16","qualname":"::io::util::read_int::ReadU16","value":"ReadU16 {  }","parent":null,"children":[{"krate":0,"index":9759},{"krate":0,"index":9760},{"krate":0,"index":9762},{"krate":0,"index":9763}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9708},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":8580656,"byte_end":8580663,"line_start":136,"line_end":136,"column_start":9,"column_end":16},"name":"ReadU32","qualname":"::io::util::read_int::ReadU32","value":"ReadU32 {  }","parent":null,"children":[{"krate":0,"index":9710},{"krate":0,"index":9711},{"krate":0,"index":9713},{"krate":0,"index":9714}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9659},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":8580688,"byte_end":8580695,"line_start":137,"line_end":137,"column_start":9,"column_end":16},"name":"ReadU64","qualname":"::io::util::read_int::ReadU64","value":"ReadU64 {  }","parent":null,"children":[{"krate":0,"index":9661},{"krate":0,"index":9662},{"krate":0,"index":9664},{"krate":0,"index":9665}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9610},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":8580720,"byte_end":8580728,"line_start":138,"line_end":138,"column_start":9,"column_end":17},"name":"ReadU128","qualname":"::io::util::read_int::ReadU128","value":"ReadU128 {  }","parent":null,"children":[{"krate":0,"index":9612},{"krate":0,"index":9613},{"krate":0,"index":9615},{"krate":0,"index":9616}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9561},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":8580756,"byte_end":8580763,"line_start":140,"line_end":140,"column_start":9,"column_end":16},"name":"ReadI16","qualname":"::io::util::read_int::ReadI16","value":"ReadI16 {  }","parent":null,"children":[{"krate":0,"index":9563},{"krate":0,"index":9564},{"krate":0,"index":9566},{"krate":0,"index":9567}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9512},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":8580788,"byte_end":8580795,"line_start":141,"line_end":141,"column_start":9,"column_end":16},"name":"ReadI32","qualname":"::io::util::read_int::ReadI32","value":"ReadI32 {  }","parent":null,"children":[{"krate":0,"index":9514},{"krate":0,"index":9515},{"krate":0,"index":9517},{"krate":0,"index":9518}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9463},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":8580820,"byte_end":8580827,"line_start":142,"line_end":142,"column_start":9,"column_end":16},"name":"ReadI64","qualname":"::io::util::read_int::ReadI64","value":"ReadI64 {  }","parent":null,"children":[{"krate":0,"index":9465},{"krate":0,"index":9466},{"krate":0,"index":9468},{"krate":0,"index":9469}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9414},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":8580852,"byte_end":8580860,"line_start":143,"line_end":143,"column_start":9,"column_end":17},"name":"ReadI128","qualname":"::io::util::read_int::ReadI128","value":"ReadI128 {  }","parent":null,"children":[{"krate":0,"index":9416},{"krate":0,"index":9417},{"krate":0,"index":9419},{"krate":0,"index":9420}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9365},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":8580888,"byte_end":8580897,"line_start":145,"line_end":145,"column_start":9,"column_end":18},"name":"ReadU16Le","qualname":"::io::util::read_int::ReadU16Le","value":"ReadU16Le {  }","parent":null,"children":[{"krate":0,"index":9367},{"krate":0,"index":9368},{"krate":0,"index":9370},{"krate":0,"index":9371}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9316},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":8580925,"byte_end":8580934,"line_start":146,"line_end":146,"column_start":9,"column_end":18},"name":"ReadU32Le","qualname":"::io::util::read_int::ReadU32Le","value":"ReadU32Le {  }","parent":null,"children":[{"krate":0,"index":9318},{"krate":0,"index":9319},{"krate":0,"index":9321},{"krate":0,"index":9322}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9267},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":8580962,"byte_end":8580971,"line_start":147,"line_end":147,"column_start":9,"column_end":18},"name":"ReadU64Le","qualname":"::io::util::read_int::ReadU64Le","value":"ReadU64Le {  }","parent":null,"children":[{"krate":0,"index":9269},{"krate":0,"index":9270},{"krate":0,"index":9272},{"krate":0,"index":9273}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9218},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":8580999,"byte_end":8581009,"line_start":148,"line_end":148,"column_start":9,"column_end":19},"name":"ReadU128Le","qualname":"::io::util::read_int::ReadU128Le","value":"ReadU128Le {  }","parent":null,"children":[{"krate":0,"index":9220},{"krate":0,"index":9221},{"krate":0,"index":9223},{"krate":0,"index":9224}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9169},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":8581040,"byte_end":8581049,"line_start":150,"line_end":150,"column_start":9,"column_end":18},"name":"ReadI16Le","qualname":"::io::util::read_int::ReadI16Le","value":"ReadI16Le {  }","parent":null,"children":[{"krate":0,"index":9171},{"krate":0,"index":9172},{"krate":0,"index":9174},{"krate":0,"index":9175}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9120},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":8581077,"byte_end":8581086,"line_start":151,"line_end":151,"column_start":9,"column_end":18},"name":"ReadI32Le","qualname":"::io::util::read_int::ReadI32Le","value":"ReadI32Le {  }","parent":null,"children":[{"krate":0,"index":9122},{"krate":0,"index":9123},{"krate":0,"index":9125},{"krate":0,"index":9126}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9071},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":8581114,"byte_end":8581123,"line_start":152,"line_end":152,"column_start":9,"column_end":18},"name":"ReadI64Le","qualname":"::io::util::read_int::ReadI64Le","value":"ReadI64Le {  }","parent":null,"children":[{"krate":0,"index":9073},{"krate":0,"index":9074},{"krate":0,"index":9076},{"krate":0,"index":9077}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9022},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_int.rs","byte_start":8581151,"byte_end":8581161,"line_start":153,"line_end":153,"column_start":9,"column_end":19},"name":"ReadI128Le","qualname":"::io::util::read_int::ReadI128Le","value":"ReadI128Le {  }","parent":null,"children":[{"krate":0,"index":9024},{"krate":0,"index":9025},{"krate":0,"index":9027},{"krate":0,"index":9028}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8968},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_line.rs","byte_start":8581678,"byte_end":8581686,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"ReadLine","qualname":"::io::util::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":8971},{"krate":0,"index":8972},{"krate":0,"index":8973},{"krate":0,"index":8974},{"krate":0,"index":8975}],"decl_id":null,"docs":" Future for the [`read_line`](crate::io::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8911},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_to_end.rs","byte_start":8585642,"byte_end":8585651,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"ReadToEnd","qualname":"::io::util::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":8914},{"krate":0,"index":8915},{"krate":0,"index":8916},{"krate":0,"index":8917}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8850},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_to_string.rs","byte_start":8593971,"byte_end":8593983,"line_start":17,"line_end":17,"column_start":16,"column_end":28},"name":"ReadToString","qualname":"::io::util::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":8853},{"krate":0,"index":8854},{"krate":0,"index":8855},{"krate":0,"index":8856},{"krate":0,"index":8857}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8789},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_until.rs","byte_start":8596393,"byte_end":8596402,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"ReadUntil","qualname":"::io::util::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":8792},{"krate":0,"index":8793},{"krate":0,"index":8794},{"krate":0,"index":8795},{"krate":0,"index":8796}],"decl_id":null,"docs":" Future for the [`read_until`](crate::io::AsyncBufReadExt::read_until) method.\n The delimeter is included in the resulting vector.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2428},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\repeat.rs","byte_start":8598744,"byte_end":8598750,"line_start":19,"line_end":19,"column_start":16,"column_end":22},"name":"Repeat","qualname":"::io::util::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":2429}],"decl_id":null,"docs":" An async reader which yields one byte over and over and over and over and\n over and...","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2427},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\repeat.rs","byte_start":8599436,"byte_end":8599442,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"repeat","qualname":"::io::util::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":8740},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\shutdown.rs","byte_start":8600481,"byte_end":8600489,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"Shutdown","qualname":"::io::util::shutdown::Shutdown","value":"Shutdown {  }","parent":null,"children":[{"krate":0,"index":8743},{"krate":0,"index":8744}],"decl_id":null,"docs":" A future used to shutdown an I/O object.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2432},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\sink.rs","byte_start":8601635,"byte_end":8601639,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Sink","qualname":"::io::util::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":2433}],"decl_id":null,"docs":" An async writer which will move data into the void.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2434},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\sink.rs","byte_start":8602480,"byte_end":8602484,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"sink","qualname":"::io::util::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async writer which will successfully consume all\n data.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":8690},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8603921,"byte_end":8603926,"line_start":19,"line_end":19,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::util::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":8692},{"krate":0,"index":8693},{"krate":0,"index":8694},{"krate":0,"index":8695}],"decl_id":null,"docs":" Splitter for the [`split`](crate::io::AsyncBufReadExt::split) method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2001},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8604787,"byte_end":8604799,"line_start":61,"line_end":61,"column_start":18,"column_end":30},"name":"next_segment","qualname":"<Split<R>>::next_segment","value":"pub async fn next_segment<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next segment in the stream.","sig":null,"attributes":[{"value":"/ Returns the next segment in the stream.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8604275,"byte_end":8604318,"line_start":44,"line_end":44,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8604323,"byte_end":8604326,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8604331,"byte_end":8604345,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8604350,"byte_end":8604353,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8604358,"byte_end":8604365,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8604370,"byte_end":8604404,"line_start":49,"line_end":49,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8604409,"byte_end":8604444,"line_start":50,"line_end":50,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8604449,"byte_end":8604452,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8604457,"byte_end":8604540,"line_start":52,"line_end":52,"column_start":5,"column_end":88}},{"value":"/ let mut segments = my_buf_read.split(b'f');","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8604545,"byte_end":8604592,"line_start":53,"line_end":53,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8604597,"byte_end":8604600,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ while let Some(segment) = segments.next_segment().await? {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8604605,"byte_end":8604667,"line_start":55,"line_end":55,"column_start":5,"column_end":67}},{"value":"/     println!(\"length = {}\", segment.len())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8604672,"byte_end":8604718,"line_start":56,"line_end":56,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8604723,"byte_end":8604728,"line_start":57,"line_end":57,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8604733,"byte_end":8604745,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8604750,"byte_end":8604757,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8604762,"byte_end":8604769,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2008},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8605836,"byte_end":8605853,"line_start":89,"line_end":89,"column_start":12,"column_end":29},"name":"poll_next_segment","qualname":"<Split<R>>::poll_next_segment","value":"pub fn poll_next_segment(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<Vec<u8>>>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for the next segment in the stream.","sig":null,"attributes":[{"value":"/ Polls for the next segment in the stream.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8605011,"byte_end":8605056,"line_start":72,"line_end":72,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8605061,"byte_end":8605064,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8605069,"byte_end":8605093,"line_start":74,"line_end":74,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8605098,"byte_end":8605101,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next segment is not yet available.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8605106,"byte_end":8605170,"line_start":76,"line_end":76,"column_start":5,"column_end":69}},{"value":"/  * `Poll::Ready(Ok(Some(segment)))` if the next segment is available.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8605175,"byte_end":8605248,"line_start":77,"line_end":77,"column_start":5,"column_end":78}},{"value":"/  * `Poll::Ready(Ok(None))` if there are no more segments in this stream.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8605253,"byte_end":8605329,"line_start":78,"line_end":78,"column_start":5,"column_end":81}},{"value":"/  * `Poll::Ready(Err(err))` if an IO error occurred while reading the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8605334,"byte_end":8605406,"line_start":79,"line_end":79,"column_start":5,"column_end":77}},{"value":"/    next segment.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8605411,"byte_end":8605431,"line_start":80,"line_end":80,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8605436,"byte_end":8605439,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8605444,"byte_end":8605516,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when more bytes become","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8605521,"byte_end":8605590,"line_start":83,"line_end":83,"column_start":5,"column_end":74}},{"value":"/ available on the underlying IO resource.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8605595,"byte_end":8605639,"line_start":84,"line_end":84,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8605644,"byte_end":8605647,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_next_segment`, only the `Waker`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8605652,"byte_end":8605724,"line_start":86,"line_end":86,"column_start":5,"column_end":77}},{"value":"/ from the `Context` passed to the most recent call is scheduled to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8605729,"byte_end":8605798,"line_start":87,"line_end":87,"column_start":5,"column_end":74}},{"value":"/ receive a wakeup.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8605803,"byte_end":8605824,"line_start":88,"line_end":88,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":8650},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":8607010,"byte_end":8607014,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::util::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":8652},{"krate":0,"index":8653}],"decl_id":null,"docs":" Stream for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2027},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":8607604,"byte_end":8607609,"line_start":36,"line_end":36,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":8607301,"byte_end":8607354,"line_start":29,"line_end":29,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":8607359,"byte_end":8607405,"line_start":30,"line_end":30,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":8607410,"byte_end":8607413,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":8607418,"byte_end":8607428,"line_start":32,"line_end":32,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":8607433,"byte_end":8607436,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":8607441,"byte_end":8607518,"line_start":34,"line_end":34,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":8607523,"byte_end":8607592,"line_start":35,"line_end":35,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2028},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":8607928,"byte_end":8607937,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.\n","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":8607657,"byte_end":8607728,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":8607733,"byte_end":8607807,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":8607812,"byte_end":8607887,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":8607892,"byte_end":8607916,"line_start":43,"line_end":43,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2029},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":8608060,"byte_end":8608067,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":8608002,"byte_end":8608048,"line_start":48,"line_end":48,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2030},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":8608359,"byte_end":8608366,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":8608114,"byte_end":8608168,"line_start":53,"line_end":53,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":8608173,"byte_end":8608176,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":8608181,"byte_end":8608254,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":8608259,"byte_end":8608331,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":8608336,"byte_end":8608347,"line_start":57,"line_end":57,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2031},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":8608677,"byte_end":8608688,"line_start":67,"line_end":67,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Take<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":8608425,"byte_end":8608486,"line_start":62,"line_end":62,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":8608491,"byte_end":8608494,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":8608499,"byte_end":8608572,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":8608577,"byte_end":8608649,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":8608654,"byte_end":8608665,"line_start":66,"line_end":66,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2032},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":8608834,"byte_end":8608844,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.\n","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":8608768,"byte_end":8608822,"line_start":71,"line_end":71,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":8599},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write.rs","byte_start":8610828,"byte_end":8610833,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Write","qualname":"::io::util::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":8602},{"krate":0,"index":8603},{"krate":0,"index":8604}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8546},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_all.rs","byte_start":8611971,"byte_end":8611979,"line_start":14,"line_end":14,"column_start":16,"column_end":24},"name":"WriteAll","qualname":"::io::util::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":8549},{"krate":0,"index":8550},{"krate":0,"index":8551}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8486},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_buf.rs","byte_start":8613420,"byte_end":8613428,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"WriteBuf","qualname":"::io::util::write_buf::WriteBuf","value":"WriteBuf {  }","parent":null,"children":[{"krate":0,"index":8490},{"krate":0,"index":8491},{"krate":0,"index":8492}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8436},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":8618189,"byte_end":8618196,"line_start":125,"line_end":125,"column_start":10,"column_end":17},"name":"WriteU8","qualname":"::io::util::write_int::WriteU8","value":"WriteU8 {  }","parent":null,"children":[{"krate":0,"index":8438},{"krate":0,"index":8439},{"krate":0,"index":8440}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8395},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":8618212,"byte_end":8618219,"line_start":126,"line_end":126,"column_start":10,"column_end":17},"name":"WriteI8","qualname":"::io::util::write_int::WriteI8","value":"WriteI8 {  }","parent":null,"children":[{"krate":0,"index":8397},{"krate":0,"index":8398},{"krate":0,"index":8399}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8346},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":8618235,"byte_end":8618243,"line_start":128,"line_end":128,"column_start":9,"column_end":17},"name":"WriteU16","qualname":"::io::util::write_int::WriteU16","value":"WriteU16 {  }","parent":null,"children":[{"krate":0,"index":8348},{"krate":0,"index":8349},{"krate":0,"index":8351},{"krate":0,"index":8352}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8297},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":8618268,"byte_end":8618276,"line_start":129,"line_end":129,"column_start":9,"column_end":17},"name":"WriteU32","qualname":"::io::util::write_int::WriteU32","value":"WriteU32 {  }","parent":null,"children":[{"krate":0,"index":8299},{"krate":0,"index":8300},{"krate":0,"index":8302},{"krate":0,"index":8303}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8248},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":8618301,"byte_end":8618309,"line_start":130,"line_end":130,"column_start":9,"column_end":17},"name":"WriteU64","qualname":"::io::util::write_int::WriteU64","value":"WriteU64 {  }","parent":null,"children":[{"krate":0,"index":8250},{"krate":0,"index":8251},{"krate":0,"index":8253},{"krate":0,"index":8254}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8199},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":8618334,"byte_end":8618343,"line_start":131,"line_end":131,"column_start":9,"column_end":18},"name":"WriteU128","qualname":"::io::util::write_int::WriteU128","value":"WriteU128 {  }","parent":null,"children":[{"krate":0,"index":8201},{"krate":0,"index":8202},{"krate":0,"index":8204},{"krate":0,"index":8205}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8150},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":8618371,"byte_end":8618379,"line_start":133,"line_end":133,"column_start":9,"column_end":17},"name":"WriteI16","qualname":"::io::util::write_int::WriteI16","value":"WriteI16 {  }","parent":null,"children":[{"krate":0,"index":8152},{"krate":0,"index":8153},{"krate":0,"index":8155},{"krate":0,"index":8156}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8101},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":8618404,"byte_end":8618412,"line_start":134,"line_end":134,"column_start":9,"column_end":17},"name":"WriteI32","qualname":"::io::util::write_int::WriteI32","value":"WriteI32 {  }","parent":null,"children":[{"krate":0,"index":8103},{"krate":0,"index":8104},{"krate":0,"index":8106},{"krate":0,"index":8107}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8052},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":8618437,"byte_end":8618445,"line_start":135,"line_end":135,"column_start":9,"column_end":17},"name":"WriteI64","qualname":"::io::util::write_int::WriteI64","value":"WriteI64 {  }","parent":null,"children":[{"krate":0,"index":8054},{"krate":0,"index":8055},{"krate":0,"index":8057},{"krate":0,"index":8058}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8003},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":8618470,"byte_end":8618479,"line_start":136,"line_end":136,"column_start":9,"column_end":18},"name":"WriteI128","qualname":"::io::util::write_int::WriteI128","value":"WriteI128 {  }","parent":null,"children":[{"krate":0,"index":8005},{"krate":0,"index":8006},{"krate":0,"index":8008},{"krate":0,"index":8009}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7954},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":8618507,"byte_end":8618517,"line_start":138,"line_end":138,"column_start":9,"column_end":19},"name":"WriteU16Le","qualname":"::io::util::write_int::WriteU16Le","value":"WriteU16Le {  }","parent":null,"children":[{"krate":0,"index":7956},{"krate":0,"index":7957},{"krate":0,"index":7959},{"krate":0,"index":7960}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7905},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":8618545,"byte_end":8618555,"line_start":139,"line_end":139,"column_start":9,"column_end":19},"name":"WriteU32Le","qualname":"::io::util::write_int::WriteU32Le","value":"WriteU32Le {  }","parent":null,"children":[{"krate":0,"index":7907},{"krate":0,"index":7908},{"krate":0,"index":7910},{"krate":0,"index":7911}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7856},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":8618583,"byte_end":8618593,"line_start":140,"line_end":140,"column_start":9,"column_end":19},"name":"WriteU64Le","qualname":"::io::util::write_int::WriteU64Le","value":"WriteU64Le {  }","parent":null,"children":[{"krate":0,"index":7858},{"krate":0,"index":7859},{"krate":0,"index":7861},{"krate":0,"index":7862}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7807},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":8618621,"byte_end":8618632,"line_start":141,"line_end":141,"column_start":9,"column_end":20},"name":"WriteU128Le","qualname":"::io::util::write_int::WriteU128Le","value":"WriteU128Le {  }","parent":null,"children":[{"krate":0,"index":7809},{"krate":0,"index":7810},{"krate":0,"index":7812},{"krate":0,"index":7813}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7758},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":8618663,"byte_end":8618673,"line_start":143,"line_end":143,"column_start":9,"column_end":19},"name":"WriteI16Le","qualname":"::io::util::write_int::WriteI16Le","value":"WriteI16Le {  }","parent":null,"children":[{"krate":0,"index":7760},{"krate":0,"index":7761},{"krate":0,"index":7763},{"krate":0,"index":7764}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7709},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":8618701,"byte_end":8618711,"line_start":144,"line_end":144,"column_start":9,"column_end":19},"name":"WriteI32Le","qualname":"::io::util::write_int::WriteI32Le","value":"WriteI32Le {  }","parent":null,"children":[{"krate":0,"index":7711},{"krate":0,"index":7712},{"krate":0,"index":7714},{"krate":0,"index":7715}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7660},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":8618739,"byte_end":8618749,"line_start":145,"line_end":145,"column_start":9,"column_end":19},"name":"WriteI64Le","qualname":"::io::util::write_int::WriteI64Le","value":"WriteI64Le {  }","parent":null,"children":[{"krate":0,"index":7662},{"krate":0,"index":7663},{"krate":0,"index":7665},{"krate":0,"index":7666}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7611},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_int.rs","byte_start":8618777,"byte_end":8618788,"line_start":146,"line_end":146,"column_start":9,"column_end":20},"name":"WriteI128Le","qualname":"::io::util::write_int::WriteI128Le","value":"WriteI128Le {  }","parent":null,"children":[{"krate":0,"index":7613},{"krate":0,"index":7614},{"krate":0,"index":7616},{"krate":0,"index":7617}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":2642},{"krate":0,"index":2643},{"krate":0,"index":2644},{"krate":0,"index":2921},{"krate":0,"index":2922},{"krate":0,"index":2923},{"krate":0,"index":2924},{"krate":0,"index":3032}],"decl_id":null,"docs":" TCP/UDP/Unix bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":81310,"byte_end":81328,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ TCP/UDP/Unix bindings for `tokio`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":81330,"byte_end":81368,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":81369,"byte_end":81372,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module contains the TCP/UDP/Unix networking types, similar to the standard","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":81373,"byte_end":81456,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"/ library, which can be used to implement networking protocols.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":81457,"byte_end":81522,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":81523,"byte_end":81526,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":81527,"byte_end":81545,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":81546,"byte_end":81549,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":81550,"byte_end":81638,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":81639,"byte_end":81708,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ * [`UnixListener`] and [`UnixStream`] provide functionality for communication over a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":81709,"byte_end":81797,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"/ Unix Domain Stream Socket **(available on Unix only)**","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":81798,"byte_end":81856,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/ * [`UnixDatagram`] provides functionality for communication","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":81857,"byte_end":81920,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/ over Unix Domain Datagram Socket **(available on Unix only)**","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":81921,"byte_end":81986,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":81988,"byte_end":81991,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`TcpListener`]: TcpListener","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":81992,"byte_end":82024,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":82025,"byte_end":82053,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ [`UdpSocket`]: UdpSocket","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":82054,"byte_end":82082,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ [`UnixListener`]: UnixListener","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":82083,"byte_end":82117,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":82118,"byte_end":82148,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":82149,"byte_end":82183,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":83405,"byte_end":83418,"line_start":20,"line_end":20,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs: sealed::ToSocketAddrsPriv","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves without blocking to one or more `SocketAddr` values.","sig":null,"attributes":[{"value":"/ Converts or resolves without blocking to one or more `SocketAddr` values.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":82817,"byte_end":82894,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":82895,"byte_end":82898,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # DNS","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":82899,"byte_end":82908,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":82909,"byte_end":82912,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Implementations of `ToSocketAddrs` for string types require a DNS lookup.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":82913,"byte_end":82990,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":82991,"byte_end":82994,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Calling","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":82995,"byte_end":83008,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":83009,"byte_end":83012,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait is only used as an argument to Tokio functions that","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":83013,"byte_end":83090,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ need to reference a target socket address. To perform a `SocketAddr`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":83091,"byte_end":83163,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ conversion directly, use [`lookup_host()`](super::lookup_host()).","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":83164,"byte_end":83233,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":83234,"byte_end":83237,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and is intended to be opaque. The details of the trait","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":83238,"byte_end":83317,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ will change. Stabilization is pending enhancements to the Rust language.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":83318,"byte_end":83394,"line_start":19,"line_end":19,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":89858,"byte_end":89875,"line_start":248,"line_end":248,"column_start":15,"column_end":32},"name":"ToSocketAddrsPriv","qualname":"::net::addr::sealed::ToSocketAddrsPriv","value":"ToSocketAddrsPriv","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":89891,"byte_end":89895,"line_start":249,"line_end":249,"column_start":14,"column_end":18},"name":"Iter","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Iter","value":"type Iter: Iterator<Item = SocketAddr> + Send + 'static;","parent":{"krate":0,"index":360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":89956,"byte_end":89962,"line_start":250,"line_end":250,"column_start":14,"column_end":20},"name":"Future","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Future","value":"type Future: Future<Output = io::Result<Self::Iter>> + Send + 'static;","parent":{"krate":0,"index":360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":90034,"byte_end":90049,"line_start":252,"line_end":252,"column_start":12,"column_end":27},"name":"to_socket_addrs","qualname":"::net::addr::sealed::ToSocketAddrsPriv::to_socket_addrs","value":"pub fn to_socket_addrs(&Self, Internal) -> Self::Future","parent":{"krate":0,"index":360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":364},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":90160,"byte_end":90168,"line_start":256,"line_end":256,"column_start":16,"column_end":24},"name":"Internal","qualname":"::net::addr::sealed::Internal","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":90105,"byte_end":90144,"line_start":255,"line_end":255,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":2619},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":90410,"byte_end":90420,"line_start":268,"line_end":268,"column_start":20,"column_end":30},"name":"MaybeReady","qualname":"::net::addr::sealed::MaybeReady","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":21444,"byte_end":21467,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2634},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":90710,"byte_end":90713,"line_start":279,"line_end":279,"column_start":13,"column_end":16},"name":"One","qualname":"::net::addr::sealed::OneOrMore::One","value":"OneOrMore::One(option::IntoIter<SocketAddr>)","parent":{"krate":0,"index":2633},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2637},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":90757,"byte_end":90761,"line_start":280,"line_end":280,"column_start":13,"column_end":17},"name":"More","qualname":"::net::addr::sealed::OneOrMore::More","value":"OneOrMore::More(vec::IntoIter<SocketAddr>)","parent":{"krate":0,"index":2633},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2633},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":90686,"byte_end":90695,"line_start":278,"line_end":278,"column_start":18,"column_end":27},"name":"OneOrMore","qualname":"::net::addr::sealed::OneOrMore","value":"pub enum OneOrMore {\n    One(option::IntoIter<SocketAddr>),\n    More(vec::IntoIter<SocketAddr>),\n}","parent":null,"children":[{"krate":0,"index":2634},{"krate":0,"index":2637}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":21444,"byte_end":21467,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":3038},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\lookup_host.rs","byte_start":8619661,"byte_end":8619672,"line_start":32,"line_end":32,"column_start":18,"column_end":29},"name":"lookup_host","qualname":"::net::lookup_host::lookup_host","value":"pub async fn lookup_host<T>(T) -> /*impl Trait*/ where T: ToSocketAddrs","parent":null,"children":[],"decl_id":null,"docs":" Performs a DNS resolution.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":21444,"byte_end":21467,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":2644},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tcp","qualname":"::net::tcp","value":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\mod.rs","parent":null,"children":[{"krate":0,"index":2645},{"krate":0,"index":2689},{"krate":0,"index":2724},{"krate":0,"index":2756},{"krate":0,"index":2757},{"krate":0,"index":2758},{"krate":0,"index":2759},{"krate":0,"index":2805},{"krate":0,"index":2806},{"krate":0,"index":2807},{"krate":0,"index":2808},{"krate":0,"index":11670},{"krate":0,"index":2809},{"krate":0,"index":2920}],"decl_id":null,"docs":" TCP utility types\n","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":21444,"byte_end":21467,"line_start":169,"line_end":169,"column_start":13,"column_end":36}},{"value":"/ TCP utility types","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\mod.rs","byte_start":8619825,"byte_end":8619846,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":3043},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8621700,"byte_end":8621711,"line_start":52,"line_end":52,"column_start":16,"column_end":27},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":3044}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":21444,"byte_end":21467,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2663},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8623210,"byte_end":8623214,"line_start":97,"line_end":97,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TcpListener, which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TcpListener, which will be bound to the specified address.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8621794,"byte_end":8621870,"line_start":58,"line_end":58,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8621875,"byte_end":8621878,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8621883,"byte_end":8621944,"line_start":60,"line_end":60,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8621949,"byte_end":8621952,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8621957,"byte_end":8622032,"line_start":62,"line_end":62,"column_start":5,"column_end":80}},{"value":"/ to this listener. The port allocated can be queried via the `local_addr`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8622037,"byte_end":8622113,"line_start":63,"line_end":63,"column_start":5,"column_end":81}},{"value":"/ method.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8622118,"byte_end":8622129,"line_start":64,"line_end":64,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8622134,"byte_end":8622137,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ The address type can be any implementor of the [`ToSocketAddrs`] trait.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8622142,"byte_end":8622217,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ If `addr` yields multiple addresses, bind will be attempted with each of","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8622222,"byte_end":8622298,"line_start":67,"line_end":67,"column_start":5,"column_end":81}},{"value":"/ the addresses until one succeeds and returns the listener. If none of","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8622303,"byte_end":8622376,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/ the addresses succeed in creating a listener, the error returned from","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8622381,"byte_end":8622454,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ the last attempt (the last address) is returned.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8622459,"byte_end":8622511,"line_start":70,"line_end":70,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8622516,"byte_end":8622519,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This function sets the `SO_REUSEADDR` option on the socket.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8622524,"byte_end":8622587,"line_start":72,"line_end":72,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8622592,"byte_end":8622595,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ To configure the socket before binding, you can use the [`TcpSocket`]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8622600,"byte_end":8622673,"line_start":74,"line_end":74,"column_start":5,"column_end":78}},{"value":"/ type.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8622678,"byte_end":8622687,"line_start":75,"line_end":75,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8622692,"byte_end":8622695,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8622700,"byte_end":8622754,"line_start":77,"line_end":77,"column_start":5,"column_end":59}},{"value":"/ [`TcpSocket`]: struct@crate::net::TcpSocket","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8622759,"byte_end":8622806,"line_start":78,"line_end":78,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8622811,"byte_end":8622814,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8622819,"byte_end":8622833,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8622838,"byte_end":8622841,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8622846,"byte_end":8622859,"line_start":82,"line_end":82,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8622864,"byte_end":8622896,"line_start":83,"line_end":83,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8622901,"byte_end":8622904,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8622909,"byte_end":8622925,"line_start":85,"line_end":85,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8622930,"byte_end":8622933,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8622938,"byte_end":8622956,"line_start":87,"line_end":87,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8622961,"byte_end":8623000,"line_start":88,"line_end":88,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:2345\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8623005,"byte_end":8623071,"line_start":89,"line_end":89,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8623076,"byte_end":8623079,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8623084,"byte_end":8623111,"line_start":91,"line_end":91,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8623116,"byte_end":8623119,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8623124,"byte_end":8623151,"line_start":93,"line_end":93,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8623156,"byte_end":8623170,"line_start":94,"line_end":94,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8623175,"byte_end":8623180,"line_start":95,"line_end":95,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8623185,"byte_end":8623192,"line_start":96,"line_end":96,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2669},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8624780,"byte_end":8624786,"line_start":149,"line_end":149,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"pub async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection from this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection from this listener.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8623925,"byte_end":8623982,"line_start":122,"line_end":122,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8623987,"byte_end":8623990,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ This function will yield once a new TCP connection is established. When","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8623995,"byte_end":8624070,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ established, the corresponding [`TcpStream`] and the remote peer's","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8624075,"byte_end":8624145,"line_start":125,"line_end":125,"column_start":5,"column_end":75}},{"value":"/ address will be returned.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8624150,"byte_end":8624179,"line_start":126,"line_end":126,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8624184,"byte_end":8624187,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8624192,"byte_end":8624239,"line_start":128,"line_end":128,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8624244,"byte_end":8624247,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8624252,"byte_end":8624266,"line_start":130,"line_end":130,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8624271,"byte_end":8624274,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8624279,"byte_end":8624292,"line_start":132,"line_end":132,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8624297,"byte_end":8624329,"line_start":133,"line_end":133,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8624334,"byte_end":8624337,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8624342,"byte_end":8624358,"line_start":135,"line_end":135,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8624363,"byte_end":8624366,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8624371,"byte_end":8624389,"line_start":137,"line_end":137,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8624394,"byte_end":8624433,"line_start":138,"line_end":138,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8624438,"byte_end":8624504,"line_start":139,"line_end":139,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8624509,"byte_end":8624512,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/     match listener.accept().await {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8624517,"byte_end":8624556,"line_start":141,"line_end":141,"column_start":5,"column_end":44}},{"value":"/         Ok((_socket, addr)) => println!(\"new client: {:?}\", addr),","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8624561,"byte_end":8624631,"line_start":142,"line_end":142,"column_start":5,"column_end":75}},{"value":"/         Err(e) => println!(\"couldn't get client: {:?}\", e),","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8624636,"byte_end":8624699,"line_start":143,"line_end":143,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8624704,"byte_end":8624713,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8624718,"byte_end":8624721,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8624726,"byte_end":8624740,"line_start":146,"line_end":146,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8624745,"byte_end":8624750,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8624755,"byte_end":8624762,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2673},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8625454,"byte_end":8625465,"line_start":166,"line_end":166,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<TcpListener>::poll_accept","value":"pub fn poll_accept(&Self, &mut Context)\n-> Poll<io::Result<(TcpStream, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to accept a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Polls to accept a new incoming connection to this listener.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8625076,"byte_end":8625139,"line_start":160,"line_end":160,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8625144,"byte_end":8625147,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ If there is no connection to accept, `Poll::Pending` is returned and the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8625152,"byte_end":8625228,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/ current task will be notified by a waker.  Note that on multiple calls","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8625233,"byte_end":8625307,"line_start":163,"line_end":163,"column_start":5,"column_end":79}},{"value":"/ to `poll_accept`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8625312,"byte_end":8625388,"line_start":164,"line_end":164,"column_start":5,"column_end":81}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8625393,"byte_end":8625442,"line_start":165,"line_end":165,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2674},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8627511,"byte_end":8627519,"line_start":218,"line_end":218,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"pub fn from_std(net::TcpListener) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `TcpListener` from a `std::net::TcpListener`.","sig":null,"attributes":[{"value":"/ Creates new `TcpListener` from a `std::net::TcpListener`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8626073,"byte_end":8626134,"line_start":183,"line_end":183,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8626139,"byte_end":8626142,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP listener from the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8626147,"byte_end":8626219,"line_start":185,"line_end":185,"column_start":5,"column_end":77}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes nothing","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8626224,"byte_end":8626300,"line_start":186,"line_end":186,"column_start":5,"column_end":81}},{"value":"/ about the underlying listener; it is left up to the user to set it in","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8626305,"byte_end":8626378,"line_start":187,"line_end":187,"column_start":5,"column_end":78}},{"value":"/ non-blocking mode.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8626383,"byte_end":8626405,"line_start":188,"line_end":188,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8626410,"byte_end":8626413,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ This API is typically paired with the `socket2` crate and the `Socket`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8626418,"byte_end":8626492,"line_start":190,"line_end":190,"column_start":5,"column_end":79}},{"value":"/ type to build up and customize a listener before it's shipped off to the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8626497,"byte_end":8626573,"line_start":191,"line_end":191,"column_start":5,"column_end":81}},{"value":"/ backing event loop. This allows configuration of options like","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8626578,"byte_end":8626643,"line_start":192,"line_end":192,"column_start":5,"column_end":70}},{"value":"/ `SO_REUSEPORT`, binding to multiple addresses, etc.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8626648,"byte_end":8626703,"line_start":193,"line_end":193,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8626708,"byte_end":8626711,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8626716,"byte_end":8626719,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8626724,"byte_end":8626738,"line_start":196,"line_end":196,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8626743,"byte_end":8626746,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8626751,"byte_end":8626769,"line_start":198,"line_end":198,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8626774,"byte_end":8626800,"line_start":199,"line_end":199,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8626805,"byte_end":8626837,"line_start":200,"line_end":200,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8626842,"byte_end":8626845,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8626850,"byte_end":8626868,"line_start":202,"line_end":202,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8626873,"byte_end":8626924,"line_start":203,"line_end":203,"column_start":5,"column_end":56}},{"value":"/     let std_listener = std::net::TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8626929,"byte_end":8627000,"line_start":204,"line_end":204,"column_start":5,"column_end":76}},{"value":"/     std_listener.set_nonblocking(true)?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8627005,"byte_end":8627049,"line_start":205,"line_end":205,"column_start":5,"column_end":49}},{"value":"/     let listener = TcpListener::from_std(std_listener)?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8627054,"byte_end":8627114,"line_start":206,"line_end":206,"column_start":5,"column_end":65}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8627119,"byte_end":8627133,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8627138,"byte_end":8627143,"line_start":208,"line_end":208,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8627148,"byte_end":8627155,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8627160,"byte_end":8627163,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8627168,"byte_end":8627180,"line_start":211,"line_end":211,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8627185,"byte_end":8627188,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8627193,"byte_end":8627253,"line_start":213,"line_end":213,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8627258,"byte_end":8627261,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8627266,"byte_end":8627336,"line_start":215,"line_end":215,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8627341,"byte_end":8627414,"line_start":216,"line_end":216,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8627419,"byte_end":8627499,"line_start":217,"line_end":217,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2676},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8628613,"byte_end":8628623,"line_start":252,"line_end":252,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8627887,"byte_end":8627948,"line_start":229,"line_end":229,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8627953,"byte_end":8627956,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8627961,"byte_end":8628034,"line_start":231,"line_end":231,"column_start":5,"column_end":78}},{"value":"/ which port was actually bound.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8628039,"byte_end":8628073,"line_start":232,"line_end":232,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8628078,"byte_end":8628081,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8628086,"byte_end":8628100,"line_start":234,"line_end":234,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8628105,"byte_end":8628108,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8628113,"byte_end":8628131,"line_start":236,"line_end":236,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8628136,"byte_end":8628168,"line_start":237,"line_end":237,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8628173,"byte_end":8628176,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8628181,"byte_end":8628197,"line_start":239,"line_end":239,"column_start":5,"column_end":21}},{"value":"/ use std::net::{Ipv4Addr, SocketAddr, SocketAddrV4};","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8628202,"byte_end":8628257,"line_start":240,"line_end":240,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8628262,"byte_end":8628265,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8628270,"byte_end":8628288,"line_start":242,"line_end":242,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8628293,"byte_end":8628332,"line_start":243,"line_end":243,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8628337,"byte_end":8628403,"line_start":244,"line_end":244,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8628408,"byte_end":8628411,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(listener.local_addr()?,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8628416,"byte_end":8628458,"line_start":246,"line_end":246,"column_start":5,"column_end":47}},{"value":"/                SocketAddr::V4(SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080)));","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8628463,"byte_end":8628552,"line_start":247,"line_end":247,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8628557,"byte_end":8628560,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8628565,"byte_end":8628579,"line_start":249,"line_end":249,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8628584,"byte_end":8628589,"line_start":250,"line_end":250,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8628594,"byte_end":8628601,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2677},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8629316,"byte_end":8629319,"line_start":279,"line_end":279,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8628699,"byte_end":8628757,"line_start":256,"line_end":256,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8628762,"byte_end":8628765,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8628770,"byte_end":8628830,"line_start":258,"line_end":258,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8628835,"byte_end":8628838,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8628843,"byte_end":8628880,"line_start":260,"line_end":260,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8628885,"byte_end":8628888,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8628893,"byte_end":8628907,"line_start":262,"line_end":262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8628912,"byte_end":8628915,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8628920,"byte_end":8628933,"line_start":264,"line_end":264,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8628938,"byte_end":8628970,"line_start":265,"line_end":265,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8628975,"byte_end":8628978,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8628983,"byte_end":8628999,"line_start":267,"line_end":267,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8629004,"byte_end":8629007,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8629012,"byte_end":8629030,"line_start":269,"line_end":269,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8629035,"byte_end":8629074,"line_start":270,"line_end":270,"column_start":5,"column_end":44}},{"value":"/    let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8629079,"byte_end":8629141,"line_start":271,"line_end":271,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8629146,"byte_end":8629149,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/    listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8629154,"byte_end":8629211,"line_start":273,"line_end":273,"column_start":5,"column_end":62}},{"value":"/    assert_eq!(listener.ttl()?, 100);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8629216,"byte_end":8629256,"line_start":274,"line_end":274,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8629261,"byte_end":8629264,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/    Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8629269,"byte_end":8629282,"line_start":276,"line_end":276,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8629287,"byte_end":8629292,"line_start":277,"line_end":277,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8629297,"byte_end":8629304,"line_start":278,"line_end":278,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2678},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8629948,"byte_end":8629955,"line_start":304,"line_end":304,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8629381,"byte_end":8629439,"line_start":283,"line_end":283,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8629444,"byte_end":8629447,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8629452,"byte_end":8629528,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8629533,"byte_end":8629554,"line_start":286,"line_end":286,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8629559,"byte_end":8629562,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8629567,"byte_end":8629581,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8629586,"byte_end":8629589,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8629594,"byte_end":8629607,"line_start":290,"line_end":290,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8629612,"byte_end":8629644,"line_start":291,"line_end":291,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8629649,"byte_end":8629652,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8629657,"byte_end":8629673,"line_start":293,"line_end":293,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8629678,"byte_end":8629681,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8629686,"byte_end":8629704,"line_start":295,"line_end":295,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8629709,"byte_end":8629748,"line_start":296,"line_end":296,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8629753,"byte_end":8629816,"line_start":297,"line_end":297,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8629821,"byte_end":8629824,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/     listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8629829,"byte_end":8629887,"line_start":299,"line_end":299,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8629892,"byte_end":8629895,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8629900,"byte_end":8629914,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8629919,"byte_end":8629924,"line_start":302,"line_end":302,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8629929,"byte_end":8629936,"line_start":303,"line_end":303,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3045},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8634081,"byte_end":8634090,"line_start":84,"line_end":84,"column_start":16,"column_end":25},"name":"TcpSocket","qualname":"::net::tcp::socket::TcpSocket","value":"TcpSocket {  }","parent":null,"children":[{"krate":0,"index":3046}],"decl_id":null,"docs":" A TCP socket that has not yet been converted to a `TcpStream` or\n `TcpListener`.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":21444,"byte_end":21467,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2702},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8634954,"byte_end":8634960,"line_start":119,"line_end":119,"column_start":12,"column_end":18},"name":"new_v4","qualname":"<TcpSocket>::new_v4","value":"pub fn new_v4() -> io::Result<TcpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Create a new socket configured for IPv4.","sig":null,"attributes":[{"value":"/ Create a new socket configured for IPv4.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8634159,"byte_end":8634203,"line_start":90,"line_end":90,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8634208,"byte_end":8634211,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Calls `socket(2)` with `AF_INET` and `SOCK_STREAM`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8634216,"byte_end":8634271,"line_start":92,"line_end":92,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8634276,"byte_end":8634279,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8634284,"byte_end":8634297,"line_start":94,"line_end":94,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8634302,"byte_end":8634305,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ On success, the newly created `TcpSocket` is returned. If an error is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8634310,"byte_end":8634383,"line_start":96,"line_end":96,"column_start":5,"column_end":78}},{"value":"/ encountered, it is returned instead.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8634388,"byte_end":8634428,"line_start":97,"line_end":97,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8634433,"byte_end":8634436,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8634441,"byte_end":8634455,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8634460,"byte_end":8634463,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ Create a new IPv4 socket and start listening.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8634468,"byte_end":8634517,"line_start":101,"line_end":101,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8634522,"byte_end":8634525,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8634530,"byte_end":8634543,"line_start":103,"line_end":103,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8634548,"byte_end":8634578,"line_start":104,"line_end":104,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8634583,"byte_end":8634586,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8634591,"byte_end":8634607,"line_start":106,"line_end":106,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8634612,"byte_end":8634615,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8634620,"byte_end":8634638,"line_start":108,"line_end":108,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8634643,"byte_end":8634682,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8634687,"byte_end":8634740,"line_start":110,"line_end":110,"column_start":5,"column_end":58}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8634745,"byte_end":8634787,"line_start":111,"line_end":111,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8634792,"byte_end":8634819,"line_start":112,"line_end":112,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8634824,"byte_end":8634827,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(128)?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8634832,"byte_end":8634875,"line_start":114,"line_end":114,"column_start":5,"column_end":48}},{"value":"/ # drop(listener);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8634880,"byte_end":8634901,"line_start":115,"line_end":115,"column_start":5,"column_end":26}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8634906,"byte_end":8634920,"line_start":116,"line_end":116,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8634925,"byte_end":8634930,"line_start":117,"line_end":117,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8634935,"byte_end":8634942,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2703},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8635877,"byte_end":8635883,"line_start":153,"line_end":153,"column_start":12,"column_end":18},"name":"new_v6","qualname":"<TcpSocket>::new_v6","value":"pub fn new_v6() -> io::Result<TcpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Create a new socket configured for IPv6.","sig":null,"attributes":[{"value":"/ Create a new socket configured for IPv6.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8635085,"byte_end":8635129,"line_start":124,"line_end":124,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8635134,"byte_end":8635137,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Calls `socket(2)` with `AF_INET6` and `SOCK_STREAM`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8635142,"byte_end":8635198,"line_start":126,"line_end":126,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8635203,"byte_end":8635206,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8635211,"byte_end":8635224,"line_start":128,"line_end":128,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8635229,"byte_end":8635232,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ On success, the newly created `TcpSocket` is returned. If an error is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8635237,"byte_end":8635310,"line_start":130,"line_end":130,"column_start":5,"column_end":78}},{"value":"/ encountered, it is returned instead.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8635315,"byte_end":8635355,"line_start":131,"line_end":131,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8635360,"byte_end":8635363,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8635368,"byte_end":8635382,"line_start":133,"line_end":133,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8635387,"byte_end":8635390,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Create a new IPv6 socket and start listening.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8635395,"byte_end":8635444,"line_start":135,"line_end":135,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8635449,"byte_end":8635452,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8635457,"byte_end":8635470,"line_start":137,"line_end":137,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8635475,"byte_end":8635505,"line_start":138,"line_end":138,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8635510,"byte_end":8635513,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8635518,"byte_end":8635534,"line_start":140,"line_end":140,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8635539,"byte_end":8635542,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8635547,"byte_end":8635565,"line_start":142,"line_end":142,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8635570,"byte_end":8635609,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/     let addr = \"[::1]:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8635614,"byte_end":8635663,"line_start":144,"line_end":144,"column_start":5,"column_end":54}},{"value":"/     let socket = TcpSocket::new_v6()?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8635668,"byte_end":8635710,"line_start":145,"line_end":145,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8635715,"byte_end":8635742,"line_start":146,"line_end":146,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8635747,"byte_end":8635750,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(128)?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8635755,"byte_end":8635798,"line_start":148,"line_end":148,"column_start":5,"column_end":48}},{"value":"/ # drop(listener);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8635803,"byte_end":8635824,"line_start":149,"line_end":149,"column_start":5,"column_end":26}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8635829,"byte_end":8635843,"line_start":150,"line_end":150,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8635848,"byte_end":8635853,"line_start":151,"line_end":151,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8635858,"byte_end":8635865,"line_start":152,"line_end":152,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2704},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8636698,"byte_end":8636711,"line_start":184,"line_end":184,"column_start":12,"column_end":25},"name":"set_reuseaddr","qualname":"<TcpSocket>::set_reuseaddr","value":"pub fn set_reuseaddr(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Allow the socket to bind to an in-use address.","sig":null,"attributes":[{"value":"/ Allow the socket to bind to an in-use address.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8636008,"byte_end":8636058,"line_start":158,"line_end":158,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8636063,"byte_end":8636066,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Behavior is platform specific. Refer to the target platform's","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8636071,"byte_end":8636136,"line_start":160,"line_end":160,"column_start":5,"column_end":70}},{"value":"/ documentation for more details.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8636141,"byte_end":8636176,"line_start":161,"line_end":161,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8636181,"byte_end":8636184,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8636189,"byte_end":8636203,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8636208,"byte_end":8636211,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8636216,"byte_end":8636229,"line_start":165,"line_end":165,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8636234,"byte_end":8636264,"line_start":166,"line_end":166,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8636269,"byte_end":8636272,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8636277,"byte_end":8636293,"line_start":168,"line_end":168,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8636298,"byte_end":8636301,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8636306,"byte_end":8636324,"line_start":170,"line_end":170,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8636329,"byte_end":8636368,"line_start":171,"line_end":171,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8636373,"byte_end":8636426,"line_start":172,"line_end":172,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8636431,"byte_end":8636434,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8636439,"byte_end":8636481,"line_start":174,"line_end":174,"column_start":5,"column_end":47}},{"value":"/     socket.set_reuseaddr(true)?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8636486,"byte_end":8636522,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8636527,"byte_end":8636554,"line_start":176,"line_end":176,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8636559,"byte_end":8636562,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8636567,"byte_end":8636611,"line_start":178,"line_end":178,"column_start":5,"column_end":49}},{"value":"/ # drop(listener);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8636616,"byte_end":8636637,"line_start":179,"line_end":179,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8636642,"byte_end":8636645,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8636650,"byte_end":8636664,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8636669,"byte_end":8636674,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8636679,"byte_end":8636686,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2705},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8637410,"byte_end":8637419,"line_start":210,"line_end":210,"column_start":12,"column_end":21},"name":"reuseaddr","qualname":"<TcpSocket>::reuseaddr","value":"pub fn reuseaddr(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the value set for `SO_REUSEADDR` on this socket","sig":null,"attributes":[{"value":"/ Retrieves the value set for `SO_REUSEADDR` on this socket","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8636811,"byte_end":8636872,"line_start":188,"line_end":188,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8636877,"byte_end":8636880,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8636885,"byte_end":8636899,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8636904,"byte_end":8636907,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8636912,"byte_end":8636925,"line_start":192,"line_end":192,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8636930,"byte_end":8636960,"line_start":193,"line_end":193,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8636965,"byte_end":8636968,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8636973,"byte_end":8636989,"line_start":195,"line_end":195,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8636994,"byte_end":8636997,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8637002,"byte_end":8637020,"line_start":197,"line_end":197,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8637025,"byte_end":8637064,"line_start":198,"line_end":198,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8637069,"byte_end":8637122,"line_start":199,"line_end":199,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8637127,"byte_end":8637130,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8637135,"byte_end":8637177,"line_start":201,"line_end":201,"column_start":5,"column_end":47}},{"value":"/     socket.set_reuseaddr(true)?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8637182,"byte_end":8637218,"line_start":202,"line_end":202,"column_start":5,"column_end":41}},{"value":"/     assert!(socket.reuseaddr().unwrap());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8637223,"byte_end":8637268,"line_start":203,"line_end":203,"column_start":5,"column_end":50}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8637273,"byte_end":8637300,"line_start":204,"line_end":204,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8637305,"byte_end":8637308,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8637313,"byte_end":8637357,"line_start":206,"line_end":206,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8637362,"byte_end":8637376,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8637381,"byte_end":8637386,"line_start":208,"line_end":208,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8637391,"byte_end":8637398,"line_start":209,"line_end":209,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2706},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8639745,"byte_end":8639765,"line_start":286,"line_end":286,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<TcpSocket>::set_send_buffer_size","value":"pub fn set_send_buffer_size(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the TCP send buffer on this socket.","sig":null,"attributes":[{"value":"/ Sets the size of the TCP send buffer on this socket.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8639593,"byte_end":8639649,"line_start":283,"line_end":283,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8639654,"byte_end":8639657,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this sets the `SO_SNDBUF` socket option.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8639662,"byte_end":8639733,"line_start":285,"line_end":285,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2707},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8641088,"byte_end":8641104,"line_start":313,"line_end":313,"column_start":12,"column_end":28},"name":"send_buffer_size","qualname":"<TcpSocket>::send_buffer_size","value":"pub fn send_buffer_size(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the TCP send buffer for this socket.","sig":null,"attributes":[{"value":"/ Returns the size of the TCP send buffer for this socket.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8639861,"byte_end":8639921,"line_start":290,"line_end":290,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8639926,"byte_end":8639929,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this is the value of the `SO_SNDBUF` socket","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8639934,"byte_end":8640008,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ option.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8640013,"byte_end":8640024,"line_start":293,"line_end":293,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8640029,"byte_end":8640032,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Note that if [`set_send_buffer_size`] has been called on this socket","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8640037,"byte_end":8640109,"line_start":295,"line_end":295,"column_start":5,"column_end":77}},{"value":"/ previously, the value returned by this function may not be the same as","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8640114,"byte_end":8640188,"line_start":296,"line_end":296,"column_start":5,"column_end":79}},{"value":"/ the argument provided to `set_send_buffer_size`. This is for the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8640193,"byte_end":8640261,"line_start":297,"line_end":297,"column_start":5,"column_end":73}},{"value":"/ following reasons:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8640266,"byte_end":8640288,"line_start":298,"line_end":298,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8640293,"byte_end":8640296,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ * Most operating systems have minimum and maximum allowed sizes for the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8640301,"byte_end":8640376,"line_start":300,"line_end":300,"column_start":5,"column_end":80}},{"value":"/   send buffer, and will clamp the provided value if it is below the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8640381,"byte_end":8640452,"line_start":301,"line_end":301,"column_start":5,"column_end":76}},{"value":"/   minimum or above the maximum. The minimum and maximum buffer sizes are","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8640457,"byte_end":8640533,"line_start":302,"line_end":302,"column_start":5,"column_end":81}},{"value":"/   OS-dependent.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8640538,"byte_end":8640557,"line_start":303,"line_end":303,"column_start":5,"column_end":24}},{"value":"/ * Linux will double the buffer size to account for internal bookkeeping","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8640562,"byte_end":8640637,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/   data, and returns the doubled value from `getsockopt(2)`. As per `man","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8640642,"byte_end":8640717,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/   7 socket`:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8640722,"byte_end":8640738,"line_start":306,"line_end":306,"column_start":5,"column_end":21}},{"value":"/   > Sets or gets the maximum socket send buffer in bytes. The","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8640743,"byte_end":8640808,"line_start":307,"line_end":307,"column_start":5,"column_end":70}},{"value":"/   > kernel doubles this value (to allow space for bookkeeping","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8640813,"byte_end":8640878,"line_start":308,"line_end":308,"column_start":5,"column_end":70}},{"value":"/   > overhead) when it is set using `setsockopt(2)`, and this doubled","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8640883,"byte_end":8640955,"line_start":309,"line_end":309,"column_start":5,"column_end":77}},{"value":"/   > value is returned by `getsockopt(2)`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8640960,"byte_end":8641005,"line_start":310,"line_end":310,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8641010,"byte_end":8641013,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ [`set_send_buffer_size`]: #method.set_send_buffer_size","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8641018,"byte_end":8641076,"line_start":312,"line_end":312,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2708},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8641341,"byte_end":8641361,"line_start":320,"line_end":320,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<TcpSocket>::set_recv_buffer_size","value":"pub fn set_recv_buffer_size(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the TCP receive buffer on this socket.","sig":null,"attributes":[{"value":"/ Sets the size of the TCP receive buffer on this socket.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8641186,"byte_end":8641245,"line_start":317,"line_end":317,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8641250,"byte_end":8641253,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this sets the `SO_RCVBUF` socket option.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8641258,"byte_end":8641329,"line_start":319,"line_end":319,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2709},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8642690,"byte_end":8642706,"line_start":347,"line_end":347,"column_start":12,"column_end":28},"name":"recv_buffer_size","qualname":"<TcpSocket>::recv_buffer_size","value":"pub fn recv_buffer_size(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the TCP receive buffer for this socket.","sig":null,"attributes":[{"value":"/ Returns the size of the TCP receive buffer for this socket.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8641457,"byte_end":8641520,"line_start":324,"line_end":324,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8641525,"byte_end":8641528,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this is the value of the `SO_RCVBUF` socket","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8641533,"byte_end":8641607,"line_start":326,"line_end":326,"column_start":5,"column_end":79}},{"value":"/ option.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8641612,"byte_end":8641623,"line_start":327,"line_end":327,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8641628,"byte_end":8641631,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ Note that if [`set_recv_buffer_size`] has been called on this socket","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8641636,"byte_end":8641708,"line_start":329,"line_end":329,"column_start":5,"column_end":77}},{"value":"/ previously, the value returned by this function may not be the same as","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8641713,"byte_end":8641787,"line_start":330,"line_end":330,"column_start":5,"column_end":79}},{"value":"/ the argument provided to `set_send_buffer_size`. This is for the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8641792,"byte_end":8641860,"line_start":331,"line_end":331,"column_start":5,"column_end":73}},{"value":"/ following reasons:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8641865,"byte_end":8641887,"line_start":332,"line_end":332,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8641892,"byte_end":8641895,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ * Most operating systems have minimum and maximum allowed sizes for the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8641900,"byte_end":8641975,"line_start":334,"line_end":334,"column_start":5,"column_end":80}},{"value":"/   receive buffer, and will clamp the provided value if it is below the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8641980,"byte_end":8642054,"line_start":335,"line_end":335,"column_start":5,"column_end":79}},{"value":"/   minimum or above the maximum. The minimum and maximum buffer sizes are","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8642059,"byte_end":8642135,"line_start":336,"line_end":336,"column_start":5,"column_end":81}},{"value":"/   OS-dependent.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8642140,"byte_end":8642159,"line_start":337,"line_end":337,"column_start":5,"column_end":24}},{"value":"/ * Linux will double the buffer size to account for internal bookkeeping","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8642164,"byte_end":8642239,"line_start":338,"line_end":338,"column_start":5,"column_end":80}},{"value":"/   data, and returns the doubled value from `getsockopt(2)`. As per `man","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8642244,"byte_end":8642319,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/   7 socket`:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8642324,"byte_end":8642340,"line_start":340,"line_end":340,"column_start":5,"column_end":21}},{"value":"/   > Sets or gets the maximum socket send buffer in bytes. The","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8642345,"byte_end":8642410,"line_start":341,"line_end":341,"column_start":5,"column_end":70}},{"value":"/   > kernel doubles this value (to allow space for bookkeeping","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8642415,"byte_end":8642480,"line_start":342,"line_end":342,"column_start":5,"column_end":70}},{"value":"/   > overhead) when it is set using `setsockopt(2)`, and this doubled","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8642485,"byte_end":8642557,"line_start":343,"line_end":343,"column_start":5,"column_end":77}},{"value":"/   > value is returned by `getsockopt(2)`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8642562,"byte_end":8642607,"line_start":344,"line_end":344,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8642612,"byte_end":8642615,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ [`set_recv_buffer_size`]: #method.set_recv_buffer_size","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8642620,"byte_end":8642678,"line_start":346,"line_end":346,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2710},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8643414,"byte_end":8643424,"line_start":373,"line_end":373,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Get the local address of this socket.","sig":null,"attributes":[{"value":"/ Get the local address of this socket.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8642788,"byte_end":8642829,"line_start":351,"line_end":351,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8642834,"byte_end":8642837,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Will fail on windows if called before `bind`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8642842,"byte_end":8642891,"line_start":353,"line_end":353,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8642896,"byte_end":8642899,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8642904,"byte_end":8642918,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8642923,"byte_end":8642926,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8642931,"byte_end":8642944,"line_start":357,"line_end":357,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8642949,"byte_end":8642979,"line_start":358,"line_end":358,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8642984,"byte_end":8642987,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8642992,"byte_end":8643008,"line_start":360,"line_end":360,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8643013,"byte_end":8643016,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8643021,"byte_end":8643039,"line_start":362,"line_end":362,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8643044,"byte_end":8643083,"line_start":363,"line_end":363,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8643088,"byte_end":8643141,"line_start":364,"line_end":364,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8643146,"byte_end":8643149,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8643154,"byte_end":8643196,"line_start":366,"line_end":366,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8643201,"byte_end":8643228,"line_start":367,"line_end":367,"column_start":5,"column_end":32}},{"value":"/     assert_eq!(socket.local_addr().unwrap().to_string(), \"127.0.0.1:8080\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8643233,"byte_end":8643312,"line_start":368,"line_end":368,"column_start":5,"column_end":84}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8643317,"byte_end":8643361,"line_start":369,"line_end":369,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8643366,"byte_end":8643380,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8643385,"byte_end":8643390,"line_start":371,"line_end":371,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8643395,"byte_end":8643402,"line_start":372,"line_end":372,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2711},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8644254,"byte_end":8644258,"line_start":405,"line_end":405,"column_start":12,"column_end":16},"name":"bind","qualname":"<TcpSocket>::bind","value":"pub fn bind(&Self, SocketAddr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Bind the socket to the given address.","sig":null,"attributes":[{"value":"/ Bind the socket to the given address.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8643506,"byte_end":8643547,"line_start":377,"line_end":377,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8643552,"byte_end":8643555,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ This calls the `bind(2)` operating-system function. Behavior is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8643560,"byte_end":8643627,"line_start":379,"line_end":379,"column_start":5,"column_end":72}},{"value":"/ platform specific. Refer to the target platform's documentation for more","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8643632,"byte_end":8643708,"line_start":380,"line_end":380,"column_start":5,"column_end":81}},{"value":"/ details.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8643713,"byte_end":8643725,"line_start":381,"line_end":381,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8643730,"byte_end":8643733,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8643738,"byte_end":8643752,"line_start":383,"line_end":383,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8643757,"byte_end":8643760,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ Bind a socket before listening.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8643765,"byte_end":8643800,"line_start":385,"line_end":385,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8643805,"byte_end":8643808,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8643813,"byte_end":8643826,"line_start":387,"line_end":387,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8643831,"byte_end":8643861,"line_start":388,"line_end":388,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8643866,"byte_end":8643869,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8643874,"byte_end":8643890,"line_start":390,"line_end":390,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8643895,"byte_end":8643898,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8643903,"byte_end":8643921,"line_start":392,"line_end":392,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8643926,"byte_end":8643965,"line_start":393,"line_end":393,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8643970,"byte_end":8644023,"line_start":394,"line_end":394,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8644028,"byte_end":8644031,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8644036,"byte_end":8644078,"line_start":396,"line_end":396,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8644083,"byte_end":8644110,"line_start":397,"line_end":397,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8644115,"byte_end":8644118,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8644123,"byte_end":8644167,"line_start":399,"line_end":399,"column_start":5,"column_end":49}},{"value":"/ # drop(listener);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8644172,"byte_end":8644193,"line_start":400,"line_end":400,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8644198,"byte_end":8644201,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8644206,"byte_end":8644220,"line_start":402,"line_end":402,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8644225,"byte_end":8644230,"line_start":403,"line_end":403,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8644235,"byte_end":8644242,"line_start":404,"line_end":404,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2712},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8645326,"byte_end":8645333,"line_start":441,"line_end":441,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpSocket>::connect","value":"pub async fn connect(Self, SocketAddr) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Establish a TCP connection with a peer at the specified socket address.","sig":null,"attributes":[{"value":"/ Establish a TCP connection with a peer at the specified socket address.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8644345,"byte_end":8644420,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8644425,"byte_end":8644428,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ The `TcpSocket` is consumed. Once the connection is established, a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8644433,"byte_end":8644503,"line_start":411,"line_end":411,"column_start":5,"column_end":75}},{"value":"/ connected [`TcpStream`] is returned. If the connection fails, the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8644508,"byte_end":8644577,"line_start":412,"line_end":412,"column_start":5,"column_end":74}},{"value":"/ encountered error is returned.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8644582,"byte_end":8644616,"line_start":413,"line_end":413,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8644621,"byte_end":8644624,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8644629,"byte_end":8644657,"line_start":415,"line_end":415,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8644662,"byte_end":8644665,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ This calls the `connect(2)` operating-system function. Behavior is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8644670,"byte_end":8644740,"line_start":417,"line_end":417,"column_start":5,"column_end":75}},{"value":"/ platform specific. Refer to the target platform's documentation for more","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8644745,"byte_end":8644821,"line_start":418,"line_end":418,"column_start":5,"column_end":81}},{"value":"/ details.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8644826,"byte_end":8644838,"line_start":419,"line_end":419,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8644843,"byte_end":8644846,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8644851,"byte_end":8644865,"line_start":421,"line_end":421,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8644870,"byte_end":8644873,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ Connecting to a peer.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8644878,"byte_end":8644903,"line_start":423,"line_end":423,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8644908,"byte_end":8644911,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8644916,"byte_end":8644929,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8644934,"byte_end":8644964,"line_start":426,"line_end":426,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8644969,"byte_end":8644972,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8644977,"byte_end":8644993,"line_start":428,"line_end":428,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8644998,"byte_end":8645001,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8645006,"byte_end":8645024,"line_start":430,"line_end":430,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8645029,"byte_end":8645068,"line_start":431,"line_end":431,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8645073,"byte_end":8645126,"line_start":432,"line_end":432,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8645131,"byte_end":8645134,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8645139,"byte_end":8645181,"line_start":434,"line_end":434,"column_start":5,"column_end":47}},{"value":"/     let stream = socket.connect(addr).await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8645186,"byte_end":8645235,"line_start":435,"line_end":435,"column_start":5,"column_end":54}},{"value":"/ # drop(stream);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8645240,"byte_end":8645259,"line_start":436,"line_end":436,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8645264,"byte_end":8645267,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8645272,"byte_end":8645286,"line_start":438,"line_end":438,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8645291,"byte_end":8645296,"line_start":439,"line_end":439,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8645301,"byte_end":8645308,"line_start":440,"line_end":440,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2715},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8646631,"byte_end":8646637,"line_start":481,"line_end":481,"column_start":12,"column_end":18},"name":"listen","qualname":"<TcpSocket>::listen","value":"pub fn listen(Self, u32) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Convert the socket into a `TcpListener`.","sig":null,"attributes":[{"value":"/ Convert the socket into a `TcpListener`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8645483,"byte_end":8645527,"line_start":446,"line_end":446,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8645532,"byte_end":8645535,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ `backlog` defines the maximum number of pending connections are queued","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8645540,"byte_end":8645614,"line_start":448,"line_end":448,"column_start":5,"column_end":79}},{"value":"/ by the operating system at any given time. Connection are removed from","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8645619,"byte_end":8645693,"line_start":449,"line_end":449,"column_start":5,"column_end":79}},{"value":"/ the queue with [`TcpListener::accept`]. When the queue is full, the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8645698,"byte_end":8645769,"line_start":450,"line_end":450,"column_start":5,"column_end":76}},{"value":"/ operationg-system will start rejecting connections.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8645774,"byte_end":8645829,"line_start":451,"line_end":451,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8645834,"byte_end":8645837,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ [`TcpListener::accept`]: TcpListener::accept","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8645842,"byte_end":8645890,"line_start":453,"line_end":453,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8645895,"byte_end":8645898,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ This calls the `listen(2)` operating-system function, marking the socket","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8645903,"byte_end":8645979,"line_start":455,"line_end":455,"column_start":5,"column_end":81}},{"value":"/ as a passive socket. Behavior is platform specific. Refer to the target","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8645984,"byte_end":8646059,"line_start":456,"line_end":456,"column_start":5,"column_end":80}},{"value":"/ platform's documentation for more details.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8646064,"byte_end":8646110,"line_start":457,"line_end":457,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8646115,"byte_end":8646118,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8646123,"byte_end":8646137,"line_start":459,"line_end":459,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8646142,"byte_end":8646145,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ Create a `TcpListener`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8646150,"byte_end":8646177,"line_start":461,"line_end":461,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8646182,"byte_end":8646185,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8646190,"byte_end":8646203,"line_start":463,"line_end":463,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8646208,"byte_end":8646238,"line_start":464,"line_end":464,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8646243,"byte_end":8646246,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8646251,"byte_end":8646267,"line_start":466,"line_end":466,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8646272,"byte_end":8646275,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8646280,"byte_end":8646298,"line_start":468,"line_end":468,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8646303,"byte_end":8646342,"line_start":469,"line_end":469,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8646347,"byte_end":8646400,"line_start":470,"line_end":470,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8646405,"byte_end":8646408,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8646413,"byte_end":8646455,"line_start":472,"line_end":472,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8646460,"byte_end":8646487,"line_start":473,"line_end":473,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8646492,"byte_end":8646495,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8646500,"byte_end":8646544,"line_start":475,"line_end":475,"column_start":5,"column_end":49}},{"value":"/ # drop(listener);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8646549,"byte_end":8646570,"line_start":476,"line_end":476,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8646575,"byte_end":8646578,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8646583,"byte_end":8646597,"line_start":478,"line_end":478,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8646602,"byte_end":8646607,"line_start":479,"line_end":479,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8646612,"byte_end":8646619,"line_start":480,"line_end":480,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3047},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8648983,"byte_end":8648991,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::tcp::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed read half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed read half of a [`TcpStream`], created by [`split`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8648650,"byte_end":8648714,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8648715,"byte_end":8648718,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Reading from a `ReadHalf` is usually done using the convenience methods found on the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8648719,"byte_end":8648807,"line_start":22,"line_end":22,"column_start":1,"column_end":89}},{"value":"/ [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8648808,"byte_end":8648835,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8648836,"byte_end":8648839,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8648840,"byte_end":8648868,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8648869,"byte_end":8648902,"line_start":26,"line_end":26,"column_start":1,"column_end":34}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8648903,"byte_end":8648954,"line_start":27,"line_end":27,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3054},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8649605,"byte_end":8649614,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::tcp::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed write half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed write half of a [`TcpStream`], created by [`split`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8649013,"byte_end":8649078,"line_start":31,"line_end":31,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8649079,"byte_end":8649082,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8649083,"byte_end":8649169,"line_start":33,"line_end":33,"column_start":1,"column_end":87}},{"value":"/ shut down the TCP stream in the write direction.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8649170,"byte_end":8649222,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8649223,"byte_end":8649226,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Writing to an `WriteHalf` is usually done using the convenience methods found","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8649227,"byte_end":8649308,"line_start":36,"line_end":36,"column_start":1,"column_end":82}},{"value":"/ on the [`AsyncWriteExt`] trait.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8649309,"byte_end":8649344,"line_start":37,"line_end":37,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8649345,"byte_end":8649348,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8649349,"byte_end":8649377,"line_start":39,"line_end":39,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8649378,"byte_end":8649411,"line_start":40,"line_end":40,"column_start":1,"column_end":34}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8649412,"byte_end":8649459,"line_start":41,"line_end":41,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8649460,"byte_end":8649522,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8649523,"byte_end":8649576,"line_start":43,"line_end":43,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2739},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8650930,"byte_end":8650939,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<ReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8649788,"byte_end":8649862,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8649867,"byte_end":8649940,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8649945,"byte_end":8649959,"line_start":54,"line_end":54,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8649964,"byte_end":8649967,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_peek` or `poll_read`, only the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8649972,"byte_end":8650043,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ `Waker` from the `Context` passed to the most recent call is scheduled","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8650048,"byte_end":8650122,"line_start":57,"line_end":57,"column_start":5,"column_end":79}},{"value":"/ to receive a wakeup.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8650127,"byte_end":8650151,"line_start":58,"line_end":58,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8650156,"byte_end":8650159,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8650164,"byte_end":8650237,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8650242,"byte_end":8650245,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8650250,"byte_end":8650264,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8650269,"byte_end":8650272,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8650277,"byte_end":8650290,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, ReadBuf};","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8650295,"byte_end":8650330,"line_start":65,"line_end":65,"column_start":5,"column_end":40}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8650335,"byte_end":8650365,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8650370,"byte_end":8650373,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8650378,"byte_end":8650411,"line_start":68,"line_end":68,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8650416,"byte_end":8650419,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8650424,"byte_end":8650442,"line_start":70,"line_end":70,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8650447,"byte_end":8650486,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8650491,"byte_end":8650560,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8650565,"byte_end":8650613,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8650618,"byte_end":8650648,"line_start":74,"line_end":74,"column_start":5,"column_end":35}},{"value":"/     let mut buf = ReadBuf::new(&mut buf);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8650653,"byte_end":8650698,"line_start":75,"line_end":75,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8650703,"byte_end":8650706,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8650711,"byte_end":8650733,"line_start":77,"line_end":77,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8650738,"byte_end":8650783,"line_start":78,"line_end":78,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8650788,"byte_end":8650806,"line_start":79,"line_end":79,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8650811,"byte_end":8650814,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8650819,"byte_end":8650833,"line_start":81,"line_end":81,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8650838,"byte_end":8650843,"line_start":82,"line_end":82,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8650848,"byte_end":8650855,"line_start":83,"line_end":83,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8650860,"byte_end":8650863,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8650868,"byte_end":8650918,"line_start":85,"line_end":85,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2740},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8652399,"byte_end":8652403,"line_start":133,"line_end":133,"column_start":18,"column_end":22},"name":"peek","qualname":"<ReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8651101,"byte_end":8651171,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8651176,"byte_end":8651245,"line_start":95,"line_end":95,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8651250,"byte_end":8651289,"line_start":96,"line_end":96,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8651294,"byte_end":8651297,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8651302,"byte_end":8651370,"line_start":98,"line_end":98,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8651375,"byte_end":8651378,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8651383,"byte_end":8651423,"line_start":100,"line_end":100,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8651428,"byte_end":8651431,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8651436,"byte_end":8651450,"line_start":102,"line_end":102,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8651455,"byte_end":8651458,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8651463,"byte_end":8651476,"line_start":104,"line_end":104,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8651481,"byte_end":8651511,"line_start":105,"line_end":105,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8651516,"byte_end":8651548,"line_start":106,"line_end":106,"column_start":5,"column_end":37}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8651553,"byte_end":8651579,"line_start":107,"line_end":107,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8651584,"byte_end":8651587,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8651592,"byte_end":8651610,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8651615,"byte_end":8651666,"line_start":110,"line_end":110,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8651671,"byte_end":8651699,"line_start":111,"line_end":111,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8651704,"byte_end":8651773,"line_start":112,"line_end":112,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8651778,"byte_end":8651826,"line_start":113,"line_end":113,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8651831,"byte_end":8651834,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8651839,"byte_end":8651868,"line_start":115,"line_end":115,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8651873,"byte_end":8651902,"line_start":116,"line_end":116,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8651907,"byte_end":8651910,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8651915,"byte_end":8651942,"line_start":118,"line_end":118,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8651947,"byte_end":8651994,"line_start":119,"line_end":119,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8651999,"byte_end":8652002,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8652007,"byte_end":8652031,"line_start":121,"line_end":121,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8652036,"byte_end":8652095,"line_start":122,"line_end":122,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8652100,"byte_end":8652139,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8652144,"byte_end":8652147,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8652152,"byte_end":8652166,"line_start":125,"line_end":125,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8652171,"byte_end":8652176,"line_start":126,"line_end":126,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8652181,"byte_end":8652188,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8652193,"byte_end":8652196,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8652201,"byte_end":8652266,"line_start":129,"line_end":129,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8652271,"byte_end":8652274,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8652279,"byte_end":8652325,"line_start":131,"line_end":131,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8652330,"byte_end":8652381,"line_start":132,"line_end":132,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":3061},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8654933,"byte_end":8654946,"line_start":31,"line_end":31,"column_start":12,"column_end":25},"name":"OwnedReadHalf","qualname":"::net::tcp::split_owned::OwnedReadHalf","value":"OwnedReadHalf {  }","parent":null,"children":[{"krate":0,"index":3062}],"decl_id":null,"docs":" Owned read half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned read half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8654582,"byte_end":8654648,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8654649,"byte_end":8654652,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Reading from an `OwnedReadHalf` is usually done using the convenience methods found","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8654653,"byte_end":8654740,"line_start":24,"line_end":24,"column_start":1,"column_end":88}},{"value":"/ on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8654741,"byte_end":8654775,"line_start":25,"line_end":25,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8654776,"byte_end":8654779,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8654780,"byte_end":8654808,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8654809,"byte_end":8654852,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8654853,"byte_end":8654904,"line_start":29,"line_end":29,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3065},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8655672,"byte_end":8655686,"line_start":50,"line_end":50,"column_start":12,"column_end":26},"name":"OwnedWriteHalf","qualname":"::net::tcp::split_owned::OwnedWriteHalf","value":"OwnedWriteHalf {  }","parent":null,"children":[{"krate":0,"index":3066},{"krate":0,"index":3067}],"decl_id":null,"docs":" Owned write half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned write half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8654979,"byte_end":8655046,"line_start":35,"line_end":35,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8655047,"byte_end":8655050,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implementation of this type, [`poll_shutdown`] will","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8655051,"byte_end":8655138,"line_start":37,"line_end":37,"column_start":1,"column_end":88}},{"value":"/ shut down the TCP stream in the write direction.  Dropping the write half","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8655139,"byte_end":8655216,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ will also shut down the write half of the TCP stream.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8655217,"byte_end":8655274,"line_start":39,"line_end":39,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8655275,"byte_end":8655278,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods found","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8655279,"byte_end":8655365,"line_start":41,"line_end":41,"column_start":1,"column_end":87}},{"value":"/ on the [`AsyncWriteExt`] trait.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8655366,"byte_end":8655401,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8655402,"byte_end":8655405,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8655406,"byte_end":8655434,"line_start":44,"line_end":44,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8655435,"byte_end":8655478,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8655479,"byte_end":8655526,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8655527,"byte_end":8655589,"line_start":47,"line_end":47,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8655590,"byte_end":8655643,"line_start":48,"line_end":48,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":3070},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8656651,"byte_end":8656663,"line_start":84,"line_end":84,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::tcp::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating that two halves were not from the same socket, and thus could\n not be reunited.\n","sig":null,"attributes":[{"value":"/ Error indicating that two halves were not from the same socket, and thus could","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8656519,"byte_end":8656601,"line_start":81,"line_end":81,"column_start":1,"column_end":83}},{"value":"/ not be reunited.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8656602,"byte_end":8656622,"line_start":82,"line_end":82,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":3072},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8656664,"byte_end":8656681,"line_start":84,"line_end":84,"column_start":25,"column_end":42},"name":"0","qualname":"::net::tcp::split_owned::ReuniteError::0","value":"net::tcp::split_owned::OwnedReadHalf","parent":{"krate":0,"index":3070},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3073},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8656683,"byte_end":8656701,"line_start":84,"line_end":84,"column_start":44,"column_end":62},"name":"1","qualname":"::net::tcp::split_owned::ReuniteError::1","value":"net::tcp::split_owned::OwnedWriteHalf","parent":{"krate":0,"index":3070},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2782},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8657247,"byte_end":8657254,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedReadHalf>::reunite","value":"pub fn reunite(Self, OwnedWriteHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8656984,"byte_end":8657053,"line_start":98,"line_end":98,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8657058,"byte_end":8657122,"line_start":99,"line_end":99,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8657127,"byte_end":8657179,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8657184,"byte_end":8657187,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8657192,"byte_end":8657235,"line_start":102,"line_end":102,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2783},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8658504,"byte_end":8658513,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<OwnedReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8657361,"byte_end":8657435,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8657440,"byte_end":8657513,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8657518,"byte_end":8657532,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8657537,"byte_end":8657540,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_peek` or `poll_read`, only the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8657545,"byte_end":8657616,"line_start":111,"line_end":111,"column_start":5,"column_end":76}},{"value":"/ `Waker` from the `Context` passed to the most recent call is scheduled","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8657621,"byte_end":8657695,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ to receive a wakeup.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8657700,"byte_end":8657724,"line_start":113,"line_end":113,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8657729,"byte_end":8657732,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8657737,"byte_end":8657810,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8657815,"byte_end":8657818,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8657823,"byte_end":8657837,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8657842,"byte_end":8657845,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8657850,"byte_end":8657863,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, ReadBuf};","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8657868,"byte_end":8657903,"line_start":120,"line_end":120,"column_start":5,"column_end":40}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8657908,"byte_end":8657938,"line_start":121,"line_end":121,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8657943,"byte_end":8657946,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8657951,"byte_end":8657984,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8657989,"byte_end":8657992,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8657997,"byte_end":8658015,"line_start":125,"line_end":125,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8658020,"byte_end":8658059,"line_start":126,"line_end":126,"column_start":5,"column_end":44}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8658064,"byte_end":8658129,"line_start":127,"line_end":127,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8658134,"byte_end":8658187,"line_start":128,"line_end":128,"column_start":5,"column_end":58}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8658192,"byte_end":8658222,"line_start":129,"line_end":129,"column_start":5,"column_end":35}},{"value":"/     let mut buf = ReadBuf::new(&mut buf);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8658227,"byte_end":8658272,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8658277,"byte_end":8658280,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8658285,"byte_end":8658307,"line_start":132,"line_end":132,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8658312,"byte_end":8658357,"line_start":133,"line_end":133,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8658362,"byte_end":8658380,"line_start":134,"line_end":134,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8658385,"byte_end":8658388,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8658393,"byte_end":8658407,"line_start":136,"line_end":136,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8658412,"byte_end":8658417,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8658422,"byte_end":8658429,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8658434,"byte_end":8658437,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8658442,"byte_end":8658492,"line_start":140,"line_end":140,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2784},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8659978,"byte_end":8659982,"line_start":188,"line_end":188,"column_start":18,"column_end":22},"name":"peek","qualname":"<OwnedReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8658679,"byte_end":8658749,"line_start":149,"line_end":149,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8658754,"byte_end":8658823,"line_start":150,"line_end":150,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8658828,"byte_end":8658867,"line_start":151,"line_end":151,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8658872,"byte_end":8658875,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8658880,"byte_end":8658948,"line_start":153,"line_end":153,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8658953,"byte_end":8658956,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8658961,"byte_end":8659001,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8659006,"byte_end":8659009,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8659014,"byte_end":8659028,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8659033,"byte_end":8659036,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8659041,"byte_end":8659054,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8659059,"byte_end":8659089,"line_start":160,"line_end":160,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8659094,"byte_end":8659126,"line_start":161,"line_end":161,"column_start":5,"column_end":37}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8659131,"byte_end":8659157,"line_start":162,"line_end":162,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8659162,"byte_end":8659165,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8659170,"byte_end":8659188,"line_start":164,"line_end":164,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8659193,"byte_end":8659244,"line_start":165,"line_end":165,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8659249,"byte_end":8659277,"line_start":166,"line_end":166,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8659282,"byte_end":8659347,"line_start":167,"line_end":167,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8659352,"byte_end":8659405,"line_start":168,"line_end":168,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8659410,"byte_end":8659413,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8659418,"byte_end":8659447,"line_start":170,"line_end":170,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8659452,"byte_end":8659481,"line_start":171,"line_end":171,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8659486,"byte_end":8659489,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8659494,"byte_end":8659521,"line_start":173,"line_end":173,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8659526,"byte_end":8659573,"line_start":174,"line_end":174,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8659578,"byte_end":8659581,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8659586,"byte_end":8659610,"line_start":176,"line_end":176,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8659615,"byte_end":8659674,"line_start":177,"line_end":177,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8659679,"byte_end":8659718,"line_start":178,"line_end":178,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8659723,"byte_end":8659726,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8659731,"byte_end":8659745,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8659750,"byte_end":8659755,"line_start":181,"line_end":181,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8659760,"byte_end":8659767,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8659772,"byte_end":8659775,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8659780,"byte_end":8659845,"line_start":184,"line_end":184,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8659850,"byte_end":8659853,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8659858,"byte_end":8659904,"line_start":186,"line_end":186,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8659909,"byte_end":8659960,"line_start":187,"line_end":187,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2791},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8660657,"byte_end":8660664,"line_start":210,"line_end":210,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedWriteHalf>::reunite","value":"pub fn reunite(Self, OwnedReadHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8660394,"byte_end":8660463,"line_start":205,"line_end":205,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8660468,"byte_end":8660532,"line_start":206,"line_end":206,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8660537,"byte_end":8660589,"line_start":207,"line_end":207,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8660594,"byte_end":8660597,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8660602,"byte_end":8660645,"line_start":209,"line_end":209,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2792},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8660969,"byte_end":8660975,"line_start":217,"line_end":217,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedWriteHalf>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Destroy the write half, but don't close the write half of the stream\n until the read half is dropped. If the read half has already been\n dropped, this closes the stream.\n","sig":null,"attributes":[{"value":"/ Destroy the write half, but don't close the write half of the stream","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8660770,"byte_end":8660842,"line_start":214,"line_end":214,"column_start":5,"column_end":77}},{"value":"/ until the read half is dropped. If the read half has already been","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8660847,"byte_end":8660916,"line_start":215,"line_end":215,"column_start":5,"column_end":74}},{"value":"/ dropped, this closes the stream.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8660921,"byte_end":8660957,"line_start":216,"line_end":216,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3077},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8665047,"byte_end":8665056,"line_start":72,"line_end":72,"column_start":16,"column_end":25},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":3078}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":21444,"byte_end":21467,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2845},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8666577,"byte_end":8666584,"line_start":116,"line_end":116,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"pub async fn connect<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a TCP connection to a remote host.","sig":null,"attributes":[{"value":"/ Opens a TCP connection to a remote host.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8665135,"byte_end":8665179,"line_start":78,"line_end":78,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8665184,"byte_end":8665187,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ `addr` is an address of the remote host. Anything which implements the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8665192,"byte_end":8665266,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/ [`ToSocketAddrs`] trait can be supplied as the address.  If `addr`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8665271,"byte_end":8665341,"line_start":81,"line_end":81,"column_start":5,"column_end":75}},{"value":"/ yields multiple addresses, connect will be attempted with each of the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8665346,"byte_end":8665419,"line_start":82,"line_end":82,"column_start":5,"column_end":78}},{"value":"/ addresses until a connection is successful. If none of the addresses","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8665424,"byte_end":8665496,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ result in a successful connection, the error returned from the last","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8665501,"byte_end":8665572,"line_start":84,"line_end":84,"column_start":5,"column_end":76}},{"value":"/ connection attempt (the last address) is returned.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8665577,"byte_end":8665631,"line_start":85,"line_end":85,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8665636,"byte_end":8665639,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ To configure the socket before connecting, you can use the [`TcpSocket`]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8665644,"byte_end":8665720,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ type.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8665725,"byte_end":8665734,"line_start":88,"line_end":88,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8665739,"byte_end":8665742,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8665747,"byte_end":8665801,"line_start":90,"line_end":90,"column_start":5,"column_end":59}},{"value":"/ [`TcpSocket`]: struct@crate::net::TcpSocket","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8665806,"byte_end":8665853,"line_start":91,"line_end":91,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8665858,"byte_end":8665861,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8665866,"byte_end":8665880,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8665885,"byte_end":8665888,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8665893,"byte_end":8665906,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8665911,"byte_end":8665941,"line_start":96,"line_end":96,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8665946,"byte_end":8665979,"line_start":97,"line_end":97,"column_start":5,"column_end":38}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8665984,"byte_end":8666010,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8666015,"byte_end":8666018,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8666023,"byte_end":8666041,"line_start":100,"line_end":100,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8666046,"byte_end":8666097,"line_start":101,"line_end":101,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8666102,"byte_end":8666130,"line_start":102,"line_end":102,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8666135,"byte_end":8666204,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8666209,"byte_end":8666212,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8666217,"byte_end":8666244,"line_start":105,"line_end":105,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8666249,"byte_end":8666298,"line_start":106,"line_end":106,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8666303,"byte_end":8666306,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8666311,"byte_end":8666325,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8666330,"byte_end":8666335,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8666340,"byte_end":8666347,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8666352,"byte_end":8666355,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8666360,"byte_end":8666431,"line_start":112,"line_end":112,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8666436,"byte_end":8666439,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8666444,"byte_end":8666501,"line_start":114,"line_end":114,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8666506,"byte_end":8666559,"line_start":115,"line_end":115,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2858},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8669308,"byte_end":8669316,"line_start":194,"line_end":194,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"pub fn from_std(std::net::TcpStream) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `TcpStream` from a `std::net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates new `TcpStream` from a `std::net::TcpStream`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8668191,"byte_end":8668248,"line_start":165,"line_end":165,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8668253,"byte_end":8668256,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP stream from the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8668261,"byte_end":8668331,"line_start":167,"line_end":167,"column_start":5,"column_end":75}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes nothing","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8668336,"byte_end":8668412,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ about the underlying stream; it is left up to the user to set it in","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8668417,"byte_end":8668488,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8668493,"byte_end":8668515,"line_start":170,"line_end":170,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8668520,"byte_end":8668523,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8668528,"byte_end":8668542,"line_start":172,"line_end":172,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8668547,"byte_end":8668550,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8668555,"byte_end":8668573,"line_start":174,"line_end":174,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8668578,"byte_end":8668604,"line_start":175,"line_end":175,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8668609,"byte_end":8668639,"line_start":176,"line_end":176,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8668644,"byte_end":8668647,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8668652,"byte_end":8668670,"line_start":178,"line_end":178,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8668675,"byte_end":8668726,"line_start":179,"line_end":179,"column_start":5,"column_end":56}},{"value":"/     let std_stream = std::net::TcpStream::connect(\"127.0.0.1:34254\")?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8668731,"byte_end":8668805,"line_start":180,"line_end":180,"column_start":5,"column_end":79}},{"value":"/     std_stream.set_nonblocking(true)?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8668810,"byte_end":8668852,"line_start":181,"line_end":181,"column_start":5,"column_end":47}},{"value":"/     let stream = TcpStream::from_std(std_stream)?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8668857,"byte_end":8668911,"line_start":182,"line_end":182,"column_start":5,"column_end":59}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8668916,"byte_end":8668930,"line_start":183,"line_end":183,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8668935,"byte_end":8668940,"line_start":184,"line_end":184,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8668945,"byte_end":8668952,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8668957,"byte_end":8668960,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8668965,"byte_end":8668977,"line_start":187,"line_end":187,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8668982,"byte_end":8668985,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8668990,"byte_end":8669050,"line_start":189,"line_end":189,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8669055,"byte_end":8669058,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8669063,"byte_end":8669133,"line_start":191,"line_end":191,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8669138,"byte_end":8669211,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8669216,"byte_end":8669296,"line_start":193,"line_end":193,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2859},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8670958,"byte_end":8670966,"line_start":234,"line_end":234,"column_start":12,"column_end":20},"name":"into_std","qualname":"<TcpStream>::into_std","value":"pub fn into_std(Self) -> io::Result<std::net::TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Turn a [`tokio::net::TcpStream`] into a [`std::net::TcpStream`].","sig":null,"attributes":[{"value":"/ Turn a [`tokio::net::TcpStream`] into a [`std::net::TcpStream`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8669509,"byte_end":8669577,"line_start":200,"line_end":200,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8669582,"byte_end":8669585,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The returned [`std::net::TcpStream`] will have `nonblocking mode` set as `true`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8669590,"byte_end":8669674,"line_start":202,"line_end":202,"column_start":5,"column_end":89}},{"value":"/ Use [`set_nonblocking`] to change the blocking mode if needed.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8669679,"byte_end":8669745,"line_start":203,"line_end":203,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8669750,"byte_end":8669753,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8669758,"byte_end":8669772,"line_start":205,"line_end":205,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8669777,"byte_end":8669780,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8669785,"byte_end":8669792,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8669797,"byte_end":8669823,"line_start":208,"line_end":208,"column_start":5,"column_end":31}},{"value":"/ use std::io::Read;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8669828,"byte_end":8669850,"line_start":209,"line_end":209,"column_start":5,"column_end":27}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8669855,"byte_end":8669887,"line_start":210,"line_end":210,"column_start":5,"column_end":37}},{"value":"/ # use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8669892,"byte_end":8669924,"line_start":211,"line_end":211,"column_start":5,"column_end":37}},{"value":"/ # use tokio::io::AsyncWriteExt;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8669929,"byte_end":8669964,"line_start":212,"line_end":212,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8669969,"byte_end":8669972,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8669977,"byte_end":8669995,"line_start":214,"line_end":214,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8670000,"byte_end":8670051,"line_start":215,"line_end":215,"column_start":5,"column_end":56}},{"value":"/     let mut data = [0u8; 12];","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8670056,"byte_end":8670089,"line_start":216,"line_end":216,"column_start":5,"column_end":38}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8670094,"byte_end":8670161,"line_start":217,"line_end":217,"column_start":5,"column_end":72}},{"value":"/ #   let handle = tokio::spawn(async {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8670166,"byte_end":8670207,"line_start":218,"line_end":218,"column_start":5,"column_end":46}},{"value":"/ #       let mut stream: TcpStream = TcpStream::connect(\"127.0.0.1:34254\").await.unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8670212,"byte_end":8670305,"line_start":219,"line_end":219,"column_start":5,"column_end":98}},{"value":"/ #       stream.write(b\"Hello world!\").await.unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8670310,"byte_end":8670367,"line_start":220,"line_end":220,"column_start":5,"column_end":62}},{"value":"/ #   });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8670372,"byte_end":8670383,"line_start":221,"line_end":221,"column_start":5,"column_end":16}},{"value":"/     let (tokio_tcp_stream, _) = listener.accept().await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8670388,"byte_end":8670449,"line_start":222,"line_end":222,"column_start":5,"column_end":66}},{"value":"/     let mut std_tcp_stream = tokio_tcp_stream.into_std()?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8670454,"byte_end":8670516,"line_start":223,"line_end":223,"column_start":5,"column_end":67}},{"value":"/ #   handle.await.expect(\"The task being joined has panicked\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8670521,"byte_end":8670587,"line_start":224,"line_end":224,"column_start":5,"column_end":71}},{"value":"/     std_tcp_stream.set_nonblocking(false)?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8670592,"byte_end":8670639,"line_start":225,"line_end":225,"column_start":5,"column_end":52}},{"value":"/     std_tcp_stream.read_exact(&mut data)?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8670644,"byte_end":8670690,"line_start":226,"line_end":226,"column_start":5,"column_end":51}},{"value":"/ #   assert_eq!(b\"Hello world!\", &data);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8670695,"byte_end":8670738,"line_start":227,"line_end":227,"column_start":5,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8670743,"byte_end":8670757,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8670762,"byte_end":8670767,"line_start":229,"line_end":229,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8670772,"byte_end":8670779,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ [`tokio::net::TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8670784,"byte_end":8670824,"line_start":231,"line_end":231,"column_start":5,"column_end":45}},{"value":"/ [`std::net::TcpStream`]: std::net::TcpStream","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8670829,"byte_end":8670877,"line_start":232,"line_end":232,"column_start":5,"column_end":53}},{"value":"/ [`set_nonblocking`]: fn@std::net::TcpStream::set_nonblocking","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8670882,"byte_end":8670946,"line_start":233,"line_end":233,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2862},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8671876,"byte_end":8671886,"line_start":266,"line_end":266,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is bound to.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8671477,"byte_end":8671536,"line_start":252,"line_end":252,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8671541,"byte_end":8671544,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8671549,"byte_end":8671563,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8671568,"byte_end":8671571,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8671576,"byte_end":8671589,"line_start":256,"line_end":256,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8671594,"byte_end":8671624,"line_start":257,"line_end":257,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8671629,"byte_end":8671632,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8671637,"byte_end":8671701,"line_start":259,"line_end":259,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8671706,"byte_end":8671767,"line_start":260,"line_end":260,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8671772,"byte_end":8671775,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.local_addr()?);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8671780,"byte_end":8671823,"line_start":262,"line_end":262,"column_start":5,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8671828,"byte_end":8671840,"line_start":263,"line_end":263,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8671845,"byte_end":8671852,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8671857,"byte_end":8671864,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2863},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8672365,"byte_end":8672374,"line_start":284,"line_end":284,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8671962,"byte_end":8672026,"line_start":270,"line_end":270,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8672031,"byte_end":8672034,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8672039,"byte_end":8672053,"line_start":272,"line_end":272,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8672058,"byte_end":8672061,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8672066,"byte_end":8672079,"line_start":274,"line_end":274,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8672084,"byte_end":8672114,"line_start":275,"line_end":275,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8672119,"byte_end":8672122,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8672127,"byte_end":8672191,"line_start":277,"line_end":277,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8672196,"byte_end":8672257,"line_start":278,"line_end":278,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8672262,"byte_end":8672265,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.peer_addr()?);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8672270,"byte_end":8672312,"line_start":280,"line_end":280,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8672317,"byte_end":8672329,"line_start":281,"line_end":281,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8672334,"byte_end":8672341,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8672346,"byte_end":8672353,"line_start":283,"line_end":283,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2864},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8673865,"byte_end":8673874,"line_start":330,"line_end":330,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<TcpStream>::poll_peek","value":"pub fn poll_peek(&Self, &mut Context, &mut ReadBuf) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempts to receive data on the socket, without removing that data from","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8672449,"byte_end":8672524,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8672529,"byte_end":8672602,"line_start":289,"line_end":289,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8672607,"byte_end":8672621,"line_start":290,"line_end":290,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8672626,"byte_end":8672629,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_peek`, `poll_read` or","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8672634,"byte_end":8672696,"line_start":292,"line_end":292,"column_start":5,"column_end":67}},{"value":"/ `poll_read_ready`, only the `Waker` from the `Context` passed to the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8672701,"byte_end":8672773,"line_start":293,"line_end":293,"column_start":5,"column_end":77}},{"value":"/ most recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8672778,"byte_end":8672842,"line_start":294,"line_end":294,"column_start":5,"column_end":69}},{"value":"/ `poll_write` retains a second, independent waker.)","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8672847,"byte_end":8672901,"line_start":295,"line_end":295,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8672906,"byte_end":8672909,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8672914,"byte_end":8672932,"line_start":297,"line_end":297,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8672937,"byte_end":8672940,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8672945,"byte_end":8672970,"line_start":299,"line_end":299,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8672975,"byte_end":8672978,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if data is not yet available.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8672983,"byte_end":8673034,"line_start":301,"line_end":301,"column_start":5,"column_end":56}},{"value":"/ * `Poll::Ready(Ok(n))` if data is available. `n` is the number of bytes peeked.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8673039,"byte_end":8673122,"line_start":302,"line_end":302,"column_start":5,"column_end":88}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8673127,"byte_end":8673182,"line_start":303,"line_end":303,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8673187,"byte_end":8673190,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8673195,"byte_end":8673207,"line_start":305,"line_end":305,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8673212,"byte_end":8673215,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8673220,"byte_end":8673295,"line_start":307,"line_end":307,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8673300,"byte_end":8673303,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8673308,"byte_end":8673322,"line_start":309,"line_end":309,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8673327,"byte_end":8673330,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8673335,"byte_end":8673348,"line_start":311,"line_end":311,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, ReadBuf};","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8673353,"byte_end":8673388,"line_start":312,"line_end":312,"column_start":5,"column_end":40}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8673393,"byte_end":8673423,"line_start":313,"line_end":313,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8673428,"byte_end":8673431,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8673436,"byte_end":8673469,"line_start":315,"line_end":315,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8673474,"byte_end":8673477,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8673482,"byte_end":8673500,"line_start":317,"line_end":317,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8673505,"byte_end":8673544,"line_start":318,"line_end":318,"column_start":5,"column_end":44}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8673549,"byte_end":8673614,"line_start":319,"line_end":319,"column_start":5,"column_end":70}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8673619,"byte_end":8673649,"line_start":320,"line_end":320,"column_start":5,"column_end":35}},{"value":"/     let mut buf = ReadBuf::new(&mut buf);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8673654,"byte_end":8673699,"line_start":321,"line_end":321,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8673704,"byte_end":8673707,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8673712,"byte_end":8673734,"line_start":323,"line_end":323,"column_start":5,"column_end":27}},{"value":"/         stream.poll_peek(cx, &mut buf)","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8673739,"byte_end":8673781,"line_start":324,"line_end":324,"column_start":5,"column_end":47}},{"value":"/     }).await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8673786,"byte_end":8673804,"line_start":325,"line_end":325,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8673809,"byte_end":8673812,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8673817,"byte_end":8673831,"line_start":327,"line_end":327,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8673836,"byte_end":8673841,"line_start":328,"line_end":328,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8673846,"byte_end":8673853,"line_start":329,"line_end":329,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2865},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8676946,"byte_end":8676951,"line_start":416,"line_end":416,"column_start":18,"column_end":23},"name":"ready","qualname":"<TcpStream>::ready","value":"pub async fn ready<'_>(&'_ Self, Interest) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for any of the requested ready states.","sig":null,"attributes":[{"value":"/ Wait for any of the requested ready states.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8674681,"byte_end":8674728,"line_start":356,"line_end":356,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8674733,"byte_end":8674736,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `try_read()` or `try_write()`. It","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8674741,"byte_end":8674815,"line_start":358,"line_end":358,"column_start":5,"column_end":79}},{"value":"/ can be used to concurrently read / write to the same socket on a single","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8674820,"byte_end":8674895,"line_start":359,"line_end":359,"column_start":5,"column_end":80}},{"value":"/ task without splitting the socket.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8674900,"byte_end":8674938,"line_start":360,"line_end":360,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8674943,"byte_end":8674946,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8674951,"byte_end":8674965,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8674970,"byte_end":8674973,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ Concurrently read and write to the stream on the same task without","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8674978,"byte_end":8675048,"line_start":364,"line_end":364,"column_start":5,"column_end":75}},{"value":"/ splitting.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8675053,"byte_end":8675067,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8675072,"byte_end":8675075,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8675080,"byte_end":8675093,"line_start":367,"line_end":367,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8675098,"byte_end":8675126,"line_start":368,"line_end":368,"column_start":5,"column_end":33}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8675131,"byte_end":8675161,"line_start":369,"line_end":369,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8675166,"byte_end":8675192,"line_start":370,"line_end":370,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8675197,"byte_end":8675213,"line_start":371,"line_end":371,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8675218,"byte_end":8675221,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8675226,"byte_end":8675244,"line_start":373,"line_end":373,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8675249,"byte_end":8675300,"line_start":374,"line_end":374,"column_start":5,"column_end":56}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8675305,"byte_end":8675370,"line_start":375,"line_end":375,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8675375,"byte_end":8675378,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8675383,"byte_end":8675397,"line_start":377,"line_end":377,"column_start":5,"column_end":19}},{"value":"/         let ready = stream.ready(Interest::READABLE | Interest::WRITABLE).await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8675402,"byte_end":8675487,"line_start":378,"line_end":378,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8675492,"byte_end":8675495,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/         if ready.is_readable() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8675500,"byte_end":8675536,"line_start":380,"line_end":380,"column_start":5,"column_end":41}},{"value":"/             let mut data = vec![0; 1024];","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8675541,"byte_end":8675586,"line_start":381,"line_end":381,"column_start":5,"column_end":50}},{"value":"/             // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8675591,"byte_end":8675665,"line_start":382,"line_end":382,"column_start":5,"column_end":79}},{"value":"/             // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8675670,"byte_end":8675732,"line_start":383,"line_end":383,"column_start":5,"column_end":67}},{"value":"/             match stream.try_read(&mut data) {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8675737,"byte_end":8675787,"line_start":384,"line_end":384,"column_start":5,"column_end":55}},{"value":"/                 Ok(n) => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8675792,"byte_end":8675822,"line_start":385,"line_end":385,"column_start":5,"column_end":35}},{"value":"/                     println!(\"read {} bytes\", n);        ","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8675827,"byte_end":8675888,"line_start":386,"line_end":386,"column_start":5,"column_end":66}},{"value":"/                 }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8675893,"byte_end":8675914,"line_start":387,"line_end":387,"column_start":5,"column_end":26}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8675919,"byte_end":8675995,"line_start":388,"line_end":388,"column_start":5,"column_end":81}},{"value":"/                     continue;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8676000,"byte_end":8676033,"line_start":389,"line_end":389,"column_start":5,"column_end":38}},{"value":"/                 }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8676038,"byte_end":8676059,"line_start":390,"line_end":390,"column_start":5,"column_end":26}},{"value":"/                 Err(e) => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8676064,"byte_end":8676095,"line_start":391,"line_end":391,"column_start":5,"column_end":36}},{"value":"/                     return Err(e.into());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8676100,"byte_end":8676145,"line_start":392,"line_end":392,"column_start":5,"column_end":50}},{"value":"/                 }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8676150,"byte_end":8676171,"line_start":393,"line_end":393,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8676176,"byte_end":8676193,"line_start":394,"line_end":394,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8676198,"byte_end":8676201,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/         }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8676206,"byte_end":8676219,"line_start":396,"line_end":396,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8676224,"byte_end":8676227,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/         if ready.is_writable() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8676232,"byte_end":8676268,"line_start":398,"line_end":398,"column_start":5,"column_end":41}},{"value":"/             // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8676273,"byte_end":8676348,"line_start":399,"line_end":399,"column_start":5,"column_end":80}},{"value":"/             // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8676353,"byte_end":8676415,"line_start":400,"line_end":400,"column_start":5,"column_end":67}},{"value":"/             match stream.try_write(b\"hello world\") {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8676420,"byte_end":8676476,"line_start":401,"line_end":401,"column_start":5,"column_end":61}},{"value":"/                 Ok(n) => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8676481,"byte_end":8676511,"line_start":402,"line_end":402,"column_start":5,"column_end":35}},{"value":"/                     println!(\"write {} bytes\", n);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8676516,"byte_end":8676570,"line_start":403,"line_end":403,"column_start":5,"column_end":59}},{"value":"/                 }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8676575,"byte_end":8676596,"line_start":404,"line_end":404,"column_start":5,"column_end":26}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8676601,"byte_end":8676677,"line_start":405,"line_end":405,"column_start":5,"column_end":81}},{"value":"/                     continue","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8676682,"byte_end":8676714,"line_start":406,"line_end":406,"column_start":5,"column_end":37}},{"value":"/                 }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8676719,"byte_end":8676740,"line_start":407,"line_end":407,"column_start":5,"column_end":26}},{"value":"/                 Err(e) => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8676745,"byte_end":8676776,"line_start":408,"line_end":408,"column_start":5,"column_end":36}},{"value":"/                     return Err(e.into());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8676781,"byte_end":8676826,"line_start":409,"line_end":409,"column_start":5,"column_end":50}},{"value":"/                 }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8676831,"byte_end":8676852,"line_start":410,"line_end":410,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8676857,"byte_end":8676874,"line_start":411,"line_end":411,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8676879,"byte_end":8676892,"line_start":412,"line_end":412,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8676897,"byte_end":8676906,"line_start":413,"line_end":413,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8676911,"byte_end":8676916,"line_start":414,"line_end":414,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8676921,"byte_end":8676928,"line_start":415,"line_end":415,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2868},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8678471,"byte_end":8678479,"line_start":464,"line_end":464,"column_start":18,"column_end":26},"name":"readable","qualname":"<TcpStream>::readable","value":"pub async fn readable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become readable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become readable.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8677108,"byte_end":8677151,"line_start":421,"line_end":421,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8677156,"byte_end":8677159,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::READABLE)` and is usually","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8677164,"byte_end":8677241,"line_start":423,"line_end":423,"column_start":5,"column_end":82}},{"value":"/ paired with `try_read()`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8677246,"byte_end":8677275,"line_start":424,"line_end":424,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8677280,"byte_end":8677283,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8677288,"byte_end":8677302,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8677307,"byte_end":8677310,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8677315,"byte_end":8677328,"line_start":428,"line_end":428,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8677333,"byte_end":8677363,"line_start":429,"line_end":429,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8677368,"byte_end":8677394,"line_start":430,"line_end":430,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8677399,"byte_end":8677415,"line_start":431,"line_end":431,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8677420,"byte_end":8677423,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8677428,"byte_end":8677446,"line_start":433,"line_end":433,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8677451,"byte_end":8677502,"line_start":434,"line_end":434,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8677507,"byte_end":8677535,"line_start":435,"line_end":435,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8677540,"byte_end":8677605,"line_start":436,"line_end":436,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8677610,"byte_end":8677613,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/     let mut msg = vec![0; 1024];","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8677618,"byte_end":8677654,"line_start":438,"line_end":438,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8677659,"byte_end":8677662,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8677667,"byte_end":8677681,"line_start":440,"line_end":440,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8677686,"byte_end":8677735,"line_start":441,"line_end":441,"column_start":5,"column_end":54}},{"value":"/         stream.readable().await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8677740,"byte_end":8677777,"line_start":442,"line_end":442,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8677782,"byte_end":8677785,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/         // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8677790,"byte_end":8677860,"line_start":444,"line_end":444,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8677865,"byte_end":8677923,"line_start":445,"line_end":445,"column_start":5,"column_end":63}},{"value":"/         match stream.try_read(&mut msg) {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8677928,"byte_end":8677973,"line_start":446,"line_end":446,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8677978,"byte_end":8678004,"line_start":447,"line_end":447,"column_start":5,"column_end":31}},{"value":"/                 msg.truncate(n);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8678009,"byte_end":8678045,"line_start":448,"line_end":448,"column_start":5,"column_end":41}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8678050,"byte_end":8678076,"line_start":449,"line_end":449,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8678081,"byte_end":8678098,"line_start":450,"line_end":450,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8678103,"byte_end":8678175,"line_start":451,"line_end":451,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8678180,"byte_end":8678209,"line_start":452,"line_end":452,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8678214,"byte_end":8678231,"line_start":453,"line_end":453,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8678236,"byte_end":8678263,"line_start":454,"line_end":454,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8678268,"byte_end":8678309,"line_start":455,"line_end":455,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8678314,"byte_end":8678331,"line_start":456,"line_end":456,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8678336,"byte_end":8678349,"line_start":457,"line_end":457,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8678354,"byte_end":8678363,"line_start":458,"line_end":458,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8678368,"byte_end":8678371,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/     println!(\"GOT = {:?}\", msg);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8678376,"byte_end":8678412,"line_start":460,"line_end":460,"column_start":5,"column_end":41}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8678417,"byte_end":8678431,"line_start":461,"line_end":461,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8678436,"byte_end":8678441,"line_start":462,"line_end":462,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8678446,"byte_end":8678453,"line_start":463,"line_end":463,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2871},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8679851,"byte_end":8679866,"line_start":498,"line_end":498,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<TcpStream>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for read readiness.","sig":null,"attributes":[{"value":"/ Polls for read readiness.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8678580,"byte_end":8678609,"line_start":469,"line_end":469,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8678614,"byte_end":8678617,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ If the tcp stream is not currently ready for reading, this method will","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8678622,"byte_end":8678696,"line_start":471,"line_end":471,"column_start":5,"column_end":79}},{"value":"/ store a clone of the `Waker` from the provided `Context`. When the tcp","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8678701,"byte_end":8678775,"line_start":472,"line_end":472,"column_start":5,"column_end":79}},{"value":"/ stream becomes ready for reading, `Waker::wake` will be called on the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8678780,"byte_end":8678853,"line_start":473,"line_end":473,"column_start":5,"column_end":78}},{"value":"/ waker.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8678858,"byte_end":8678868,"line_start":474,"line_end":474,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8678873,"byte_end":8678876,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_read_ready`, `poll_read` or","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8678881,"byte_end":8678949,"line_start":476,"line_end":476,"column_start":5,"column_end":73}},{"value":"/ `poll_peek`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8678954,"byte_end":8679025,"line_start":477,"line_end":477,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8679030,"byte_end":8679089,"line_start":478,"line_end":478,"column_start":5,"column_end":64}},{"value":"/ `poll_write_ready` retains a second, independent waker.)","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8679094,"byte_end":8679154,"line_start":479,"line_end":479,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8679159,"byte_end":8679162,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ This function is intended for cases where creating and pinning a future","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8679167,"byte_end":8679242,"line_start":481,"line_end":481,"column_start":5,"column_end":80}},{"value":"/ via [`readable`] is not feasible. Where possible, using [`readable`] is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8679247,"byte_end":8679322,"line_start":482,"line_end":482,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8679327,"byte_end":8679395,"line_start":483,"line_end":483,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8679400,"byte_end":8679403,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8679408,"byte_end":8679426,"line_start":485,"line_end":485,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8679431,"byte_end":8679434,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8679439,"byte_end":8679464,"line_start":487,"line_end":487,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8679469,"byte_end":8679472,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the tcp stream is not ready for reading.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8679477,"byte_end":8679542,"line_start":489,"line_end":489,"column_start":5,"column_end":70}},{"value":"/ * `Poll::Ready(Ok(()))` if the tcp stream is ready for reading.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8679547,"byte_end":8679614,"line_start":490,"line_end":490,"column_start":5,"column_end":72}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8679619,"byte_end":8679674,"line_start":491,"line_end":491,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8679679,"byte_end":8679682,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8679687,"byte_end":8679699,"line_start":493,"line_end":493,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8679704,"byte_end":8679707,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8679712,"byte_end":8679787,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8679792,"byte_end":8679795,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ [`readable`]: method@Self::readable","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8679800,"byte_end":8679839,"line_start":497,"line_end":497,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2873},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8682202,"byte_end":8682210,"line_start":561,"line_end":561,"column_start":12,"column_end":20},"name":"try_read","qualname":"<TcpStream>::try_read","value":"pub fn try_read(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from the stream into the provided buffer, returning how\n many bytes were read.","sig":null,"attributes":[{"value":"/ Try to read data from the stream into the provided buffer, returning how","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8679999,"byte_end":8680075,"line_start":502,"line_end":502,"column_start":5,"column_end":81}},{"value":"/ many bytes were read.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8680080,"byte_end":8680105,"line_start":503,"line_end":503,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8680110,"byte_end":8680113,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ Receives any pending data from the socket but does not wait for new data","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8680118,"byte_end":8680194,"line_start":505,"line_end":505,"column_start":5,"column_end":81}},{"value":"/ to arrive. On success, returns the number of bytes read. Because","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8680199,"byte_end":8680267,"line_start":506,"line_end":506,"column_start":5,"column_end":73}},{"value":"/ `try_read()` is non-blocking, the buffer does not have to be stored by","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8680272,"byte_end":8680346,"line_start":507,"line_end":507,"column_start":5,"column_end":79}},{"value":"/ the async task and can exist entirely on the stack.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8680351,"byte_end":8680406,"line_start":508,"line_end":508,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8680411,"byte_end":8680414,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ Usually, [`readable()`] or [`ready()`] is used with this function.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8680419,"byte_end":8680489,"line_start":510,"line_end":510,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8680494,"byte_end":8680497,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ [`readable()`]: TcpStream::readable()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8680502,"byte_end":8680543,"line_start":512,"line_end":512,"column_start":5,"column_end":46}},{"value":"/ [`ready()`]: TcpStream::ready()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8680548,"byte_end":8680583,"line_start":513,"line_end":513,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8680588,"byte_end":8680591,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8680596,"byte_end":8680608,"line_start":515,"line_end":515,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8680613,"byte_end":8680616,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ If data is successfully read, `Ok(n)` is returned, where `n` is the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8680621,"byte_end":8680692,"line_start":517,"line_end":517,"column_start":5,"column_end":76}},{"value":"/ number of bytes read. `Ok(0)` indicates the stream's read half is closed","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8680697,"byte_end":8680773,"line_start":518,"line_end":518,"column_start":5,"column_end":81}},{"value":"/ and will no longer yield data. If the stream is not ready to read data","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8680778,"byte_end":8680852,"line_start":519,"line_end":519,"column_start":5,"column_end":79}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8680857,"byte_end":8680906,"line_start":520,"line_end":520,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8680911,"byte_end":8680914,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8680919,"byte_end":8680933,"line_start":522,"line_end":522,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8680938,"byte_end":8680941,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8680946,"byte_end":8680959,"line_start":524,"line_end":524,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8680964,"byte_end":8680994,"line_start":525,"line_end":525,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8680999,"byte_end":8681025,"line_start":526,"line_end":526,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8681030,"byte_end":8681046,"line_start":527,"line_end":527,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8681051,"byte_end":8681054,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8681059,"byte_end":8681077,"line_start":529,"line_end":529,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8681082,"byte_end":8681133,"line_start":530,"line_end":530,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8681138,"byte_end":8681166,"line_start":531,"line_end":531,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8681171,"byte_end":8681236,"line_start":532,"line_end":532,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8681241,"byte_end":8681244,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8681249,"byte_end":8681263,"line_start":534,"line_end":534,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8681268,"byte_end":8681317,"line_start":535,"line_end":535,"column_start":5,"column_end":54}},{"value":"/         stream.readable().await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8681322,"byte_end":8681359,"line_start":536,"line_end":536,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8681364,"byte_end":8681367,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/         // Creating the buffer **after** the `await` prevents it from","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8681372,"byte_end":8681445,"line_start":538,"line_end":538,"column_start":5,"column_end":78}},{"value":"/         // being stored in the async task.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8681450,"byte_end":8681496,"line_start":539,"line_end":539,"column_start":5,"column_end":51}},{"value":"/         let mut buf = [0; 4096];","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8681501,"byte_end":8681537,"line_start":540,"line_end":540,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8681542,"byte_end":8681545,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/         // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8681550,"byte_end":8681620,"line_start":542,"line_end":542,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8681625,"byte_end":8681683,"line_start":543,"line_end":543,"column_start":5,"column_end":63}},{"value":"/         match stream.try_read(&mut buf) {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8681688,"byte_end":8681733,"line_start":544,"line_end":544,"column_start":5,"column_end":50}},{"value":"/             Ok(0) => break,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8681738,"byte_end":8681769,"line_start":545,"line_end":545,"column_start":5,"column_end":36}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8681774,"byte_end":8681800,"line_start":546,"line_end":546,"column_start":5,"column_end":31}},{"value":"/                 println!(\"read {} bytes\", n);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8681805,"byte_end":8681854,"line_start":547,"line_end":547,"column_start":5,"column_end":54}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8681859,"byte_end":8681876,"line_start":548,"line_end":548,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8681881,"byte_end":8681953,"line_start":549,"line_end":549,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8681958,"byte_end":8681987,"line_start":550,"line_end":550,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8681992,"byte_end":8682009,"line_start":551,"line_end":551,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8682014,"byte_end":8682041,"line_start":552,"line_end":552,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8682046,"byte_end":8682087,"line_start":553,"line_end":553,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8682092,"byte_end":8682109,"line_start":554,"line_end":554,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8682114,"byte_end":8682127,"line_start":555,"line_end":555,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8682132,"byte_end":8682141,"line_start":556,"line_end":556,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8682146,"byte_end":8682149,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8682154,"byte_end":8682168,"line_start":558,"line_end":558,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8682173,"byte_end":8682178,"line_start":559,"line_end":559,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8682183,"byte_end":8682190,"line_start":560,"line_end":560,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3079},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8684794,"byte_end":8684806,"line_start":627,"line_end":627,"column_start":16,"column_end":28},"name":"try_read_buf","qualname":"<TcpStream>::try_read_buf","value":"pub fn try_read_buf<B: BufMut>(&Self, &mut B) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from the stream into the provided buffer, advancing the\n buffer's internal cursor, returning how many bytes were read.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2876},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8686685,"byte_end":8686693,"line_start":687,"line_end":687,"column_start":18,"column_end":26},"name":"writable","qualname":"<TcpStream>::writable","value":"pub async fn writable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become writable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become writable.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8685444,"byte_end":8685487,"line_start":648,"line_end":648,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8685492,"byte_end":8685495,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::WRITABLE)` and is usually","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8685500,"byte_end":8685577,"line_start":650,"line_end":650,"column_start":5,"column_end":82}},{"value":"/ paired with `try_write()`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8685582,"byte_end":8685612,"line_start":651,"line_end":651,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8685617,"byte_end":8685620,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8685625,"byte_end":8685639,"line_start":653,"line_end":653,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8685644,"byte_end":8685647,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8685652,"byte_end":8685665,"line_start":655,"line_end":655,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8685670,"byte_end":8685700,"line_start":656,"line_end":656,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8685705,"byte_end":8685731,"line_start":657,"line_end":657,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8685736,"byte_end":8685752,"line_start":658,"line_end":658,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8685757,"byte_end":8685760,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8685765,"byte_end":8685783,"line_start":660,"line_end":660,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8685788,"byte_end":8685839,"line_start":661,"line_end":661,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8685844,"byte_end":8685872,"line_start":662,"line_end":662,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8685877,"byte_end":8685942,"line_start":663,"line_end":663,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8685947,"byte_end":8685950,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8685955,"byte_end":8685969,"line_start":665,"line_end":665,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8685974,"byte_end":8686023,"line_start":666,"line_end":666,"column_start":5,"column_end":54}},{"value":"/         stream.writable().await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8686028,"byte_end":8686065,"line_start":667,"line_end":667,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8686070,"byte_end":8686073,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/         // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8686078,"byte_end":8686149,"line_start":669,"line_end":669,"column_start":5,"column_end":76}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8686154,"byte_end":8686212,"line_start":670,"line_end":670,"column_start":5,"column_end":63}},{"value":"/         match stream.try_write(b\"hello world\") {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8686217,"byte_end":8686269,"line_start":671,"line_end":671,"column_start":5,"column_end":57}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8686274,"byte_end":8686300,"line_start":672,"line_end":672,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8686305,"byte_end":8686331,"line_start":673,"line_end":673,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8686336,"byte_end":8686353,"line_start":674,"line_end":674,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8686358,"byte_end":8686430,"line_start":675,"line_end":675,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8686435,"byte_end":8686464,"line_start":676,"line_end":676,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8686469,"byte_end":8686486,"line_start":677,"line_end":677,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8686491,"byte_end":8686518,"line_start":678,"line_end":678,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8686523,"byte_end":8686564,"line_start":679,"line_end":679,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8686569,"byte_end":8686586,"line_start":680,"line_end":680,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8686591,"byte_end":8686604,"line_start":681,"line_end":681,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8686609,"byte_end":8686618,"line_start":682,"line_end":682,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8686623,"byte_end":8686626,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8686631,"byte_end":8686645,"line_start":684,"line_end":684,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8686650,"byte_end":8686655,"line_start":685,"line_end":685,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8686660,"byte_end":8686667,"line_start":686,"line_end":686,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2879},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8688054,"byte_end":8688070,"line_start":721,"line_end":721,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<TcpStream>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for write readiness.","sig":null,"attributes":[{"value":"/ Polls for write readiness.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8686794,"byte_end":8686824,"line_start":692,"line_end":692,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8686829,"byte_end":8686832,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ If the tcp stream is not currently ready for writing, this method will","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8686837,"byte_end":8686911,"line_start":694,"line_end":694,"column_start":5,"column_end":79}},{"value":"/ store a clone of the `Waker` from the provided `Context`. When the tcp","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8686916,"byte_end":8686990,"line_start":695,"line_end":695,"column_start":5,"column_end":79}},{"value":"/ stream becomes ready for writing, `Waker::wake` will be called on the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8686995,"byte_end":8687068,"line_start":696,"line_end":696,"column_start":5,"column_end":78}},{"value":"/ waker.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8687073,"byte_end":8687083,"line_start":697,"line_end":697,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8687088,"byte_end":8687091,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_write_ready` or `poll_write`, only","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8687096,"byte_end":8687171,"line_start":699,"line_end":699,"column_start":5,"column_end":80}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8687176,"byte_end":8687244,"line_start":700,"line_end":700,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup. (However, `poll_read_ready` retains a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8687249,"byte_end":8687321,"line_start":701,"line_end":701,"column_start":5,"column_end":77}},{"value":"/ second, independent waker.)","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8687326,"byte_end":8687357,"line_start":702,"line_end":702,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8687362,"byte_end":8687365,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ This function is intended for cases where creating and pinning a future","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8687370,"byte_end":8687445,"line_start":704,"line_end":704,"column_start":5,"column_end":80}},{"value":"/ via [`writable`] is not feasible. Where possible, using [`writable`] is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8687450,"byte_end":8687525,"line_start":705,"line_end":705,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8687530,"byte_end":8687598,"line_start":706,"line_end":706,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8687603,"byte_end":8687606,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8687611,"byte_end":8687629,"line_start":708,"line_end":708,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8687634,"byte_end":8687637,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8687642,"byte_end":8687667,"line_start":710,"line_end":710,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8687672,"byte_end":8687675,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the tcp stream is not ready for writing.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8687680,"byte_end":8687745,"line_start":712,"line_end":712,"column_start":5,"column_end":70}},{"value":"/ * `Poll::Ready(Ok(()))` if the tcp stream is ready for writing.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8687750,"byte_end":8687817,"line_start":713,"line_end":713,"column_start":5,"column_end":72}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8687822,"byte_end":8687877,"line_start":714,"line_end":714,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8687882,"byte_end":8687885,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8687890,"byte_end":8687902,"line_start":716,"line_end":716,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8687907,"byte_end":8687910,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8687915,"byte_end":8687990,"line_start":718,"line_end":718,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8687995,"byte_end":8687998,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ [`writable`]: method@Self::writable","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8688003,"byte_end":8688042,"line_start":720,"line_end":720,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2881},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8689799,"byte_end":8689808,"line_start":773,"line_end":773,"column_start":12,"column_end":21},"name":"try_write","qualname":"<TcpStream>::try_write","value":"pub fn try_write(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to write a buffer to the stream, returning how many bytes were\n written.","sig":null,"attributes":[{"value":"/ Try to write a buffer to the stream, returning how many bytes were","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8688204,"byte_end":8688274,"line_start":725,"line_end":725,"column_start":5,"column_end":75}},{"value":"/ written.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8688279,"byte_end":8688291,"line_start":726,"line_end":726,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8688296,"byte_end":8688299,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ The function will attempt to write the entire contents of `buf`, but","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8688304,"byte_end":8688376,"line_start":728,"line_end":728,"column_start":5,"column_end":77}},{"value":"/ only part of the buffer may be written.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8688381,"byte_end":8688424,"line_start":729,"line_end":729,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8688429,"byte_end":8688432,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `writable()`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8688437,"byte_end":8688491,"line_start":731,"line_end":731,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8688496,"byte_end":8688499,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8688504,"byte_end":8688516,"line_start":733,"line_end":733,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8688521,"byte_end":8688524,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ If data is successfully written, `Ok(n)` is returned, where `n` is the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8688529,"byte_end":8688603,"line_start":735,"line_end":735,"column_start":5,"column_end":79}},{"value":"/ number of bytes written. If the stream is not ready to write data,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8688608,"byte_end":8688678,"line_start":736,"line_end":736,"column_start":5,"column_end":75}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8688683,"byte_end":8688732,"line_start":737,"line_end":737,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8688737,"byte_end":8688740,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8688745,"byte_end":8688759,"line_start":739,"line_end":739,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8688764,"byte_end":8688767,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8688772,"byte_end":8688785,"line_start":741,"line_end":741,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8688790,"byte_end":8688820,"line_start":742,"line_end":742,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8688825,"byte_end":8688851,"line_start":743,"line_end":743,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8688856,"byte_end":8688872,"line_start":744,"line_end":744,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8688877,"byte_end":8688880,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8688885,"byte_end":8688903,"line_start":746,"line_end":746,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8688908,"byte_end":8688959,"line_start":747,"line_end":747,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8688964,"byte_end":8688992,"line_start":748,"line_end":748,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8688997,"byte_end":8689062,"line_start":749,"line_end":749,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8689067,"byte_end":8689070,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8689075,"byte_end":8689089,"line_start":751,"line_end":751,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8689094,"byte_end":8689143,"line_start":752,"line_end":752,"column_start":5,"column_end":54}},{"value":"/         stream.writable().await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8689148,"byte_end":8689185,"line_start":753,"line_end":753,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8689190,"byte_end":8689193,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/         // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8689198,"byte_end":8689269,"line_start":755,"line_end":755,"column_start":5,"column_end":76}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8689274,"byte_end":8689332,"line_start":756,"line_end":756,"column_start":5,"column_end":63}},{"value":"/         match stream.try_write(b\"hello world\") {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8689337,"byte_end":8689389,"line_start":757,"line_end":757,"column_start":5,"column_end":57}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8689394,"byte_end":8689420,"line_start":758,"line_end":758,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8689425,"byte_end":8689451,"line_start":759,"line_end":759,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8689456,"byte_end":8689473,"line_start":760,"line_end":760,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8689478,"byte_end":8689550,"line_start":761,"line_end":761,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8689555,"byte_end":8689584,"line_start":762,"line_end":762,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8689589,"byte_end":8689606,"line_start":763,"line_end":763,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8689611,"byte_end":8689638,"line_start":764,"line_end":764,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8689643,"byte_end":8689684,"line_start":765,"line_end":765,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8689689,"byte_end":8689706,"line_start":766,"line_end":766,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8689711,"byte_end":8689724,"line_start":767,"line_end":767,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8689729,"byte_end":8689738,"line_start":768,"line_end":768,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8689743,"byte_end":8689746,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8689751,"byte_end":8689765,"line_start":770,"line_end":770,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8689770,"byte_end":8689775,"line_start":771,"line_end":771,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8689780,"byte_end":8689787,"line_start":772,"line_end":772,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2884},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8691259,"byte_end":8691263,"line_start":818,"line_end":818,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"pub async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8690002,"byte_end":8690072,"line_start":781,"line_end":781,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8690077,"byte_end":8690146,"line_start":782,"line_end":782,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8690151,"byte_end":8690190,"line_start":783,"line_end":783,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8690195,"byte_end":8690198,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8690203,"byte_end":8690277,"line_start":785,"line_end":785,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8690282,"byte_end":8690342,"line_start":786,"line_end":786,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8690347,"byte_end":8690350,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8690355,"byte_end":8690369,"line_start":788,"line_end":788,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8690374,"byte_end":8690377,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8690382,"byte_end":8690395,"line_start":790,"line_end":790,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8690400,"byte_end":8690430,"line_start":791,"line_end":791,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8690435,"byte_end":8690467,"line_start":792,"line_end":792,"column_start":5,"column_end":37}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8690472,"byte_end":8690498,"line_start":793,"line_end":793,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8690503,"byte_end":8690506,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8690511,"byte_end":8690529,"line_start":795,"line_end":795,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8690534,"byte_end":8690585,"line_start":796,"line_end":796,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8690590,"byte_end":8690618,"line_start":797,"line_end":797,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8690623,"byte_end":8690692,"line_start":798,"line_end":798,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8690697,"byte_end":8690700,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8690705,"byte_end":8690734,"line_start":800,"line_end":800,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8690739,"byte_end":8690768,"line_start":801,"line_end":801,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8690773,"byte_end":8690776,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8690781,"byte_end":8690808,"line_start":803,"line_end":803,"column_start":5,"column_end":32}},{"value":"/     let n = stream.peek(&mut b1).await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8690813,"byte_end":8690857,"line_start":804,"line_end":804,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8690862,"byte_end":8690865,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8690870,"byte_end":8690894,"line_start":806,"line_end":806,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, stream.read(&mut b2[..n]).await?);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8690899,"byte_end":8690955,"line_start":807,"line_end":807,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8690960,"byte_end":8690999,"line_start":808,"line_end":808,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8691004,"byte_end":8691007,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8691012,"byte_end":8691026,"line_start":810,"line_end":810,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8691031,"byte_end":8691036,"line_start":811,"line_end":811,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8691041,"byte_end":8691048,"line_start":812,"line_end":812,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8691053,"byte_end":8691056,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8691061,"byte_end":8691126,"line_start":814,"line_end":814,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8691131,"byte_end":8691134,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8691139,"byte_end":8691185,"line_start":816,"line_end":816,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8691190,"byte_end":8691241,"line_start":817,"line_end":817,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2889},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8692358,"byte_end":8692365,"line_start":852,"line_end":852,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8691826,"byte_end":8691888,"line_start":834,"line_end":834,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8691893,"byte_end":8691896,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8691901,"byte_end":8691965,"line_start":836,"line_end":836,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8691970,"byte_end":8691973,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: TcpStream::set_nodelay","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8691978,"byte_end":8692021,"line_start":838,"line_end":838,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8692026,"byte_end":8692029,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8692034,"byte_end":8692048,"line_start":840,"line_end":840,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8692053,"byte_end":8692056,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8692061,"byte_end":8692074,"line_start":842,"line_end":842,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8692079,"byte_end":8692109,"line_start":843,"line_end":843,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8692114,"byte_end":8692117,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8692122,"byte_end":8692186,"line_start":845,"line_end":845,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8692191,"byte_end":8692252,"line_start":846,"line_end":846,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8692257,"byte_end":8692260,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.nodelay()?);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8692265,"byte_end":8692305,"line_start":848,"line_end":848,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8692310,"byte_end":8692322,"line_start":849,"line_end":849,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8692327,"byte_end":8692334,"line_start":850,"line_end":850,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8692339,"byte_end":8692346,"line_start":851,"line_end":851,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2890},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8693162,"byte_end":8693173,"line_start":876,"line_end":876,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8692432,"byte_end":8692494,"line_start":856,"line_end":856,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8692499,"byte_end":8692502,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8692507,"byte_end":8692576,"line_start":858,"line_end":858,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8692581,"byte_end":8692654,"line_start":859,"line_end":859,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8692659,"byte_end":8692732,"line_start":860,"line_end":860,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8692737,"byte_end":8692812,"line_start":861,"line_end":861,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8692817,"byte_end":8692835,"line_start":862,"line_end":862,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8692840,"byte_end":8692843,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8692848,"byte_end":8692862,"line_start":864,"line_end":864,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8692867,"byte_end":8692870,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8692875,"byte_end":8692888,"line_start":866,"line_end":866,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8692893,"byte_end":8692923,"line_start":867,"line_end":867,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8692928,"byte_end":8692931,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8692936,"byte_end":8693000,"line_start":869,"line_end":869,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8693005,"byte_end":8693066,"line_start":870,"line_end":870,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8693071,"byte_end":8693074,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8693079,"byte_end":8693109,"line_start":872,"line_end":872,"column_start":5,"column_end":35}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8693114,"byte_end":8693126,"line_start":873,"line_end":873,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8693131,"byte_end":8693138,"line_start":874,"line_end":874,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8693143,"byte_end":8693150,"line_start":875,"line_end":875,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2891},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8693818,"byte_end":8693824,"line_start":899,"line_end":899,"column_start":12,"column_end":18},"name":"linger","qualname":"<TcpStream>::linger","value":"pub fn linger(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the linger duration for this socket by getting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Reads the linger duration for this socket by getting the `SO_LINGER`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8693264,"byte_end":8693336,"line_start":880,"line_end":880,"column_start":5,"column_end":77}},{"value":"/ option.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8693341,"byte_end":8693352,"line_start":881,"line_end":881,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8693357,"byte_end":8693360,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_linger`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8693365,"byte_end":8693428,"line_start":883,"line_end":883,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8693433,"byte_end":8693436,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ [`set_linger`]: TcpStream::set_linger","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8693441,"byte_end":8693482,"line_start":885,"line_end":885,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8693487,"byte_end":8693490,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8693495,"byte_end":8693509,"line_start":887,"line_end":887,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8693514,"byte_end":8693517,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8693522,"byte_end":8693535,"line_start":889,"line_end":889,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8693540,"byte_end":8693570,"line_start":890,"line_end":890,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8693575,"byte_end":8693578,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8693583,"byte_end":8693647,"line_start":892,"line_end":892,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8693652,"byte_end":8693713,"line_start":893,"line_end":893,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8693718,"byte_end":8693721,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.linger()?);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8693726,"byte_end":8693765,"line_start":895,"line_end":895,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8693770,"byte_end":8693782,"line_start":896,"line_end":896,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8693787,"byte_end":8693794,"line_start":897,"line_end":897,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8693799,"byte_end":8693806,"line_start":898,"line_end":898,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2892},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8694803,"byte_end":8694813,"line_start":926,"line_end":926,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<TcpStream>::set_linger","value":"pub fn set_linger(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the linger duration of this socket by setting the SO_LINGER option.","sig":null,"attributes":[{"value":"/ Sets the linger duration of this socket by setting the SO_LINGER option.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8693979,"byte_end":8694055,"line_start":905,"line_end":905,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8694060,"byte_end":8694063,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ This option controls the action taken when a stream has unsent messages and the stream is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8694068,"byte_end":8694161,"line_start":907,"line_end":907,"column_start":5,"column_end":98}},{"value":"/ closed. If SO_LINGER is set, the system shall block the process until it can transmit the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8694166,"byte_end":8694259,"line_start":908,"line_end":908,"column_start":5,"column_end":98}},{"value":"/ data or until the time expires.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8694264,"byte_end":8694299,"line_start":909,"line_end":909,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8694304,"byte_end":8694307,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ If SO_LINGER is not specified, and the stream is closed, the system handles the call in a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8694312,"byte_end":8694405,"line_start":911,"line_end":911,"column_start":5,"column_end":98}},{"value":"/ way that allows the process to continue as quickly as possible.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8694410,"byte_end":8694477,"line_start":912,"line_end":912,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8694482,"byte_end":8694485,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8694490,"byte_end":8694504,"line_start":914,"line_end":914,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8694509,"byte_end":8694512,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8694517,"byte_end":8694530,"line_start":916,"line_end":916,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8694535,"byte_end":8694565,"line_start":917,"line_end":917,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8694570,"byte_end":8694573,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8694578,"byte_end":8694642,"line_start":919,"line_end":919,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8694647,"byte_end":8694708,"line_start":920,"line_end":920,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8694713,"byte_end":8694716,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ stream.set_linger(None)?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8694721,"byte_end":8694750,"line_start":922,"line_end":922,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8694755,"byte_end":8694767,"line_start":923,"line_end":923,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8694772,"byte_end":8694779,"line_start":924,"line_end":924,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8694784,"byte_end":8694791,"line_start":925,"line_end":925,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2894},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8695787,"byte_end":8695790,"line_start":962,"line_end":962,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8695275,"byte_end":8695333,"line_start":944,"line_end":944,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8695338,"byte_end":8695341,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8695346,"byte_end":8695406,"line_start":946,"line_end":946,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8695411,"byte_end":8695414,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: TcpStream::set_ttl","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8695419,"byte_end":8695454,"line_start":948,"line_end":948,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8695459,"byte_end":8695462,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8695467,"byte_end":8695481,"line_start":950,"line_end":950,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8695486,"byte_end":8695489,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8695494,"byte_end":8695507,"line_start":952,"line_end":952,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8695512,"byte_end":8695542,"line_start":953,"line_end":953,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8695547,"byte_end":8695550,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8695555,"byte_end":8695619,"line_start":955,"line_end":955,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8695624,"byte_end":8695685,"line_start":956,"line_end":956,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8695690,"byte_end":8695693,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.ttl()?);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8695698,"byte_end":8695734,"line_start":958,"line_end":958,"column_start":5,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8695739,"byte_end":8695751,"line_start":959,"line_end":959,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8695756,"byte_end":8695763,"line_start":960,"line_end":960,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8695768,"byte_end":8695775,"line_start":961,"line_end":961,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2895},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8696347,"byte_end":8696354,"line_start":983,"line_end":983,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8695852,"byte_end":8695910,"line_start":966,"line_end":966,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8695915,"byte_end":8695918,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8695923,"byte_end":8695999,"line_start":968,"line_end":968,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8696004,"byte_end":8696025,"line_start":969,"line_end":969,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8696030,"byte_end":8696033,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8696038,"byte_end":8696052,"line_start":971,"line_end":971,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8696057,"byte_end":8696060,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8696065,"byte_end":8696078,"line_start":973,"line_end":973,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8696083,"byte_end":8696113,"line_start":974,"line_end":974,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8696118,"byte_end":8696121,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8696126,"byte_end":8696190,"line_start":976,"line_end":976,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8696195,"byte_end":8696256,"line_start":977,"line_end":977,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8696261,"byte_end":8696264,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(123)?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8696269,"byte_end":8696294,"line_start":979,"line_end":979,"column_start":5,"column_end":30}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8696299,"byte_end":8696311,"line_start":980,"line_end":980,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8696316,"byte_end":8696323,"line_start":981,"line_end":981,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8696328,"byte_end":8696335,"line_start":982,"line_end":982,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2896},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8696946,"byte_end":8696951,"line_start":997,"line_end":997,"column_start":12,"column_end":17},"name":"split","qualname":"<TcpStream>::split","value":"pub fn split<'a>(&'a mut Self) -> (ReadHalf, WriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8696569,"byte_end":8696605,"line_start":989,"line_end":989,"column_start":5,"column_end":41}},{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8696610,"byte_end":8696687,"line_start":990,"line_end":990,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8696692,"byte_end":8696738,"line_start":991,"line_end":991,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8696743,"byte_end":8696746,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot be","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8696751,"byte_end":8696830,"line_start":993,"line_end":993,"column_start":5,"column_end":84}},{"value":"/ moved into independently spawned tasks.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8696835,"byte_end":8696878,"line_start":994,"line_end":994,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8696883,"byte_end":8696886,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8696891,"byte_end":8696934,"line_start":996,"line_end":996,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2898},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8697600,"byte_end":8697610,"line_start":1012,"line_end":1012,"column_start":12,"column_end":22},"name":"into_split","qualname":"<TcpStream>::into_split","value":"pub fn into_split(Self) -> (OwnedReadHalf, OwnedWriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8697036,"byte_end":8697113,"line_start":1001,"line_end":1001,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8697118,"byte_end":8697164,"line_start":1002,"line_end":1002,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8697169,"byte_end":8697172,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks, however","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8697177,"byte_end":8697255,"line_start":1004,"line_end":1004,"column_start":5,"column_end":83}},{"value":"/ this comes at the cost of a heap allocation.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8697260,"byte_end":8697308,"line_start":1005,"line_end":1005,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8697313,"byte_end":8697316,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ **Note:** Dropping the write half will shut down the write half of the TCP","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8697321,"byte_end":8697399,"line_start":1007,"line_end":1007,"column_start":5,"column_end":83}},{"value":"/ stream. This is equivalent to calling [`shutdown()`] on the `TcpStream`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8697404,"byte_end":8697480,"line_start":1008,"line_end":1008,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8697485,"byte_end":8697488,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8697493,"byte_end":8697526,"line_start":1010,"line_end":1010,"column_start":5,"column_end":38}},{"value":"/ [`shutdown()`]: fn@crate::io::AsyncWriteExt::shutdown","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8697531,"byte_end":8697588,"line_start":1011,"line_end":1011,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":3084},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8704915,"byte_end":8704924,"line_start":120,"line_end":120,"column_start":16,"column_end":25},"name":"UdpSocket","qualname":"::net::udp::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":3085}],"decl_id":null,"docs":" A UDP socket","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":21444,"byte_end":21467,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2945},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8705461,"byte_end":8705465,"line_start":143,"line_end":143,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" This function will create a new UDP socket and attempt to bind it to\n the `addr` provided.","sig":null,"attributes":[{"value":"/ This function will create a new UDP socket and attempt to bind it to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8705003,"byte_end":8705075,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ the `addr` provided.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8705080,"byte_end":8705104,"line_start":127,"line_end":127,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8705109,"byte_end":8705112,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8705117,"byte_end":8705130,"line_start":129,"line_end":129,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8705135,"byte_end":8705138,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8705143,"byte_end":8705156,"line_start":131,"line_end":131,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8705161,"byte_end":8705191,"line_start":132,"line_end":132,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8705196,"byte_end":8705212,"line_start":133,"line_end":133,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8705217,"byte_end":8705220,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8705225,"byte_end":8705243,"line_start":135,"line_end":135,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8705248,"byte_end":8705287,"line_start":136,"line_end":136,"column_start":5,"column_end":44}},{"value":"/     let sock = UdpSocket::bind(\"0.0.0.0:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8705292,"byte_end":8705350,"line_start":137,"line_end":137,"column_start":5,"column_end":63}},{"value":"/     // use `sock`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8705355,"byte_end":8705376,"line_start":138,"line_end":138,"column_start":5,"column_end":26}},{"value":"/ #   let _ = sock;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8705381,"byte_end":8705402,"line_start":139,"line_end":139,"column_start":5,"column_end":26}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8705407,"byte_end":8705421,"line_start":140,"line_end":140,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8705426,"byte_end":8705431,"line_start":141,"line_end":141,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8705436,"byte_end":8705443,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2952},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8707704,"byte_end":8707712,"line_start":207,"line_end":207,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"pub fn from_std(net::UdpSocket) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `UdpSocket` from a previously bound `std::net::UdpSocket`.","sig":null,"attributes":[{"value":"/ Creates new `UdpSocket` from a previously bound `std::net::UdpSocket`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8706298,"byte_end":8706372,"line_start":172,"line_end":172,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8706377,"byte_end":8706380,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a UDP socket from the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8706385,"byte_end":8706455,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes nothing","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8706460,"byte_end":8706536,"line_start":175,"line_end":175,"column_start":5,"column_end":81}},{"value":"/ about the underlying socket; it is left up to the user to set it in","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8706541,"byte_end":8706612,"line_start":176,"line_end":176,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8706617,"byte_end":8706639,"line_start":177,"line_end":177,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8706644,"byte_end":8706647,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This can be used in conjunction with socket2's `Socket` interface to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8706652,"byte_end":8706724,"line_start":179,"line_end":179,"column_start":5,"column_end":77}},{"value":"/ configure a socket before it's handed off, such as setting options like","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8706729,"byte_end":8706804,"line_start":180,"line_end":180,"column_start":5,"column_end":80}},{"value":"/ `reuse_address` or binding to multiple addresses.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8706809,"byte_end":8706862,"line_start":181,"line_end":181,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8706867,"byte_end":8706870,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8706875,"byte_end":8706887,"line_start":183,"line_end":183,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8706892,"byte_end":8706895,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8706900,"byte_end":8706960,"line_start":185,"line_end":185,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8706965,"byte_end":8706968,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8706973,"byte_end":8707043,"line_start":187,"line_end":187,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8707048,"byte_end":8707121,"line_start":188,"line_end":188,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8707126,"byte_end":8707206,"line_start":189,"line_end":189,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8707211,"byte_end":8707214,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8707219,"byte_end":8707232,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8707237,"byte_end":8707240,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8707245,"byte_end":8707258,"line_start":193,"line_end":193,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8707263,"byte_end":8707293,"line_start":194,"line_end":194,"column_start":5,"column_end":35}},{"value":"/ # use std::{io, net::SocketAddr};","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8707298,"byte_end":8707335,"line_start":195,"line_end":195,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8707340,"byte_end":8707343,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8707348,"byte_end":8707368,"line_start":197,"line_end":197,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8707373,"byte_end":8707414,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ let addr = \"0.0.0.0:8080\".parse::<SocketAddr>().unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8707419,"byte_end":8707480,"line_start":199,"line_end":199,"column_start":5,"column_end":66}},{"value":"/ let std_sock = std::net::UdpSocket::bind(addr)?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8707485,"byte_end":8707537,"line_start":200,"line_end":200,"column_start":5,"column_end":57}},{"value":"/ std_sock.set_nonblocking(true)?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8707542,"byte_end":8707578,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ let sock = UdpSocket::from_std(std_sock)?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8707583,"byte_end":8707629,"line_start":202,"line_end":202,"column_start":5,"column_end":51}},{"value":"/ // use `sock`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8707634,"byte_end":8707651,"line_start":203,"line_end":203,"column_start":5,"column_end":22}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8707656,"byte_end":8707668,"line_start":204,"line_end":204,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8707673,"byte_end":8707680,"line_start":205,"line_end":205,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8707685,"byte_end":8707692,"line_start":206,"line_end":206,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2953},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8708384,"byte_end":8708394,"line_start":229,"line_end":229,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8707858,"byte_end":8707917,"line_start":212,"line_end":212,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8707922,"byte_end":8707925,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8707930,"byte_end":8707943,"line_start":214,"line_end":214,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8707948,"byte_end":8707951,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8707956,"byte_end":8707969,"line_start":216,"line_end":216,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8707974,"byte_end":8708004,"line_start":217,"line_end":217,"column_start":5,"column_end":35}},{"value":"/ # use std::{io, net::SocketAddr};","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8708009,"byte_end":8708046,"line_start":218,"line_end":218,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8708051,"byte_end":8708054,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8708059,"byte_end":8708079,"line_start":220,"line_end":220,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8708084,"byte_end":8708125,"line_start":221,"line_end":221,"column_start":5,"column_end":46}},{"value":"/ let addr = \"0.0.0.0:8080\".parse::<SocketAddr>().unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8708130,"byte_end":8708191,"line_start":222,"line_end":222,"column_start":5,"column_end":66}},{"value":"/ let sock = UdpSocket::bind(addr).await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8708196,"byte_end":8708240,"line_start":223,"line_end":223,"column_start":5,"column_end":49}},{"value":"/ // the address the socket is bound to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8708245,"byte_end":8708286,"line_start":224,"line_end":224,"column_start":5,"column_end":46}},{"value":"/ let local_addr = sock.local_addr()?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8708291,"byte_end":8708331,"line_start":225,"line_end":225,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8708336,"byte_end":8708348,"line_start":226,"line_end":226,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8708353,"byte_end":8708360,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8708365,"byte_end":8708372,"line_start":228,"line_end":228,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2954},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8709314,"byte_end":8709321,"line_start":257,"line_end":257,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub async fn connect<A: ToSocketAddrs, '_>(&'_ Self, A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for send() and\n limiting packets that are read via recv from the address specified in\n `addr`.","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for send() and","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8708470,"byte_end":8708544,"line_start":233,"line_end":233,"column_start":5,"column_end":79}},{"value":"/ limiting packets that are read via recv from the address specified in","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8708549,"byte_end":8708622,"line_start":234,"line_end":234,"column_start":5,"column_end":78}},{"value":"/ `addr`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8708627,"byte_end":8708638,"line_start":235,"line_end":235,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8708643,"byte_end":8708646,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8708651,"byte_end":8708664,"line_start":237,"line_end":237,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8708669,"byte_end":8708672,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8708677,"byte_end":8708690,"line_start":239,"line_end":239,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8708695,"byte_end":8708725,"line_start":240,"line_end":240,"column_start":5,"column_end":35}},{"value":"/ # use std::{io, net::SocketAddr};","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8708730,"byte_end":8708767,"line_start":241,"line_end":241,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8708772,"byte_end":8708775,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8708780,"byte_end":8708800,"line_start":243,"line_end":243,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8708805,"byte_end":8708846,"line_start":244,"line_end":244,"column_start":5,"column_end":46}},{"value":"/ let sock = UdpSocket::bind(\"0.0.0.0:8080\".parse::<SocketAddr>().unwrap()).await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8708851,"byte_end":8708936,"line_start":245,"line_end":245,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8708941,"byte_end":8708944,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ let remote_addr = \"127.0.0.1:59600\".parse::<SocketAddr>().unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8708949,"byte_end":8709020,"line_start":247,"line_end":247,"column_start":5,"column_end":76}},{"value":"/ sock.connect(remote_addr).await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8709025,"byte_end":8709062,"line_start":248,"line_end":248,"column_start":5,"column_end":42}},{"value":"/ let mut buf = [0u8; 32];","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8709067,"byte_end":8709095,"line_start":249,"line_end":249,"column_start":5,"column_end":33}},{"value":"/ // recv from remote_addr","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8709100,"byte_end":8709128,"line_start":250,"line_end":250,"column_start":5,"column_end":33}},{"value":"/ let len = sock.recv(&mut buf).await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8709133,"byte_end":8709174,"line_start":251,"line_end":251,"column_start":5,"column_end":46}},{"value":"/ // send to remote_addr","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8709179,"byte_end":8709205,"line_start":252,"line_end":252,"column_start":5,"column_end":31}},{"value":"/ let _len = sock.send(&buf[..len]).await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8709210,"byte_end":8709255,"line_start":253,"line_end":253,"column_start":5,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8709260,"byte_end":8709272,"line_start":254,"line_end":254,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8709277,"byte_end":8709284,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8709289,"byte_end":8709296,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2959},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8712128,"byte_end":8712133,"line_start":335,"line_end":335,"column_start":18,"column_end":23},"name":"ready","qualname":"<UdpSocket>::ready","value":"pub async fn ready<'_>(&'_ Self, Interest) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for any of the requested ready states.","sig":null,"attributes":[{"value":"/ Wait for any of the requested ready states.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8709844,"byte_end":8709891,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8709896,"byte_end":8709899,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `try_recv()` or `try_send()`. It","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8709904,"byte_end":8709977,"line_start":278,"line_end":278,"column_start":5,"column_end":78}},{"value":"/ can be used to concurrently recv / send to the same socket on a single","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8709982,"byte_end":8710056,"line_start":279,"line_end":279,"column_start":5,"column_end":79}},{"value":"/ task without splitting the socket.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8710061,"byte_end":8710099,"line_start":280,"line_end":280,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8710104,"byte_end":8710107,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being ready. This is a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8710112,"byte_end":8710183,"line_start":282,"line_end":282,"column_start":5,"column_end":76}},{"value":"/ false-positive and attempting an operation will return with","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8710188,"byte_end":8710251,"line_start":283,"line_end":283,"column_start":5,"column_end":68}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8710256,"byte_end":8710288,"line_start":284,"line_end":284,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8710293,"byte_end":8710296,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8710301,"byte_end":8710315,"line_start":286,"line_end":286,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8710320,"byte_end":8710323,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Concurrently receive from and send to the socket on the same task","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8710328,"byte_end":8710397,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/ without splitting.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8710402,"byte_end":8710424,"line_start":289,"line_end":289,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8710429,"byte_end":8710432,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8710437,"byte_end":8710450,"line_start":291,"line_end":291,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, Interest};","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8710455,"byte_end":8710491,"line_start":292,"line_end":292,"column_start":5,"column_end":41}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8710496,"byte_end":8710526,"line_start":293,"line_end":293,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8710531,"byte_end":8710534,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8710539,"byte_end":8710557,"line_start":295,"line_end":295,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8710562,"byte_end":8710601,"line_start":296,"line_end":296,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8710606,"byte_end":8710668,"line_start":297,"line_end":297,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8710673,"byte_end":8710721,"line_start":298,"line_end":298,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8710726,"byte_end":8710729,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8710734,"byte_end":8710748,"line_start":300,"line_end":300,"column_start":5,"column_end":19}},{"value":"/         let ready = socket.ready(Interest::READABLE | Interest::WRITABLE).await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8710753,"byte_end":8710838,"line_start":301,"line_end":301,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8710843,"byte_end":8710846,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/         if ready.is_readable() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8710851,"byte_end":8710887,"line_start":303,"line_end":303,"column_start":5,"column_end":41}},{"value":"/             // The buffer is **not** included in the async task and will only exist","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8710892,"byte_end":8710979,"line_start":304,"line_end":304,"column_start":5,"column_end":92}},{"value":"/             // on the stack.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8710984,"byte_end":8711016,"line_start":305,"line_end":305,"column_start":5,"column_end":37}},{"value":"/             let mut data = [0; 1024];","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8711021,"byte_end":8711062,"line_start":306,"line_end":306,"column_start":5,"column_end":46}},{"value":"/             match socket.try_recv(&mut data[..]) {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8711067,"byte_end":8711121,"line_start":307,"line_end":307,"column_start":5,"column_end":59}},{"value":"/                 Ok(n) => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8711126,"byte_end":8711156,"line_start":308,"line_end":308,"column_start":5,"column_end":35}},{"value":"/                     println!(\"received {:?}\", &data[..n]);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8711161,"byte_end":8711223,"line_start":309,"line_end":309,"column_start":5,"column_end":67}},{"value":"/                 }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8711228,"byte_end":8711249,"line_start":310,"line_end":310,"column_start":5,"column_end":26}},{"value":"/                 // False-positive, continue","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8711254,"byte_end":8711301,"line_start":311,"line_end":311,"column_start":5,"column_end":52}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {}","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8711306,"byte_end":8711383,"line_start":312,"line_end":312,"column_start":5,"column_end":82}},{"value":"/                 Err(e) => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8711388,"byte_end":8711419,"line_start":313,"line_end":313,"column_start":5,"column_end":36}},{"value":"/                     return Err(e);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8711424,"byte_end":8711462,"line_start":314,"line_end":314,"column_start":5,"column_end":43}},{"value":"/                 }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8711467,"byte_end":8711488,"line_start":315,"line_end":315,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8711493,"byte_end":8711510,"line_start":316,"line_end":316,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8711515,"byte_end":8711528,"line_start":317,"line_end":317,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8711533,"byte_end":8711536,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/         if ready.is_writable() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8711541,"byte_end":8711577,"line_start":319,"line_end":319,"column_start":5,"column_end":41}},{"value":"/             // Write some data","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8711582,"byte_end":8711616,"line_start":320,"line_end":320,"column_start":5,"column_end":39}},{"value":"/             match socket.try_send(b\"hello world\") {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8711621,"byte_end":8711676,"line_start":321,"line_end":321,"column_start":5,"column_end":60}},{"value":"/                 Ok(n) => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8711681,"byte_end":8711711,"line_start":322,"line_end":322,"column_start":5,"column_end":35}},{"value":"/                     println!(\"sent {} bytes\", n);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8711716,"byte_end":8711769,"line_start":323,"line_end":323,"column_start":5,"column_end":58}},{"value":"/                 }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8711774,"byte_end":8711795,"line_start":324,"line_end":324,"column_start":5,"column_end":26}},{"value":"/                 // False-positive, continue","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8711800,"byte_end":8711847,"line_start":325,"line_end":325,"column_start":5,"column_end":52}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {}","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8711852,"byte_end":8711929,"line_start":326,"line_end":326,"column_start":5,"column_end":82}},{"value":"/                 Err(e) => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8711934,"byte_end":8711965,"line_start":327,"line_end":327,"column_start":5,"column_end":36}},{"value":"/                     return Err(e);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8711970,"byte_end":8712008,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/                 }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8712013,"byte_end":8712034,"line_start":329,"line_end":329,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8712039,"byte_end":8712056,"line_start":330,"line_end":330,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8712061,"byte_end":8712074,"line_start":331,"line_end":331,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8712079,"byte_end":8712088,"line_start":332,"line_end":332,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8712093,"byte_end":8712098,"line_start":333,"line_end":333,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8712103,"byte_end":8712110,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2962},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8713735,"byte_end":8713743,"line_start":383,"line_end":383,"column_start":18,"column_end":26},"name":"writable","qualname":"<UdpSocket>::writable","value":"pub async fn writable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become writable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become writable.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8712290,"byte_end":8712333,"line_start":340,"line_end":340,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8712338,"byte_end":8712341,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::WRITABLE)` and is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8712346,"byte_end":8712415,"line_start":342,"line_end":342,"column_start":5,"column_end":74}},{"value":"/ usually paired with `try_send()` or `try_send_to()`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8712420,"byte_end":8712476,"line_start":343,"line_end":343,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8712481,"byte_end":8712484,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being writable. This is a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8712489,"byte_end":8712563,"line_start":345,"line_end":345,"column_start":5,"column_end":79}},{"value":"/ false-positive and attempting a `try_send()` will return with","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8712568,"byte_end":8712633,"line_start":346,"line_end":346,"column_start":5,"column_end":70}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8712638,"byte_end":8712670,"line_start":347,"line_end":347,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8712675,"byte_end":8712678,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8712683,"byte_end":8712697,"line_start":349,"line_end":349,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8712702,"byte_end":8712705,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8712710,"byte_end":8712723,"line_start":351,"line_end":351,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8712728,"byte_end":8712758,"line_start":352,"line_end":352,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8712763,"byte_end":8712779,"line_start":353,"line_end":353,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8712784,"byte_end":8712787,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8712792,"byte_end":8712810,"line_start":355,"line_end":355,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8712815,"byte_end":8712854,"line_start":356,"line_end":356,"column_start":5,"column_end":44}},{"value":"/     // Bind socket","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8712859,"byte_end":8712881,"line_start":357,"line_end":357,"column_start":5,"column_end":27}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8712886,"byte_end":8712948,"line_start":358,"line_end":358,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8712953,"byte_end":8713001,"line_start":359,"line_end":359,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8713006,"byte_end":8713009,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8713014,"byte_end":8713028,"line_start":361,"line_end":361,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8713033,"byte_end":8713082,"line_start":362,"line_end":362,"column_start":5,"column_end":54}},{"value":"/         socket.writable().await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8713087,"byte_end":8713124,"line_start":363,"line_end":363,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8713129,"byte_end":8713132,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/         // Try to send data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8713137,"byte_end":8713207,"line_start":365,"line_end":365,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8713212,"byte_end":8713270,"line_start":366,"line_end":366,"column_start":5,"column_end":63}},{"value":"/         match socket.try_send(b\"hello world\") {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8713275,"byte_end":8713326,"line_start":367,"line_end":367,"column_start":5,"column_end":56}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8713331,"byte_end":8713357,"line_start":368,"line_end":368,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8713362,"byte_end":8713388,"line_start":369,"line_end":369,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8713393,"byte_end":8713410,"line_start":370,"line_end":370,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8713415,"byte_end":8713487,"line_start":371,"line_end":371,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8713492,"byte_end":8713521,"line_start":372,"line_end":372,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8713526,"byte_end":8713543,"line_start":373,"line_end":373,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8713548,"byte_end":8713575,"line_start":374,"line_end":374,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8713580,"byte_end":8713614,"line_start":375,"line_end":375,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8713619,"byte_end":8713636,"line_start":376,"line_end":376,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8713641,"byte_end":8713654,"line_start":377,"line_end":377,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8713659,"byte_end":8713668,"line_start":378,"line_end":378,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8713673,"byte_end":8713676,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8713681,"byte_end":8713695,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8713700,"byte_end":8713705,"line_start":381,"line_end":381,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8713710,"byte_end":8713717,"line_start":382,"line_end":382,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2965},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8714763,"byte_end":8714767,"line_start":419,"line_end":419,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"pub async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the remote address that the socket is\n connected to.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the remote address that the socket is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8713844,"byte_end":8713913,"line_start":388,"line_end":388,"column_start":5,"column_end":74}},{"value":"/ connected to.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8713918,"byte_end":8713935,"line_start":389,"line_end":389,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8713940,"byte_end":8713943,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8713948,"byte_end":8714020,"line_start":391,"line_end":391,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8714025,"byte_end":8714082,"line_start":392,"line_end":392,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8714087,"byte_end":8714090,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8714095,"byte_end":8714132,"line_start":394,"line_end":394,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8714137,"byte_end":8714140,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8714145,"byte_end":8714157,"line_start":396,"line_end":396,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8714162,"byte_end":8714165,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ On success, the number of bytes sent is returned, otherwise, the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8714170,"byte_end":8714238,"line_start":398,"line_end":398,"column_start":5,"column_end":73}},{"value":"/ encountered error is returned.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8714243,"byte_end":8714277,"line_start":399,"line_end":399,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8714282,"byte_end":8714285,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8714290,"byte_end":8714304,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8714309,"byte_end":8714312,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8714317,"byte_end":8714330,"line_start":403,"line_end":403,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8714335,"byte_end":8714353,"line_start":404,"line_end":404,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8714358,"byte_end":8714388,"line_start":405,"line_end":405,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8714393,"byte_end":8714396,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8714401,"byte_end":8714419,"line_start":407,"line_end":407,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8714424,"byte_end":8714463,"line_start":408,"line_end":408,"column_start":5,"column_end":44}},{"value":"/     // Bind socket","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8714468,"byte_end":8714490,"line_start":409,"line_end":409,"column_start":5,"column_end":27}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8714495,"byte_end":8714557,"line_start":410,"line_end":410,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8714562,"byte_end":8714610,"line_start":411,"line_end":411,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8714615,"byte_end":8714618,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/     // Send a message","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8714623,"byte_end":8714648,"line_start":413,"line_end":413,"column_start":5,"column_end":30}},{"value":"/     socket.send(b\"hello world\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8714653,"byte_end":8714696,"line_start":414,"line_end":414,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8714701,"byte_end":8714704,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8714709,"byte_end":8714723,"line_start":416,"line_end":416,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8714728,"byte_end":8714733,"line_start":417,"line_end":417,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8714738,"byte_end":8714745,"line_start":418,"line_end":418,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2969},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8715855,"byte_end":8715864,"line_start":449,"line_end":449,"column_start":12,"column_end":21},"name":"poll_send","qualname":"<UdpSocket>::poll_send","value":"pub fn poll_send(&Self, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send data on the socket to the remote address to which it\n was previously `connect`ed.","sig":null,"attributes":[{"value":"/ Attempts to send data on the socket to the remote address to which it","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8714948,"byte_end":8715021,"line_start":426,"line_end":426,"column_start":5,"column_end":78}},{"value":"/ was previously `connect`ed.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8715026,"byte_end":8715057,"line_start":427,"line_end":427,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8715062,"byte_end":8715065,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8715070,"byte_end":8715142,"line_start":429,"line_end":429,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8715147,"byte_end":8715204,"line_start":430,"line_end":430,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8715209,"byte_end":8715212,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the send direction,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8715217,"byte_end":8715292,"line_start":432,"line_end":432,"column_start":5,"column_end":80}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call will","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8715297,"byte_end":8715372,"line_start":433,"line_end":433,"column_start":5,"column_end":80}},{"value":"/ be scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8715377,"byte_end":8715414,"line_start":434,"line_end":434,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8715419,"byte_end":8715422,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8715427,"byte_end":8715445,"line_start":436,"line_end":436,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8715450,"byte_end":8715453,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8715458,"byte_end":8715483,"line_start":438,"line_end":438,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8715488,"byte_end":8715491,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not available to write","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8715496,"byte_end":8715557,"line_start":440,"line_end":440,"column_start":5,"column_end":66}},{"value":"/ * `Poll::Ready(Ok(n))` `n` is the number of bytes sent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8715562,"byte_end":8715620,"line_start":441,"line_end":441,"column_start":5,"column_end":63}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8715625,"byte_end":8715680,"line_start":442,"line_end":442,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8715685,"byte_end":8715688,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8715693,"byte_end":8715705,"line_start":444,"line_end":444,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8715710,"byte_end":8715713,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8715718,"byte_end":8715793,"line_start":446,"line_end":446,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8715798,"byte_end":8715801,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8715806,"byte_end":8715843,"line_start":448,"line_end":448,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2971},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8717608,"byte_end":8717616,"line_start":503,"line_end":503,"column_start":12,"column_end":20},"name":"try_send","qualname":"<UdpSocket>::try_send","value":"pub fn try_send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send data on the socket to the remote address to which it is\n connected.","sig":null,"attributes":[{"value":"/ Try to send data on the socket to the remote address to which it is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8716043,"byte_end":8716114,"line_start":455,"line_end":455,"column_start":5,"column_end":76}},{"value":"/ connected.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8716119,"byte_end":8716133,"line_start":456,"line_end":456,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8716138,"byte_end":8716141,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ When the socket buffer is full, `Err(io::ErrorKind::WouldBlock)` is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8716146,"byte_end":8716217,"line_start":458,"line_end":458,"column_start":5,"column_end":76}},{"value":"/ returned. This function is usually paired with `writable()`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8716222,"byte_end":8716286,"line_start":459,"line_end":459,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8716291,"byte_end":8716294,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8716299,"byte_end":8716312,"line_start":461,"line_end":461,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8716317,"byte_end":8716320,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ If successful, `Ok(n)` is returned, where `n` is the number of bytes","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8716325,"byte_end":8716397,"line_start":463,"line_end":463,"column_start":5,"column_end":77}},{"value":"/ sent. If the socket is not ready to send data,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8716402,"byte_end":8716452,"line_start":464,"line_end":464,"column_start":5,"column_end":55}},{"value":"/ `Err(ErrorKind::WouldBlock)` is returned.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8716457,"byte_end":8716502,"line_start":465,"line_end":465,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8716507,"byte_end":8716510,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8716515,"byte_end":8716529,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8716534,"byte_end":8716537,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8716542,"byte_end":8716555,"line_start":469,"line_end":469,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8716560,"byte_end":8716590,"line_start":470,"line_end":470,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8716595,"byte_end":8716611,"line_start":471,"line_end":471,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8716616,"byte_end":8716619,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8716624,"byte_end":8716642,"line_start":473,"line_end":473,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8716647,"byte_end":8716686,"line_start":474,"line_end":474,"column_start":5,"column_end":44}},{"value":"/     // Bind a UDP socket","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8716691,"byte_end":8716719,"line_start":475,"line_end":475,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8716724,"byte_end":8716786,"line_start":476,"line_end":476,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8716791,"byte_end":8716794,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8716799,"byte_end":8716827,"line_start":478,"line_end":478,"column_start":5,"column_end":33}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8716832,"byte_end":8716880,"line_start":479,"line_end":479,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8716885,"byte_end":8716888,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8716893,"byte_end":8716907,"line_start":481,"line_end":481,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8716912,"byte_end":8716961,"line_start":482,"line_end":482,"column_start":5,"column_end":54}},{"value":"/         socket.writable().await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8716966,"byte_end":8717003,"line_start":483,"line_end":483,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8717008,"byte_end":8717011,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/         // Try to send data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8717016,"byte_end":8717086,"line_start":485,"line_end":485,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8717091,"byte_end":8717149,"line_start":486,"line_end":486,"column_start":5,"column_end":63}},{"value":"/         match socket.try_send(b\"hello world\") {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8717154,"byte_end":8717205,"line_start":487,"line_end":487,"column_start":5,"column_end":56}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8717210,"byte_end":8717236,"line_start":488,"line_end":488,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8717241,"byte_end":8717267,"line_start":489,"line_end":489,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8717272,"byte_end":8717289,"line_start":490,"line_end":490,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8717294,"byte_end":8717366,"line_start":491,"line_end":491,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8717371,"byte_end":8717400,"line_start":492,"line_end":492,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8717405,"byte_end":8717422,"line_start":493,"line_end":493,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8717427,"byte_end":8717454,"line_start":494,"line_end":494,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8717459,"byte_end":8717493,"line_start":495,"line_end":495,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8717498,"byte_end":8717515,"line_start":496,"line_end":496,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8717520,"byte_end":8717533,"line_start":497,"line_end":497,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8717538,"byte_end":8717547,"line_start":498,"line_end":498,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8717552,"byte_end":8717555,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8717560,"byte_end":8717574,"line_start":500,"line_end":500,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8717579,"byte_end":8717584,"line_start":501,"line_end":501,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8717589,"byte_end":8717596,"line_start":502,"line_end":502,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2973},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8719429,"byte_end":8719437,"line_start":557,"line_end":557,"column_start":18,"column_end":26},"name":"readable","qualname":"<UdpSocket>::readable","value":"pub async fn readable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become readable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become readable.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8717776,"byte_end":8717819,"line_start":509,"line_end":509,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8717824,"byte_end":8717827,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::READABLE)` and is usually","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8717832,"byte_end":8717909,"line_start":511,"line_end":511,"column_start":5,"column_end":82}},{"value":"/ paired with `try_recv()`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8717914,"byte_end":8717943,"line_start":512,"line_end":512,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8717948,"byte_end":8717951,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being readable. This is a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8717956,"byte_end":8718030,"line_start":514,"line_end":514,"column_start":5,"column_end":79}},{"value":"/ false-positive and attempting a `try_recv()` will return with","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8718035,"byte_end":8718100,"line_start":515,"line_end":515,"column_start":5,"column_end":70}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8718105,"byte_end":8718137,"line_start":516,"line_end":516,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8718142,"byte_end":8718145,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8718150,"byte_end":8718164,"line_start":518,"line_end":518,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8718169,"byte_end":8718172,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8718177,"byte_end":8718190,"line_start":520,"line_end":520,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8718195,"byte_end":8718225,"line_start":521,"line_end":521,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8718230,"byte_end":8718246,"line_start":522,"line_end":522,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8718251,"byte_end":8718254,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8718259,"byte_end":8718277,"line_start":524,"line_end":524,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8718282,"byte_end":8718321,"line_start":525,"line_end":525,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8718326,"byte_end":8718354,"line_start":526,"line_end":526,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8718359,"byte_end":8718421,"line_start":527,"line_end":527,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8718426,"byte_end":8718474,"line_start":528,"line_end":528,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8718479,"byte_end":8718482,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8718487,"byte_end":8718501,"line_start":530,"line_end":530,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8718506,"byte_end":8718555,"line_start":531,"line_end":531,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8718560,"byte_end":8718597,"line_start":532,"line_end":532,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8718602,"byte_end":8718605,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8718610,"byte_end":8718682,"line_start":534,"line_end":534,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8718687,"byte_end":8718726,"line_start":535,"line_end":535,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8718731,"byte_end":8718767,"line_start":536,"line_end":536,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8718772,"byte_end":8718775,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8718780,"byte_end":8718850,"line_start":538,"line_end":538,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8718855,"byte_end":8718913,"line_start":539,"line_end":539,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv(&mut buf) {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8718918,"byte_end":8718963,"line_start":540,"line_end":540,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8718968,"byte_end":8718994,"line_start":541,"line_end":541,"column_start":5,"column_end":31}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8718999,"byte_end":8719051,"line_start":542,"line_end":542,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8719056,"byte_end":8719082,"line_start":543,"line_end":543,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8719087,"byte_end":8719104,"line_start":544,"line_end":544,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8719109,"byte_end":8719181,"line_start":545,"line_end":545,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8719186,"byte_end":8719215,"line_start":546,"line_end":546,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8719220,"byte_end":8719237,"line_start":547,"line_end":547,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8719242,"byte_end":8719269,"line_start":548,"line_end":548,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8719274,"byte_end":8719308,"line_start":549,"line_end":549,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8719313,"byte_end":8719330,"line_start":550,"line_end":550,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8719335,"byte_end":8719348,"line_start":551,"line_end":551,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8719353,"byte_end":8719362,"line_start":552,"line_end":552,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8719367,"byte_end":8719370,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8719375,"byte_end":8719389,"line_start":554,"line_end":554,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8719394,"byte_end":8719399,"line_start":555,"line_end":555,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8719404,"byte_end":8719411,"line_start":556,"line_end":556,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2976},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8720650,"byte_end":8720654,"line_start":592,"line_end":592,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message on the socket from the remote address\n to which it is connected. On success, returns the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives a single datagram message on the socket from the remote address","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8719538,"byte_end":8719614,"line_start":562,"line_end":562,"column_start":5,"column_end":81}},{"value":"/ to which it is connected. On success, returns the number of bytes read.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8719619,"byte_end":8719694,"line_start":563,"line_end":563,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8719699,"byte_end":8719702,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8719707,"byte_end":8719780,"line_start":565,"line_end":565,"column_start":5,"column_end":78}},{"value":"/ size to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8719785,"byte_end":8719859,"line_start":566,"line_end":566,"column_start":5,"column_end":79}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8719864,"byte_end":8719915,"line_start":567,"line_end":567,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8719920,"byte_end":8719923,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8719928,"byte_end":8720000,"line_start":569,"line_end":569,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8720005,"byte_end":8720062,"line_start":570,"line_end":570,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8720067,"byte_end":8720070,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8720075,"byte_end":8720112,"line_start":572,"line_end":572,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8720117,"byte_end":8720120,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8720125,"byte_end":8720138,"line_start":574,"line_end":574,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8720143,"byte_end":8720173,"line_start":575,"line_end":575,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8720178,"byte_end":8720194,"line_start":576,"line_end":576,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8720199,"byte_end":8720202,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8720207,"byte_end":8720225,"line_start":578,"line_end":578,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8720230,"byte_end":8720269,"line_start":579,"line_end":579,"column_start":5,"column_end":44}},{"value":"/     // Bind socket","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8720274,"byte_end":8720296,"line_start":580,"line_end":580,"column_start":5,"column_end":27}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8720301,"byte_end":8720363,"line_start":581,"line_end":581,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8720368,"byte_end":8720416,"line_start":582,"line_end":582,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8720421,"byte_end":8720424,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/     let mut buf = vec![0; 10];","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8720429,"byte_end":8720463,"line_start":584,"line_end":584,"column_start":5,"column_end":39}},{"value":"/     let n = socket.recv(&mut buf).await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8720468,"byte_end":8720513,"line_start":585,"line_end":585,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8720518,"byte_end":8720521,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/     println!(\"received {} bytes {:?}\", n, &buf[..n]);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8720526,"byte_end":8720583,"line_start":587,"line_end":587,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8720588,"byte_end":8720591,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8720596,"byte_end":8720610,"line_start":589,"line_end":589,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8720615,"byte_end":8720620,"line_start":590,"line_end":590,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8720625,"byte_end":8720632,"line_start":591,"line_end":591,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2980},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8721779,"byte_end":8721788,"line_start":622,"line_end":622,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UdpSocket>::poll_recv","value":"pub fn poll_recv(&Self, &mut Context, &mut ReadBuf) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a single datagram message on the socket from the remote\n address to which it is `connect`ed.","sig":null,"attributes":[{"value":"/ Attempts to receive a single datagram message on the socket from the remote","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8720839,"byte_end":8720918,"line_start":599,"line_end":599,"column_start":5,"column_end":84}},{"value":"/ address to which it is `connect`ed.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8720923,"byte_end":8720962,"line_start":600,"line_end":600,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8720967,"byte_end":8720970,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. This method","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8720975,"byte_end":8721059,"line_start":602,"line_end":602,"column_start":5,"column_end":89}},{"value":"/ resolves to an error if the socket is not connected.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8721064,"byte_end":8721120,"line_start":603,"line_end":603,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8721125,"byte_end":8721128,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8721133,"byte_end":8721217,"line_start":605,"line_end":605,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8721222,"byte_end":8721304,"line_start":606,"line_end":606,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8721309,"byte_end":8721330,"line_start":607,"line_end":607,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8721335,"byte_end":8721338,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8721343,"byte_end":8721361,"line_start":609,"line_end":609,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8721366,"byte_end":8721369,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8721374,"byte_end":8721399,"line_start":611,"line_end":611,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8721404,"byte_end":8721407,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8721412,"byte_end":8721468,"line_start":613,"line_end":613,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(()))` reads data `ReadBuf` if the socket is ready","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8721473,"byte_end":8721544,"line_start":614,"line_end":614,"column_start":5,"column_end":76}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8721549,"byte_end":8721604,"line_start":615,"line_end":615,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8721609,"byte_end":8721612,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8721617,"byte_end":8721629,"line_start":617,"line_end":617,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8721634,"byte_end":8721637,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8721642,"byte_end":8721717,"line_start":619,"line_end":619,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8721722,"byte_end":8721725,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8721730,"byte_end":8721767,"line_start":621,"line_end":621,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2981},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8724209,"byte_end":8724217,"line_start":690,"line_end":690,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<UdpSocket>::try_recv","value":"pub fn try_recv(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive a single datagram message on the socket from the remote\n address to which it is connected. On success, returns the number of\n bytes read.","sig":null,"attributes":[{"value":"/ Try to receive a single datagram message on the socket from the remote","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8722382,"byte_end":8722456,"line_start":640,"line_end":640,"column_start":5,"column_end":79}},{"value":"/ address to which it is connected. On success, returns the number of","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8722461,"byte_end":8722532,"line_start":641,"line_end":641,"column_start":5,"column_end":76}},{"value":"/ bytes read.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8722537,"byte_end":8722552,"line_start":642,"line_end":642,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8722557,"byte_end":8722560,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array buf of sufficient size","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8722565,"byte_end":8722641,"line_start":644,"line_end":644,"column_start":5,"column_end":81}},{"value":"/ to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8722646,"byte_end":8722715,"line_start":645,"line_end":645,"column_start":5,"column_end":74}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8722720,"byte_end":8722771,"line_start":646,"line_end":646,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8722776,"byte_end":8722779,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ When there is no pending data, `Err(io::ErrorKind::WouldBlock)` is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8722784,"byte_end":8722854,"line_start":648,"line_end":648,"column_start":5,"column_end":75}},{"value":"/ returned. This function is usually paired with `readable()`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8722859,"byte_end":8722923,"line_start":649,"line_end":649,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8722928,"byte_end":8722931,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8722936,"byte_end":8722950,"line_start":651,"line_end":651,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8722955,"byte_end":8722958,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8722963,"byte_end":8722976,"line_start":653,"line_end":653,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8722981,"byte_end":8723011,"line_start":654,"line_end":654,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8723016,"byte_end":8723032,"line_start":655,"line_end":655,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8723037,"byte_end":8723040,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8723045,"byte_end":8723063,"line_start":657,"line_end":657,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8723068,"byte_end":8723107,"line_start":658,"line_end":658,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8723112,"byte_end":8723140,"line_start":659,"line_end":659,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8723145,"byte_end":8723207,"line_start":660,"line_end":660,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8723212,"byte_end":8723260,"line_start":661,"line_end":661,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8723265,"byte_end":8723268,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8723273,"byte_end":8723287,"line_start":663,"line_end":663,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8723292,"byte_end":8723341,"line_start":664,"line_end":664,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8723346,"byte_end":8723383,"line_start":665,"line_end":665,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8723388,"byte_end":8723391,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8723396,"byte_end":8723468,"line_start":667,"line_end":667,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8723473,"byte_end":8723512,"line_start":668,"line_end":668,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8723517,"byte_end":8723553,"line_start":669,"line_end":669,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8723558,"byte_end":8723561,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8723566,"byte_end":8723636,"line_start":671,"line_end":671,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8723641,"byte_end":8723699,"line_start":672,"line_end":672,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv(&mut buf) {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8723704,"byte_end":8723749,"line_start":673,"line_end":673,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8723754,"byte_end":8723780,"line_start":674,"line_end":674,"column_start":5,"column_end":31}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8723785,"byte_end":8723837,"line_start":675,"line_end":675,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8723842,"byte_end":8723868,"line_start":676,"line_end":676,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8723873,"byte_end":8723890,"line_start":677,"line_end":677,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8723895,"byte_end":8723967,"line_start":678,"line_end":678,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8723972,"byte_end":8724001,"line_start":679,"line_end":679,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8724006,"byte_end":8724023,"line_start":680,"line_end":680,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8724028,"byte_end":8724055,"line_start":681,"line_end":681,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8724060,"byte_end":8724094,"line_start":682,"line_end":682,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8724099,"byte_end":8724116,"line_start":683,"line_end":683,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8724121,"byte_end":8724134,"line_start":684,"line_end":684,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8724139,"byte_end":8724148,"line_start":685,"line_end":685,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8724153,"byte_end":8724156,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8724161,"byte_end":8724175,"line_start":687,"line_end":687,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8724180,"byte_end":8724185,"line_start":688,"line_end":688,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8724190,"byte_end":8724197,"line_start":689,"line_end":689,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3087},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8726296,"byte_end":8726308,"line_start":744,"line_end":744,"column_start":16,"column_end":28},"name":"try_recv_buf","qualname":"<UdpSocket>::try_recv_buf","value":"pub fn try_recv_buf<B: BufMut>(&Self, &mut B) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive data from the stream into the provided buffer, advancing the\n buffer's internal cursor, returning how many bytes were read.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3090},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8728736,"byte_end":8728753,"line_start":808,"line_end":808,"column_start":16,"column_end":33},"name":"try_recv_buf_from","qualname":"<UdpSocket>::try_recv_buf_from","value":"pub fn try_recv_buf_from<B: BufMut>(&Self, &mut B)\n-> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive a single datagram message on the socket. On success,\n returns the number of bytes read and the origin.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2983},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8730440,"byte_end":8730447,"line_start":857,"line_end":857,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub async fn send_to<A: ToSocketAddrs, '_, '_>(&'_ Self, &'_ [u8], A)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address. On success, returns the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the given address. On success, returns the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8729395,"byte_end":8729469,"line_start":827,"line_end":827,"column_start":5,"column_end":79}},{"value":"/ number of bytes written.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8729474,"byte_end":8729502,"line_start":828,"line_end":828,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8729507,"byte_end":8729510,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ Address type can be any implementor of [`ToSocketAddrs`] trait. See its","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8729515,"byte_end":8729590,"line_start":830,"line_end":830,"column_start":5,"column_end":80}},{"value":"/ documentation for concrete examples.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8729595,"byte_end":8729635,"line_start":831,"line_end":831,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8729640,"byte_end":8729643,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ It is possible for `addr` to yield multiple addresses, but `send_to`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8729648,"byte_end":8729720,"line_start":833,"line_end":833,"column_start":5,"column_end":77}},{"value":"/ will only send data to the first address yielded by `addr`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8729725,"byte_end":8729788,"line_start":834,"line_end":834,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8729793,"byte_end":8729796,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ This will return an error when the IP version of the local socket does","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8729801,"byte_end":8729875,"line_start":836,"line_end":836,"column_start":5,"column_end":79}},{"value":"/ not match that returned from [`ToSocketAddrs`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8729880,"byte_end":8729931,"line_start":837,"line_end":837,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8729936,"byte_end":8729939,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: crate::net::ToSocketAddrs","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8729944,"byte_end":8729992,"line_start":839,"line_end":839,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8729997,"byte_end":8730000,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8730005,"byte_end":8730018,"line_start":841,"line_end":841,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8730023,"byte_end":8730026,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8730031,"byte_end":8730044,"line_start":843,"line_end":843,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8730049,"byte_end":8730079,"line_start":844,"line_end":844,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8730084,"byte_end":8730100,"line_start":845,"line_end":845,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8730105,"byte_end":8730108,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8730113,"byte_end":8730131,"line_start":847,"line_end":847,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8730136,"byte_end":8730175,"line_start":848,"line_end":848,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8730180,"byte_end":8730242,"line_start":849,"line_end":849,"column_start":5,"column_end":67}},{"value":"/     let len = socket.send_to(b\"hello world\", \"127.0.0.1:8081\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8730247,"byte_end":8730321,"line_start":850,"line_end":850,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8730326,"byte_end":8730329,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/     println!(\"Sent {} bytes\", len);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8730334,"byte_end":8730373,"line_start":852,"line_end":852,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8730378,"byte_end":8730381,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8730386,"byte_end":8730400,"line_start":854,"line_end":854,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8730405,"byte_end":8730410,"line_start":855,"line_end":855,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8730415,"byte_end":8730422,"line_start":856,"line_end":856,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2987},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8731498,"byte_end":8731510,"line_start":886,"line_end":886,"column_start":12,"column_end":24},"name":"poll_send_to","qualname":"<UdpSocket>::poll_send_to","value":"pub fn poll_send_to(&Self, &mut Context, &[u8], SocketAddr)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send data on the socket to a given address.","sig":null,"attributes":[{"value":"/ Attempts to send data on the socket to a given address.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8730841,"byte_end":8730900,"line_start":869,"line_end":869,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8730905,"byte_end":8730908,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the send direction, only the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8730913,"byte_end":8730997,"line_start":871,"line_end":871,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8731002,"byte_end":8731084,"line_start":872,"line_end":872,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8731089,"byte_end":8731110,"line_start":873,"line_end":873,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8731115,"byte_end":8731118,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8731123,"byte_end":8731141,"line_start":875,"line_end":875,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8731146,"byte_end":8731149,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8731154,"byte_end":8731179,"line_start":877,"line_end":877,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8731184,"byte_end":8731187,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to write","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8731192,"byte_end":8731249,"line_start":879,"line_end":879,"column_start":5,"column_end":62}},{"value":"/ * `Poll::Ready(Ok(n))` `n` is the number of bytes sent.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8731254,"byte_end":8731313,"line_start":880,"line_end":880,"column_start":5,"column_end":64}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8731318,"byte_end":8731373,"line_start":881,"line_end":881,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8731378,"byte_end":8731381,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8731386,"byte_end":8731398,"line_start":883,"line_end":883,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8731403,"byte_end":8731406,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8731411,"byte_end":8731486,"line_start":885,"line_end":885,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2989},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8733310,"byte_end":8733321,"line_start":944,"line_end":944,"column_start":12,"column_end":23},"name":"try_send_to","qualname":"<UdpSocket>::try_send_to","value":"pub fn try_send_to(&Self, &[u8], SocketAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send data on the socket to the given address, but if the send is\n blocked this will return right away.","sig":null,"attributes":[{"value":"/ Try to send data on the socket to the given address, but if the send is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8731759,"byte_end":8731834,"line_start":897,"line_end":897,"column_start":5,"column_end":80}},{"value":"/ blocked this will return right away.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8731839,"byte_end":8731879,"line_start":898,"line_end":898,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8731884,"byte_end":8731887,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `writable()`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8731892,"byte_end":8731946,"line_start":900,"line_end":900,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8731951,"byte_end":8731954,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8731959,"byte_end":8731972,"line_start":902,"line_end":902,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8731977,"byte_end":8731980,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ If successfull, returns the number of bytes sent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8731985,"byte_end":8732037,"line_start":904,"line_end":904,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8732042,"byte_end":8732045,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ Users should ensure that when the remote cannot receive, the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8732050,"byte_end":8732114,"line_start":906,"line_end":906,"column_start":5,"column_end":69}},{"value":"/ [`ErrorKind::WouldBlock`] is properly handled. An error can also occur","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8732119,"byte_end":8732193,"line_start":907,"line_end":907,"column_start":5,"column_end":79}},{"value":"/ if the IP version of the socket does not match that of `target`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8732198,"byte_end":8732266,"line_start":908,"line_end":908,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8732271,"byte_end":8732274,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ [`ErrorKind::WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8732279,"byte_end":8732340,"line_start":910,"line_end":910,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8732345,"byte_end":8732348,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8732353,"byte_end":8732366,"line_start":912,"line_end":912,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8732371,"byte_end":8732374,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8732379,"byte_end":8732392,"line_start":914,"line_end":914,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8732397,"byte_end":8732427,"line_start":915,"line_end":915,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8732432,"byte_end":8732458,"line_start":916,"line_end":916,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8732463,"byte_end":8732479,"line_start":917,"line_end":917,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8732484,"byte_end":8732487,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8732492,"byte_end":8732510,"line_start":919,"line_end":919,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8732515,"byte_end":8732566,"line_start":920,"line_end":920,"column_start":5,"column_end":56}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8732571,"byte_end":8732633,"line_start":921,"line_end":921,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8732638,"byte_end":8732641,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/     let dst = \"127.0.0.1:8081\".parse()?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8732646,"byte_end":8732690,"line_start":923,"line_end":923,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8732695,"byte_end":8732698,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8732703,"byte_end":8732717,"line_start":925,"line_end":925,"column_start":5,"column_end":19}},{"value":"/         socket.writable().await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8732722,"byte_end":8732759,"line_start":926,"line_end":926,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8732764,"byte_end":8732767,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/         match socket.try_send_to(&b\"hello world\"[..], dst) {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8732772,"byte_end":8732836,"line_start":928,"line_end":928,"column_start":5,"column_end":69}},{"value":"/             Ok(sent) => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8732841,"byte_end":8732870,"line_start":929,"line_end":929,"column_start":5,"column_end":34}},{"value":"/                 println!(\"sent {} bytes\", sent);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8732875,"byte_end":8732927,"line_start":930,"line_end":930,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8732932,"byte_end":8732958,"line_start":931,"line_end":931,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8732963,"byte_end":8732980,"line_start":932,"line_end":932,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8732985,"byte_end":8733057,"line_start":933,"line_end":933,"column_start":5,"column_end":77}},{"value":"/                 // Writable false positive.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8733062,"byte_end":8733109,"line_start":934,"line_end":934,"column_start":5,"column_end":52}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8733114,"byte_end":8733143,"line_start":935,"line_end":935,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8733148,"byte_end":8733165,"line_start":936,"line_end":936,"column_start":5,"column_end":22}},{"value":"/             Err(e) => return Err(e.into()),","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8733170,"byte_end":8733217,"line_start":937,"line_end":937,"column_start":5,"column_end":52}},{"value":"/         }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8733222,"byte_end":8733235,"line_start":938,"line_end":938,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8733240,"byte_end":8733249,"line_start":939,"line_end":939,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8733254,"byte_end":8733257,"line_start":940,"line_end":940,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8733262,"byte_end":8733276,"line_start":941,"line_end":941,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8733281,"byte_end":8733286,"line_start":942,"line_end":942,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8733291,"byte_end":8733298,"line_start":943,"line_end":943,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2995},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8734593,"byte_end":8734602,"line_start":982,"line_end":982,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message on the socket. On success, returns\n the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Receives a single datagram message on the socket. On success, returns","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8733745,"byte_end":8733818,"line_start":957,"line_end":957,"column_start":5,"column_end":78}},{"value":"/ the number of bytes read and the origin.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8733823,"byte_end":8733867,"line_start":958,"line_end":958,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8733872,"byte_end":8733875,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8733880,"byte_end":8733953,"line_start":960,"line_end":960,"column_start":5,"column_end":78}},{"value":"/ size to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8733958,"byte_end":8734032,"line_start":961,"line_end":961,"column_start":5,"column_end":79}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8734037,"byte_end":8734088,"line_start":962,"line_end":962,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8734093,"byte_end":8734096,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8734101,"byte_end":8734114,"line_start":964,"line_end":964,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8734119,"byte_end":8734122,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8734127,"byte_end":8734140,"line_start":966,"line_end":966,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8734145,"byte_end":8734175,"line_start":967,"line_end":967,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8734180,"byte_end":8734196,"line_start":968,"line_end":968,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8734201,"byte_end":8734204,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8734209,"byte_end":8734227,"line_start":970,"line_end":970,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8734232,"byte_end":8734271,"line_start":971,"line_end":971,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8734276,"byte_end":8734338,"line_start":972,"line_end":972,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8734343,"byte_end":8734346,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/     let mut buf = vec![0u8; 32];","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8734351,"byte_end":8734387,"line_start":974,"line_end":974,"column_start":5,"column_end":41}},{"value":"/     let (len, addr) = socket.recv_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8734392,"byte_end":8734452,"line_start":975,"line_end":975,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8734457,"byte_end":8734460,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/     println!(\"received {:?} bytes from {:?}\", len, addr);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8734465,"byte_end":8734526,"line_start":977,"line_end":977,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8734531,"byte_end":8734534,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8734539,"byte_end":8734553,"line_start":979,"line_end":979,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8734558,"byte_end":8734563,"line_start":980,"line_end":980,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8734568,"byte_end":8734575,"line_start":981,"line_end":981,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2999},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8735490,"byte_end":8735504,"line_start":1006,"line_end":1006,"column_start":12,"column_end":26},"name":"poll_recv_from","qualname":"<UdpSocket>::poll_recv_from","value":"pub fn poll_recv_from(&Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<SocketAddr>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a single datagram on the socket.","sig":null,"attributes":[{"value":"/ Attempts to receive a single datagram on the socket.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8734806,"byte_end":8734862,"line_start":989,"line_end":989,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8734867,"byte_end":8734870,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8734875,"byte_end":8734959,"line_start":991,"line_end":991,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8734964,"byte_end":8735046,"line_start":992,"line_end":992,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8735051,"byte_end":8735072,"line_start":993,"line_end":993,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8735077,"byte_end":8735080,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8735085,"byte_end":8735103,"line_start":995,"line_end":995,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8735108,"byte_end":8735111,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8735116,"byte_end":8735141,"line_start":997,"line_end":997,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8735146,"byte_end":8735149,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8735154,"byte_end":8735210,"line_start":999,"line_end":999,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(addr))` reads data from `addr` into `ReadBuf` if the socket is ready","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8735215,"byte_end":8735305,"line_start":1000,"line_end":1000,"column_start":5,"column_end":95}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8735310,"byte_end":8735365,"line_start":1001,"line_end":1001,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8735370,"byte_end":8735373,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8735378,"byte_end":8735390,"line_start":1003,"line_end":1003,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8735395,"byte_end":8735398,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8735403,"byte_end":8735478,"line_start":1005,"line_end":1005,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3000},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8737898,"byte_end":8737911,"line_start":1076,"line_end":1076,"column_start":12,"column_end":25},"name":"try_recv_from","qualname":"<UdpSocket>::try_recv_from","value":"pub fn try_recv_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive a single datagram message on the socket. On success,\n returns the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Try to receive a single datagram message on the socket. On success,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8736152,"byte_end":8736223,"line_start":1028,"line_end":1028,"column_start":5,"column_end":76}},{"value":"/ returns the number of bytes read and the origin.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8736228,"byte_end":8736280,"line_start":1029,"line_end":1029,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8736285,"byte_end":8736288,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array buf of sufficient size","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8736293,"byte_end":8736369,"line_start":1031,"line_end":1031,"column_start":5,"column_end":81}},{"value":"/ to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8736374,"byte_end":8736443,"line_start":1032,"line_end":1032,"column_start":5,"column_end":74}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8736448,"byte_end":8736499,"line_start":1033,"line_end":1033,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8736504,"byte_end":8736507,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ When there is no pending data, `Err(io::ErrorKind::WouldBlock)` is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8736512,"byte_end":8736582,"line_start":1035,"line_end":1035,"column_start":5,"column_end":75}},{"value":"/ returned. This function is usually paired with `readable()`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8736587,"byte_end":8736651,"line_start":1036,"line_end":1036,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8736656,"byte_end":8736659,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8736664,"byte_end":8736678,"line_start":1038,"line_end":1038,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8736683,"byte_end":8736686,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8736691,"byte_end":8736704,"line_start":1040,"line_end":1040,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8736709,"byte_end":8736739,"line_start":1041,"line_end":1041,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8736744,"byte_end":8736760,"line_start":1042,"line_end":1042,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8736765,"byte_end":8736768,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8736773,"byte_end":8736791,"line_start":1044,"line_end":1044,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8736796,"byte_end":8736835,"line_start":1045,"line_end":1045,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8736840,"byte_end":8736868,"line_start":1046,"line_end":1046,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8736873,"byte_end":8736935,"line_start":1047,"line_end":1047,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8736940,"byte_end":8736943,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8736948,"byte_end":8736962,"line_start":1049,"line_end":1049,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8736967,"byte_end":8737016,"line_start":1050,"line_end":1050,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8737021,"byte_end":8737058,"line_start":1051,"line_end":1051,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8737063,"byte_end":8737066,"line_start":1052,"line_end":1052,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8737071,"byte_end":8737143,"line_start":1053,"line_end":1053,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8737148,"byte_end":8737187,"line_start":1054,"line_end":1054,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8737192,"byte_end":8737228,"line_start":1055,"line_end":1055,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8737233,"byte_end":8737236,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8737241,"byte_end":8737311,"line_start":1057,"line_end":1057,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8737316,"byte_end":8737374,"line_start":1058,"line_end":1058,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv_from(&mut buf) {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8737379,"byte_end":8737429,"line_start":1059,"line_end":1059,"column_start":5,"column_end":55}},{"value":"/             Ok((n, _addr)) => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8737434,"byte_end":8737469,"line_start":1060,"line_end":1060,"column_start":5,"column_end":40}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8737474,"byte_end":8737526,"line_start":1061,"line_end":1061,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8737531,"byte_end":8737557,"line_start":1062,"line_end":1062,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8737562,"byte_end":8737579,"line_start":1063,"line_end":1063,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8737584,"byte_end":8737656,"line_start":1064,"line_end":1064,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8737661,"byte_end":8737690,"line_start":1065,"line_end":1065,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8737695,"byte_end":8737712,"line_start":1066,"line_end":1066,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8737717,"byte_end":8737744,"line_start":1067,"line_end":1067,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8737749,"byte_end":8737783,"line_start":1068,"line_end":1068,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8737788,"byte_end":8737805,"line_start":1069,"line_end":1069,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8737810,"byte_end":8737823,"line_start":1070,"line_end":1070,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8737828,"byte_end":8737837,"line_start":1071,"line_end":1071,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8737842,"byte_end":8737845,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8737850,"byte_end":8737864,"line_start":1073,"line_end":1073,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8737869,"byte_end":8737874,"line_start":1074,"line_end":1074,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8737879,"byte_end":8737886,"line_start":1075,"line_end":1075,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3002},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8739171,"byte_end":8739180,"line_start":1112,"line_end":1112,"column_start":18,"column_end":27},"name":"peek_from","qualname":"<UdpSocket>::peek_from","value":"pub async fn peek_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read and the address from whence\n the data came.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8738094,"byte_end":8738170,"line_start":1082,"line_end":1082,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read and the address from whence","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8738175,"byte_end":8738251,"line_start":1083,"line_end":1083,"column_start":5,"column_end":81}},{"value":"/ the data came.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8738256,"byte_end":8738274,"line_start":1084,"line_end":1084,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8738279,"byte_end":8738282,"line_start":1085,"line_end":1085,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8738287,"byte_end":8738298,"line_start":1086,"line_end":1086,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8738303,"byte_end":8738306,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8738311,"byte_end":8738386,"line_start":1088,"line_end":1088,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek_from returns the error","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8738391,"byte_end":8738469,"line_start":1089,"line_end":1089,"column_start":5,"column_end":83}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8738474,"byte_end":8738522,"line_start":1090,"line_end":1090,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8738527,"byte_end":8738594,"line_start":1091,"line_end":1091,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8738599,"byte_end":8738667,"line_start":1092,"line_end":1092,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8738672,"byte_end":8738675,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8738680,"byte_end":8738694,"line_start":1094,"line_end":1094,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8738699,"byte_end":8738702,"line_start":1095,"line_end":1095,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8738707,"byte_end":8738720,"line_start":1096,"line_end":1096,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8738725,"byte_end":8738755,"line_start":1097,"line_end":1097,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8738760,"byte_end":8738776,"line_start":1098,"line_end":1098,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8738781,"byte_end":8738784,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8738789,"byte_end":8738807,"line_start":1100,"line_end":1100,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8738812,"byte_end":8738851,"line_start":1101,"line_end":1101,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8738856,"byte_end":8738918,"line_start":1102,"line_end":1102,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8738923,"byte_end":8738926,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/     let mut buf = vec![0u8; 32];","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8738931,"byte_end":8738967,"line_start":1104,"line_end":1104,"column_start":5,"column_end":41}},{"value":"/     let (len, addr) = socket.peek_from(&mut buf).await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8738972,"byte_end":8739032,"line_start":1105,"line_end":1105,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8739037,"byte_end":8739040,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/     println!(\"peeked {:?} bytes from {:?}\", len, addr);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8739045,"byte_end":8739104,"line_start":1107,"line_end":1107,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8739109,"byte_end":8739112,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8739117,"byte_end":8739131,"line_start":1109,"line_end":1109,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8739136,"byte_end":8739141,"line_start":1110,"line_end":1110,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8739146,"byte_end":8739153,"line_start":1111,"line_end":1111,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3006},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8740529,"byte_end":8740543,"line_start":1145,"line_end":1145,"column_start":12,"column_end":26},"name":"poll_peek_from","qualname":"<UdpSocket>::poll_peek_from","value":"pub fn poll_peek_from(&Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<SocketAddr>>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8739384,"byte_end":8739460,"line_start":1119,"line_end":1119,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8739465,"byte_end":8739514,"line_start":1120,"line_end":1120,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8739519,"byte_end":8739522,"line_start":1121,"line_end":1121,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8739527,"byte_end":8739538,"line_start":1122,"line_end":1122,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8739543,"byte_end":8739546,"line_start":1123,"line_end":1123,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8739551,"byte_end":8739635,"line_start":1124,"line_end":1124,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8739640,"byte_end":8739722,"line_start":1125,"line_end":1125,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8739727,"byte_end":8739747,"line_start":1126,"line_end":1126,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8739752,"byte_end":8739755,"line_start":1127,"line_end":1127,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8739760,"byte_end":8739835,"line_start":1128,"line_end":1128,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek returns the error","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8739840,"byte_end":8739913,"line_start":1129,"line_end":1129,"column_start":5,"column_end":78}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8739918,"byte_end":8739966,"line_start":1130,"line_end":1130,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8739971,"byte_end":8740038,"line_start":1131,"line_end":1131,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8740043,"byte_end":8740111,"line_start":1132,"line_end":1132,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8740116,"byte_end":8740119,"line_start":1133,"line_end":1133,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8740124,"byte_end":8740142,"line_start":1134,"line_end":1134,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8740147,"byte_end":8740150,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8740155,"byte_end":8740180,"line_start":1136,"line_end":1136,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8740185,"byte_end":8740188,"line_start":1137,"line_end":1137,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8740193,"byte_end":8740249,"line_start":1138,"line_end":1138,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(addr))` reads data from `addr` into `ReadBuf` if the socket is ready","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8740254,"byte_end":8740344,"line_start":1139,"line_end":1139,"column_start":5,"column_end":95}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8740349,"byte_end":8740404,"line_start":1140,"line_end":1140,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8740409,"byte_end":8740412,"line_start":1141,"line_end":1141,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8740417,"byte_end":8740429,"line_start":1142,"line_end":1142,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8740434,"byte_end":8740437,"line_start":1143,"line_end":1143,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8740442,"byte_end":8740517,"line_start":1144,"line_end":1144,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3007},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8741408,"byte_end":8741417,"line_start":1172,"line_end":1172,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8741191,"byte_end":8741255,"line_start":1167,"line_end":1167,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8741260,"byte_end":8741263,"line_start":1168,"line_end":1168,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8741268,"byte_end":8741334,"line_start":1169,"line_end":1169,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8741339,"byte_end":8741342,"line_start":1170,"line_end":1170,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: method@Self::set_broadcast","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8741347,"byte_end":8741396,"line_start":1171,"line_end":1171,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3008},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8741663,"byte_end":8741676,"line_start":1180,"line_end":1180,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8741486,"byte_end":8741550,"line_start":1176,"line_end":1176,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8741555,"byte_end":8741558,"line_start":1177,"line_end":1177,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8741563,"byte_end":8741634,"line_start":1178,"line_end":1178,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8741639,"byte_end":8741651,"line_start":1179,"line_end":1179,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3009},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8742005,"byte_end":8742022,"line_start":1189,"line_end":1189,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8741759,"byte_end":8741828,"line_start":1184,"line_end":1184,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8741833,"byte_end":8741836,"line_start":1185,"line_end":1185,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8741841,"byte_end":8741915,"line_start":1186,"line_end":1186,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8741920,"byte_end":8741923,"line_start":1187,"line_end":1187,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: method@Self::set_multicast_loop_v4","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8741928,"byte_end":8741993,"line_start":1188,"line_end":1188,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3010},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8742352,"byte_end":8742373,"line_start":1200,"line_end":1200,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8742099,"byte_end":8742168,"line_start":1193,"line_end":1193,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8742173,"byte_end":8742176,"line_start":1194,"line_end":1194,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8742181,"byte_end":8742255,"line_start":1195,"line_end":1195,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8742260,"byte_end":8742263,"line_start":1196,"line_end":1196,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8742268,"byte_end":8742278,"line_start":1197,"line_end":1197,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8742283,"byte_end":8742286,"line_start":1198,"line_end":1198,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8742291,"byte_end":8742340,"line_start":1199,"line_end":1199,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3011},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8742706,"byte_end":8742722,"line_start":1209,"line_end":1209,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8742464,"byte_end":8742532,"line_start":1204,"line_end":1204,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8742537,"byte_end":8742540,"line_start":1205,"line_end":1205,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8742545,"byte_end":8742618,"line_start":1206,"line_end":1206,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8742623,"byte_end":8742626,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: method@Self::set_multicast_ttl_v4","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8742631,"byte_end":8742694,"line_start":1208,"line_end":1208,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3012},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8743191,"byte_end":8743211,"line_start":1222,"line_end":1222,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8742797,"byte_end":8742865,"line_start":1213,"line_end":1213,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8742870,"byte_end":8742873,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8742878,"byte_end":8742948,"line_start":1215,"line_end":1215,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8742953,"byte_end":8743027,"line_start":1216,"line_end":1216,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8743032,"byte_end":8743094,"line_start":1217,"line_end":1217,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8743099,"byte_end":8743102,"line_start":1218,"line_end":1218,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8743107,"byte_end":8743117,"line_start":1219,"line_end":1219,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8743122,"byte_end":8743125,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8743130,"byte_end":8743179,"line_start":1221,"line_end":1221,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3013},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8743550,"byte_end":8743567,"line_start":1231,"line_end":1231,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8743302,"byte_end":8743373,"line_start":1226,"line_end":1226,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8743378,"byte_end":8743381,"line_start":1227,"line_end":1227,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8743386,"byte_end":8743460,"line_start":1228,"line_end":1228,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8743465,"byte_end":8743468,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: method@Self::set_multicast_loop_v6","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8743473,"byte_end":8743538,"line_start":1230,"line_end":1230,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3014},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8743901,"byte_end":8743922,"line_start":1242,"line_end":1242,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8743644,"byte_end":8743715,"line_start":1235,"line_end":1235,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8743720,"byte_end":8743723,"line_start":1236,"line_end":1236,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8743728,"byte_end":8743804,"line_start":1237,"line_end":1237,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8743809,"byte_end":8743812,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8743817,"byte_end":8743827,"line_start":1239,"line_end":1239,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8743832,"byte_end":8743835,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8743840,"byte_end":8743889,"line_start":1241,"line_end":1241,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3015},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8744519,"byte_end":8744522,"line_start":1265,"line_end":1265,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8744013,"byte_end":8744071,"line_start":1246,"line_end":1246,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8744076,"byte_end":8744079,"line_start":1247,"line_end":1247,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8744084,"byte_end":8744144,"line_start":1248,"line_end":1248,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8744149,"byte_end":8744152,"line_start":1249,"line_end":1249,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8744157,"byte_end":8744194,"line_start":1250,"line_end":1250,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8744199,"byte_end":8744202,"line_start":1251,"line_end":1251,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8744207,"byte_end":8744221,"line_start":1252,"line_end":1252,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8744226,"byte_end":8744229,"line_start":1253,"line_end":1253,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8744234,"byte_end":8744247,"line_start":1254,"line_end":1254,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8744252,"byte_end":8744282,"line_start":1255,"line_end":1255,"column_start":5,"column_end":35}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8744287,"byte_end":8744305,"line_start":1256,"line_end":1256,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8744310,"byte_end":8744313,"line_start":1257,"line_end":1257,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8744318,"byte_end":8744358,"line_start":1258,"line_end":1258,"column_start":5,"column_end":45}},{"value":"/ let sock = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8744363,"byte_end":8744419,"line_start":1259,"line_end":1259,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8744424,"byte_end":8744427,"line_start":1260,"line_end":1260,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", sock.ttl()?);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8744432,"byte_end":8744466,"line_start":1261,"line_end":1261,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8744471,"byte_end":8744483,"line_start":1262,"line_end":1262,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8744488,"byte_end":8744495,"line_start":1263,"line_end":1263,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8744500,"byte_end":8744507,"line_start":1264,"line_end":1264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3016},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8745070,"byte_end":8745077,"line_start":1287,"line_end":1287,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8744584,"byte_end":8744642,"line_start":1269,"line_end":1269,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8744647,"byte_end":8744650,"line_start":1270,"line_end":1270,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8744655,"byte_end":8744731,"line_start":1271,"line_end":1271,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8744736,"byte_end":8744757,"line_start":1272,"line_end":1272,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8744762,"byte_end":8744765,"line_start":1273,"line_end":1273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8744770,"byte_end":8744784,"line_start":1274,"line_end":1274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8744789,"byte_end":8744792,"line_start":1275,"line_end":1275,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8744797,"byte_end":8744810,"line_start":1276,"line_end":1276,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8744815,"byte_end":8744845,"line_start":1277,"line_end":1277,"column_start":5,"column_end":35}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8744850,"byte_end":8744868,"line_start":1278,"line_end":1278,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8744873,"byte_end":8744876,"line_start":1279,"line_end":1279,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8744881,"byte_end":8744921,"line_start":1280,"line_end":1280,"column_start":5,"column_end":45}},{"value":"/ let sock = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8744926,"byte_end":8744982,"line_start":1281,"line_end":1281,"column_start":5,"column_end":61}},{"value":"/ sock.set_ttl(60)?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8744987,"byte_end":8745009,"line_start":1282,"line_end":1282,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8745014,"byte_end":8745017,"line_start":1283,"line_end":1283,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8745022,"byte_end":8745034,"line_start":1284,"line_end":1284,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8745039,"byte_end":8745046,"line_start":1285,"line_end":1285,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8745051,"byte_end":8745058,"line_start":1286,"line_end":1286,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3017},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8745585,"byte_end":8745602,"line_start":1298,"line_end":1298,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8745155,"byte_end":8745213,"line_start":1291,"line_end":1291,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8745218,"byte_end":8745221,"line_start":1292,"line_end":1292,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8745226,"byte_end":8745300,"line_start":1293,"line_end":1293,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8745305,"byte_end":8745378,"line_start":1294,"line_end":1294,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8745383,"byte_end":8745455,"line_start":1295,"line_end":1295,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8745460,"byte_end":8745530,"line_start":1296,"line_end":1296,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8745535,"byte_end":8745573,"line_start":1297,"line_end":1297,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3018},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8746057,"byte_end":8746074,"line_start":1307,"line_end":1307,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8745741,"byte_end":8745801,"line_start":1302,"line_end":1302,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8745806,"byte_end":8745809,"line_start":1303,"line_end":1303,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8745814,"byte_end":8745888,"line_start":1304,"line_end":1304,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8745893,"byte_end":8745966,"line_start":1305,"line_end":1305,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8745971,"byte_end":8746045,"line_start":1306,"line_end":1306,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3019},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8746431,"byte_end":8746449,"line_start":1316,"line_end":1316,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8746207,"byte_end":8746266,"line_start":1311,"line_end":1311,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8746271,"byte_end":8746274,"line_start":1312,"line_end":1312,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8746279,"byte_end":8746349,"line_start":1313,"line_end":1313,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8746354,"byte_end":8746357,"line_start":1314,"line_end":1314,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: method@Self::join_multicast_v4","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8746362,"byte_end":8746419,"line_start":1315,"line_end":1315,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3020},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8746815,"byte_end":8746833,"line_start":1325,"line_end":1325,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8746589,"byte_end":8746650,"line_start":1320,"line_end":1320,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8746655,"byte_end":8746658,"line_start":1321,"line_end":1321,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8746663,"byte_end":8746733,"line_start":1322,"line_end":1322,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8746738,"byte_end":8746741,"line_start":1323,"line_end":1323,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: method@Self::join_multicast_v6","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8746746,"byte_end":8746803,"line_start":1324,"line_end":1324,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3021},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8747470,"byte_end":8747480,"line_start":1348,"line_end":1348,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UdpSocket>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8746967,"byte_end":8747014,"line_start":1329,"line_end":1329,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8747019,"byte_end":8747022,"line_start":1330,"line_end":1330,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8747027,"byte_end":8747041,"line_start":1331,"line_end":1331,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8747046,"byte_end":8747053,"line_start":1332,"line_end":1332,"column_start":5,"column_end":12}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8747058,"byte_end":8747088,"line_start":1333,"line_end":1333,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8747093,"byte_end":8747109,"line_start":1334,"line_end":1334,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8747114,"byte_end":8747117,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8747122,"byte_end":8747140,"line_start":1336,"line_end":1336,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8747145,"byte_end":8747184,"line_start":1337,"line_end":1337,"column_start":5,"column_end":44}},{"value":"/     // Create a socket","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8747189,"byte_end":8747215,"line_start":1338,"line_end":1338,"column_start":5,"column_end":31}},{"value":"/     let socket = UdpSocket::bind(\"0.0.0.0:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8747220,"byte_end":8747280,"line_start":1339,"line_end":1339,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8747285,"byte_end":8747288,"line_start":1340,"line_end":1340,"column_start":5,"column_end":8}},{"value":"/     if let Ok(Some(err)) = socket.take_error() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8747293,"byte_end":8747345,"line_start":1341,"line_end":1341,"column_start":5,"column_end":57}},{"value":"/         println!(\"Got error: {:?}\", err);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8747350,"byte_end":8747395,"line_start":1342,"line_end":1342,"column_start":5,"column_end":50}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8747400,"byte_end":8747409,"line_start":1343,"line_end":1343,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8747414,"byte_end":8747417,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8747422,"byte_end":8747436,"line_start":1345,"line_end":1345,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8747441,"byte_end":8747446,"line_start":1346,"line_end":1346,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8747451,"byte_end":8747458,"line_start":1347,"line_end":1347,"column_start":5,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\mod.rs","byte_start":105589,"byte_end":105595,"line_start":50,"line_end":50,"column_start":10,"column_end":16},"name":"Unpark","qualname":"::park::Park::Unpark","value":"type Unpark: Unpark;","parent":{"krate":0,"index":601},"children":[],"decl_id":null,"docs":" Unpark handle type for the `Park` implementation.\n","sig":null,"attributes":[{"value":"/ Unpark handle type for the `Park` implementation.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\mod.rs","byte_start":105526,"byte_end":105579,"line_start":49,"line_end":49,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":603},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\mod.rs","byte_start":105648,"byte_end":105653,"line_start":53,"line_end":53,"column_start":10,"column_end":15},"name":"Error","qualname":"::park::Park::Error","value":"type Error;","parent":{"krate":0,"index":601},"children":[],"decl_id":null,"docs":" Error returned by `park`\n","sig":null,"attributes":[{"value":"/ Error returned by `park`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\mod.rs","byte_start":105610,"byte_end":105638,"line_start":52,"line_end":52,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":3165},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"process","qualname":"::process","value":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","parent":null,"children":[{"krate":0,"index":3166},{"krate":0,"index":3235},{"krate":0,"index":3242},{"krate":0,"index":3243},{"krate":0,"index":3244},{"krate":0,"index":3245},{"krate":0,"index":3246},{"krate":0,"index":3247},{"krate":0,"index":3248},{"krate":0,"index":3249},{"krate":0,"index":3250},{"krate":0,"index":3251},{"krate":0,"index":3252},{"krate":0,"index":3253},{"krate":0,"index":3254},{"krate":0,"index":3255},{"krate":0,"index":3256},{"krate":0,"index":3257},{"krate":0,"index":3258},{"krate":0,"index":3259},{"krate":0,"index":3260},{"krate":0,"index":3368},{"krate":0,"index":3371},{"krate":0,"index":3261},{"krate":0,"index":3266},{"krate":0,"index":3305},{"krate":0,"index":3373},{"krate":0,"index":3377},{"krate":0,"index":3307},{"krate":0,"index":3310},{"krate":0,"index":3313},{"krate":0,"index":3380},{"krate":0,"index":3387},{"krate":0,"index":3389},{"krate":0,"index":3394},{"krate":0,"index":3319},{"krate":0,"index":3396},{"krate":0,"index":3398},{"krate":0,"index":3400},{"krate":0,"index":3402},{"krate":0,"index":3404},{"krate":0,"index":3406},{"krate":0,"index":3337},{"krate":0,"index":3341},{"krate":0,"index":3343},{"krate":0,"index":3345},{"krate":0,"index":3348},{"krate":0,"index":3351},{"krate":0,"index":3354}],"decl_id":null,"docs":" An implementation of asynchronous process management for Tokio.","sig":null,"attributes":[{"value":"cfg(feature = \"process\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":21850,"byte_end":21877,"line_start":189,"line_end":189,"column_start":13,"column_end":40}},{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":21953,"byte_end":21970,"line_start":191,"line_end":191,"column_start":13,"column_end":30}},{"value":"/ An implementation of asynchronous process management for Tokio.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8750113,"byte_end":8750180,"line_start":1,"line_end":1,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8750181,"byte_end":8750184,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a [`Command`] struct that imitates the interface of the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8750185,"byte_end":8750265,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ [`std::process::Command`] type in the standard library, but provides asynchronous versions of","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8750266,"byte_end":8750363,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/ functions that create processes. These functions (`spawn`, `status`, `output` and their","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8750364,"byte_end":8750455,"line_start":5,"line_end":5,"column_start":1,"column_end":92}},{"value":"/ variants) return \"future aware\" types that interoperate with Tokio. The asynchronous process","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8750456,"byte_end":8750552,"line_start":6,"line_end":6,"column_start":1,"column_end":97}},{"value":"/ support is provided through signal handling on Unix and system APIs on Windows.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8750553,"byte_end":8750636,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8750637,"byte_end":8750640,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`std::process::Command`]: std::process::Command","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8750641,"byte_end":8750693,"line_start":9,"line_end":9,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8750694,"byte_end":8750697,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8750698,"byte_end":8750712,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8750713,"byte_end":8750716,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Here's an example program which will spawn `echo hello world` and then wait","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8750717,"byte_end":8750796,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ for it complete.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8750797,"byte_end":8750817,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8750818,"byte_end":8750821,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8750822,"byte_end":8750835,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8750836,"byte_end":8750868,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8750869,"byte_end":8750872,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8750873,"byte_end":8750891,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8750892,"byte_end":8750955,"line_start":20,"line_end":20,"column_start":1,"column_end":64}},{"value":"/     // The usage is similar as with the standard library's `Command` type","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8750956,"byte_end":8751033,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/     let mut child = Command::new(\"echo\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8751034,"byte_end":8751078,"line_start":22,"line_end":22,"column_start":1,"column_end":45}},{"value":"/         .arg(\"hello\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8751079,"byte_end":8751104,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/         .arg(\"world\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8751105,"byte_end":8751130,"line_start":24,"line_end":24,"column_start":1,"column_end":26}},{"value":"/         .spawn()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8751131,"byte_end":8751151,"line_start":25,"line_end":25,"column_start":1,"column_end":21}},{"value":"/         .expect(\"failed to spawn\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8751152,"byte_end":8751191,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8751192,"byte_end":8751195,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/     // Await until the command completes","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8751196,"byte_end":8751240,"line_start":28,"line_end":28,"column_start":1,"column_end":45}},{"value":"/     let status = child.wait().await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8751241,"byte_end":8751282,"line_start":29,"line_end":29,"column_start":1,"column_end":42}},{"value":"/     println!(\"the command exited with: {}\", status);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8751283,"byte_end":8751339,"line_start":30,"line_end":30,"column_start":1,"column_end":57}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8751340,"byte_end":8751354,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8751355,"byte_end":8751360,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8751361,"byte_end":8751368,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8751369,"byte_end":8751372,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Next, let's take a look at an example where we not only spawn `echo hello","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8751373,"byte_end":8751450,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ world` but we also capture its output.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8751451,"byte_end":8751493,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8751494,"byte_end":8751497,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8751498,"byte_end":8751511,"line_start":38,"line_end":38,"column_start":1,"column_end":14}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8751512,"byte_end":8751544,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8751545,"byte_end":8751548,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8751549,"byte_end":8751567,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8751568,"byte_end":8751631,"line_start":42,"line_end":42,"column_start":1,"column_end":64}},{"value":"/     // Like above, but use `output` which returns a future instead of","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8751632,"byte_end":8751705,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/     // immediately returning the `Child`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8751706,"byte_end":8751751,"line_start":44,"line_end":44,"column_start":1,"column_end":46}},{"value":"/     let output = Command::new(\"echo\").arg(\"hello\").arg(\"world\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8751752,"byte_end":8751819,"line_start":45,"line_end":45,"column_start":1,"column_end":68}},{"value":"/                         .output();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8751820,"byte_end":8751858,"line_start":46,"line_end":46,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8751859,"byte_end":8751862,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/     let output = output.await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8751863,"byte_end":8751898,"line_start":48,"line_end":48,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8751899,"byte_end":8751902,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/     assert!(output.status.success());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8751903,"byte_end":8751944,"line_start":50,"line_end":50,"column_start":1,"column_end":42}},{"value":"/     assert_eq!(output.stdout, b\"hello world\\n\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8751945,"byte_end":8751997,"line_start":51,"line_end":51,"column_start":1,"column_end":53}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8751998,"byte_end":8752012,"line_start":52,"line_end":52,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8752013,"byte_end":8752018,"line_start":53,"line_end":53,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8752019,"byte_end":8752026,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8752027,"byte_end":8752030,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ We can also read input line by line.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8752031,"byte_end":8752071,"line_start":56,"line_end":56,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8752072,"byte_end":8752075,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8752076,"byte_end":8752089,"line_start":58,"line_end":58,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{BufReader, AsyncBufReadExt};","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8752090,"byte_end":8752138,"line_start":59,"line_end":59,"column_start":1,"column_end":49}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8752139,"byte_end":8752171,"line_start":60,"line_end":60,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8752172,"byte_end":8752175,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ use std::process::Stdio;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8752176,"byte_end":8752204,"line_start":62,"line_end":62,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8752205,"byte_end":8752208,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8752209,"byte_end":8752227,"line_start":64,"line_end":64,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8752228,"byte_end":8752291,"line_start":65,"line_end":65,"column_start":1,"column_end":64}},{"value":"/     let mut cmd = Command::new(\"cat\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8752292,"byte_end":8752334,"line_start":66,"line_end":66,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8752335,"byte_end":8752338,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/     // Specify that we want the command's standard output piped back to us.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8752339,"byte_end":8752418,"line_start":68,"line_end":68,"column_start":1,"column_end":80}},{"value":"/     // By default, standard input/output/error will be inherited from the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8752419,"byte_end":8752496,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"/     // current process (for example, this means that standard input will","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8752497,"byte_end":8752573,"line_start":70,"line_end":70,"column_start":1,"column_end":77}},{"value":"/     // come from the keyboard and standard output/error will go directly to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8752574,"byte_end":8752653,"line_start":71,"line_end":71,"column_start":1,"column_end":80}},{"value":"/     // the terminal if this process is invoked from the command line).","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8752654,"byte_end":8752728,"line_start":72,"line_end":72,"column_start":1,"column_end":75}},{"value":"/     cmd.stdout(Stdio::piped());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8752729,"byte_end":8752764,"line_start":73,"line_end":73,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8752765,"byte_end":8752768,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/     let mut child = cmd.spawn()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8752769,"byte_end":8752804,"line_start":75,"line_end":75,"column_start":1,"column_end":36}},{"value":"/         .expect(\"failed to spawn command\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8752805,"byte_end":8752852,"line_start":76,"line_end":76,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8752853,"byte_end":8752856,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/     let stdout = child.stdout.take()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8752857,"byte_end":8752897,"line_start":78,"line_end":78,"column_start":1,"column_end":41}},{"value":"/         .expect(\"child did not have a handle to stdout\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8752898,"byte_end":8752959,"line_start":79,"line_end":79,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8752960,"byte_end":8752963,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     let mut reader = BufReader::new(stdout).lines();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8752964,"byte_end":8753020,"line_start":81,"line_end":81,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8753021,"byte_end":8753024,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     // Ensure the child process is spawned in the runtime so it can","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8753025,"byte_end":8753096,"line_start":83,"line_end":83,"column_start":1,"column_end":72}},{"value":"/     // make progress on its own while we await for any output.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8753097,"byte_end":8753163,"line_start":84,"line_end":84,"column_start":1,"column_end":67}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8753164,"byte_end":8753197,"line_start":85,"line_end":85,"column_start":1,"column_end":34}},{"value":"/         let status = child.wait().await","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8753198,"byte_end":8753241,"line_start":86,"line_end":86,"column_start":1,"column_end":44}},{"value":"/             .expect(\"child process encountered an error\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8753242,"byte_end":8753304,"line_start":87,"line_end":87,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8753305,"byte_end":8753308,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/         println!(\"child status was: {}\", status);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8753309,"byte_end":8753362,"line_start":89,"line_end":89,"column_start":1,"column_end":54}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8753363,"byte_end":8753374,"line_start":90,"line_end":90,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8753375,"byte_end":8753378,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/     while let Some(line) = reader.next_line().await? {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8753379,"byte_end":8753437,"line_start":92,"line_end":92,"column_start":1,"column_end":59}},{"value":"/         println!(\"Line: {}\", line);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8753438,"byte_end":8753477,"line_start":93,"line_end":93,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8753478,"byte_end":8753487,"line_start":94,"line_end":94,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8753488,"byte_end":8753491,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8753492,"byte_end":8753506,"line_start":96,"line_end":96,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8753507,"byte_end":8753512,"line_start":97,"line_end":97,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8753513,"byte_end":8753520,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8753521,"byte_end":8753524,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ With some coordination, we can also pipe the output of one command into","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8753525,"byte_end":8753600,"line_start":100,"line_end":100,"column_start":1,"column_end":76}},{"value":"/ another.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8753601,"byte_end":8753613,"line_start":101,"line_end":101,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8753614,"byte_end":8753617,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8753618,"byte_end":8753631,"line_start":103,"line_end":103,"column_start":1,"column_end":14}},{"value":"/ use tokio::join;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8753632,"byte_end":8753652,"line_start":104,"line_end":104,"column_start":1,"column_end":21}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8753653,"byte_end":8753685,"line_start":105,"line_end":105,"column_start":1,"column_end":33}},{"value":"/ use std::convert::TryInto;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8753686,"byte_end":8753716,"line_start":106,"line_end":106,"column_start":1,"column_end":31}},{"value":"/ use std::process::Stdio;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8753717,"byte_end":8753745,"line_start":107,"line_end":107,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8753746,"byte_end":8753749,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8753750,"byte_end":8753768,"line_start":109,"line_end":109,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8753769,"byte_end":8753832,"line_start":110,"line_end":110,"column_start":1,"column_end":64}},{"value":"/     let mut echo = Command::new(\"echo\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8753833,"byte_end":8753876,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/         .arg(\"hello world!\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8753877,"byte_end":8753909,"line_start":112,"line_end":112,"column_start":1,"column_end":33}},{"value":"/         .stdout(Stdio::piped())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8753910,"byte_end":8753945,"line_start":113,"line_end":113,"column_start":1,"column_end":36}},{"value":"/         .spawn()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8753946,"byte_end":8753966,"line_start":114,"line_end":114,"column_start":1,"column_end":21}},{"value":"/         .expect(\"failed to spawn echo\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8753967,"byte_end":8754011,"line_start":115,"line_end":115,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8754012,"byte_end":8754015,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     let tr_stdin: Stdio = echo","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8754016,"byte_end":8754050,"line_start":117,"line_end":117,"column_start":1,"column_end":35}},{"value":"/         .stdout","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8754051,"byte_end":8754070,"line_start":118,"line_end":118,"column_start":1,"column_end":20}},{"value":"/         .take()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8754071,"byte_end":8754090,"line_start":119,"line_end":119,"column_start":1,"column_end":20}},{"value":"/         .unwrap()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8754091,"byte_end":8754112,"line_start":120,"line_end":120,"column_start":1,"column_end":22}},{"value":"/         .try_into()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8754113,"byte_end":8754136,"line_start":121,"line_end":121,"column_start":1,"column_end":24}},{"value":"/         .expect(\"failed to convert to Stdio\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8754137,"byte_end":8754187,"line_start":122,"line_end":122,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8754188,"byte_end":8754191,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/     let tr = Command::new(\"tr\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8754192,"byte_end":8754227,"line_start":124,"line_end":124,"column_start":1,"column_end":36}},{"value":"/         .arg(\"a-z\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8754228,"byte_end":8754251,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"/         .arg(\"A-Z\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8754252,"byte_end":8754275,"line_start":126,"line_end":126,"column_start":1,"column_end":24}},{"value":"/         .stdin(tr_stdin)","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8754276,"byte_end":8754304,"line_start":127,"line_end":127,"column_start":1,"column_end":29}},{"value":"/         .stdout(Stdio::piped())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8754305,"byte_end":8754340,"line_start":128,"line_end":128,"column_start":1,"column_end":36}},{"value":"/         .spawn()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8754341,"byte_end":8754361,"line_start":129,"line_end":129,"column_start":1,"column_end":21}},{"value":"/         .expect(\"failed to spawn tr\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8754362,"byte_end":8754404,"line_start":130,"line_end":130,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8754405,"byte_end":8754408,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/     let (echo_result, tr_output) = join!(echo.wait(), tr.wait_with_output());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8754409,"byte_end":8754490,"line_start":132,"line_end":132,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8754491,"byte_end":8754494,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/     assert!(echo_result.unwrap().success());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8754495,"byte_end":8754543,"line_start":134,"line_end":134,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8754544,"byte_end":8754547,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/     let tr_output = tr_output.expect(\"failed to await tr\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8754548,"byte_end":8754611,"line_start":136,"line_end":136,"column_start":1,"column_end":64}},{"value":"/     assert!(tr_output.status.success());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8754612,"byte_end":8754656,"line_start":137,"line_end":137,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8754657,"byte_end":8754660,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(tr_output.stdout, b\"HELLO WORLD!\\n\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8754661,"byte_end":8754717,"line_start":139,"line_end":139,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8754718,"byte_end":8754721,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8754722,"byte_end":8754736,"line_start":141,"line_end":141,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8754737,"byte_end":8754742,"line_start":142,"line_end":142,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8754743,"byte_end":8754750,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8754751,"byte_end":8754754,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8754755,"byte_end":8754768,"line_start":145,"line_end":145,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8754769,"byte_end":8754772,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ## Dropping/Cancellation","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8754773,"byte_end":8754801,"line_start":147,"line_end":147,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8754802,"byte_end":8754805,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ Similar to the behavior to the standard library, and unlike the futures","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8754806,"byte_end":8754881,"line_start":149,"line_end":149,"column_start":1,"column_end":76}},{"value":"/ paradigm of dropping-implies-cancellation, a spawned process will, by","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8754882,"byte_end":8754955,"line_start":150,"line_end":150,"column_start":1,"column_end":74}},{"value":"/ default, continue to execute even after the `Child` handle has been dropped.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8754956,"byte_end":8755036,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8755037,"byte_end":8755040,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ The [`Command::kill_on_drop`] method can be used to modify this behavior","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8755041,"byte_end":8755117,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/ and kill the child process if the `Child` wrapper is dropped before it","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8755118,"byte_end":8755192,"line_start":154,"line_end":154,"column_start":1,"column_end":75}},{"value":"/ has exited.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8755193,"byte_end":8755208,"line_start":155,"line_end":155,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8755209,"byte_end":8755212,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ ## Unix Processes","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8755213,"byte_end":8755234,"line_start":157,"line_end":157,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8755235,"byte_end":8755238,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ On Unix platforms processes must be \"reaped\" by their parent process after","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8755239,"byte_end":8755317,"line_start":159,"line_end":159,"column_start":1,"column_end":79}},{"value":"/ they have exited in order to release all OS resources. A child process which","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8755318,"byte_end":8755398,"line_start":160,"line_end":160,"column_start":1,"column_end":81}},{"value":"/ has exited, but has not yet been reaped by its parent is considered a \"zombie\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8755399,"byte_end":8755481,"line_start":161,"line_end":161,"column_start":1,"column_end":83}},{"value":"/ process. Such processes continue to count against limits imposed by the system,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8755482,"byte_end":8755565,"line_start":162,"line_end":162,"column_start":1,"column_end":84}},{"value":"/ and having too many zombie processes present can prevent additional processes","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8755566,"byte_end":8755647,"line_start":163,"line_end":163,"column_start":1,"column_end":82}},{"value":"/ from being spawned.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8755648,"byte_end":8755671,"line_start":164,"line_end":164,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8755672,"byte_end":8755675,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ The tokio runtime will, on a best-effort basis, attempt to reap and clean up","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8755676,"byte_end":8755756,"line_start":166,"line_end":166,"column_start":1,"column_end":81}},{"value":"/ any process which it has spawned. No additional guarantees are made with regards","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8755757,"byte_end":8755841,"line_start":167,"line_end":167,"column_start":1,"column_end":85}},{"value":"/ how quickly or how often this procedure will take place.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8755842,"byte_end":8755902,"line_start":168,"line_end":168,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8755903,"byte_end":8755906,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ It is recommended to avoid dropping a [`Child`] process handle before it has been","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8755907,"byte_end":8755992,"line_start":170,"line_end":170,"column_start":1,"column_end":86}},{"value":"/ fully `await`ed if stricter cleanup guarantees are required.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8755993,"byte_end":8756057,"line_start":171,"line_end":171,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8756058,"byte_end":8756061,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ [`Command`]: crate::process::Command","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8756062,"byte_end":8756102,"line_start":173,"line_end":173,"column_start":1,"column_end":41}},{"value":"/ [`Command::kill_on_drop`]: crate::process::Command::kill_on_drop","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8756103,"byte_end":8756171,"line_start":174,"line_end":174,"column_start":1,"column_end":69}},{"value":"/ [`Child`]: crate::process::Child","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8756172,"byte_end":8756208,"line_start":175,"line_end":175,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3368},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8757337,"byte_end":8757344,"line_start":219,"line_end":219,"column_start":12,"column_end":19},"name":"Command","qualname":"::process::Command","value":"Command {  }","parent":null,"children":[{"krate":0,"index":3369},{"krate":0,"index":3370}],"decl_id":null,"docs":" This structure mimics the API of [`std::process::Command`] found in the standard library, but\n replaces functions that create a process with an asynchronous variant. The main provided\n asynchronous functions are [spawn](Command::spawn), [status](Command::status), and\n [output](Command::output).","sig":null,"attributes":[{"value":"/ This structure mimics the API of [`std::process::Command`] found in the standard library, but","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8756825,"byte_end":8756922,"line_start":209,"line_end":209,"column_start":1,"column_end":98}},{"value":"/ replaces functions that create a process with an asynchronous variant. The main provided","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8756923,"byte_end":8757015,"line_start":210,"line_end":210,"column_start":1,"column_end":93}},{"value":"/ asynchronous functions are [spawn](Command::spawn), [status](Command::status), and","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8757016,"byte_end":8757102,"line_start":211,"line_end":211,"column_start":1,"column_end":87}},{"value":"/ [output](Command::output).","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8757103,"byte_end":8757133,"line_start":212,"line_end":212,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8757134,"byte_end":8757137,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ `Command` uses asynchronous versions of some `std` types (for example [`Child`]).","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8757138,"byte_end":8757223,"line_start":214,"line_end":214,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8757224,"byte_end":8757227,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ [`std::process::Command`]: std::process::Command","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8757228,"byte_end":8757280,"line_start":216,"line_end":216,"column_start":1,"column_end":53}},{"value":"/ [`Child`]: struct@Child","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8757281,"byte_end":8757308,"line_start":217,"line_end":217,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3267},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8758694,"byte_end":8758697,"line_start":261,"line_end":261,"column_start":12,"column_end":15},"name":"new","qualname":"<Command>::new","value":"pub fn new<S: AsRef<OsStr>>(S) -> Command","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Command` for launching the program at\n path `program`, with the following default configuration:","sig":null,"attributes":[{"value":"/ Constructs a new `Command` for launching the program at","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8757585,"byte_end":8757644,"line_start":232,"line_end":232,"column_start":5,"column_end":64}},{"value":"/ path `program`, with the following default configuration:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8757649,"byte_end":8757710,"line_start":233,"line_end":233,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8757715,"byte_end":8757718,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ * No arguments to the program","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8757723,"byte_end":8757756,"line_start":235,"line_end":235,"column_start":5,"column_end":38}},{"value":"/ * Inherit the current process's environment","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8757761,"byte_end":8757808,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/ * Inherit the current process's working directory","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8757813,"byte_end":8757866,"line_start":237,"line_end":237,"column_start":5,"column_end":58}},{"value":"/ * Inherit stdin/stdout/stderr for `spawn` or `status`, but create pipes for `output`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8757871,"byte_end":8757959,"line_start":238,"line_end":238,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8757964,"byte_end":8757967,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ Builder methods are provided to change these defaults and","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8757972,"byte_end":8758033,"line_start":240,"line_end":240,"column_start":5,"column_end":66}},{"value":"/ otherwise configure the process.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8758038,"byte_end":8758074,"line_start":241,"line_end":241,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8758079,"byte_end":8758082,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ If `program` is not an absolute path, the `PATH` will be searched in","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8758087,"byte_end":8758159,"line_start":243,"line_end":243,"column_start":5,"column_end":77}},{"value":"/ an OS-defined way.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8758164,"byte_end":8758186,"line_start":244,"line_end":244,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8758191,"byte_end":8758194,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ The search path to be used may be controlled by setting the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8758199,"byte_end":8758262,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"/ `PATH` environment variable on the Command,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8758267,"byte_end":8758314,"line_start":247,"line_end":247,"column_start":5,"column_end":52}},{"value":"/ but this has some implementation limitations on Windows","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8758319,"byte_end":8758378,"line_start":248,"line_end":248,"column_start":5,"column_end":64}},{"value":"/ (see issue [rust-lang/rust#37519]).","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8758383,"byte_end":8758422,"line_start":249,"line_end":249,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8758427,"byte_end":8758430,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8758435,"byte_end":8758449,"line_start":251,"line_end":251,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8758454,"byte_end":8758457,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8758462,"byte_end":8758478,"line_start":253,"line_end":253,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8758483,"byte_end":8758486,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8758491,"byte_end":8758504,"line_start":255,"line_end":255,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8758509,"byte_end":8758541,"line_start":256,"line_end":256,"column_start":5,"column_end":37}},{"value":"/ let command = Command::new(\"sh\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8758546,"byte_end":8758583,"line_start":257,"line_end":257,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8758588,"byte_end":8758595,"line_start":258,"line_end":258,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8758600,"byte_end":8758603,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ [rust-lang/rust#37519]: https://github.com/rust-lang/rust/issues/37519","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8758608,"byte_end":8758682,"line_start":260,"line_end":260,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3269},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759544,"byte_end":8759547,"line_start":297,"line_end":297,"column_start":12,"column_end":15},"name":"arg","qualname":"<Command>::arg","value":"pub fn arg<S: AsRef<OsStr>>(&mut Self, S) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Adds an argument to pass to the program.","sig":null,"attributes":[{"value":"/ Adds an argument to pass to the program.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8758796,"byte_end":8758840,"line_start":265,"line_end":265,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8758845,"byte_end":8758848,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ Only one argument can be passed per use. So instead of:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8758853,"byte_end":8758912,"line_start":267,"line_end":267,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8758917,"byte_end":8758920,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8758925,"byte_end":8758938,"line_start":269,"line_end":269,"column_start":5,"column_end":18}},{"value":"/ tokio::process::Command::new(\"sh\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8758943,"byte_end":8758981,"line_start":270,"line_end":270,"column_start":5,"column_end":43}},{"value":"/   .arg(\"-C /path/to/repo\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8758986,"byte_end":8759017,"line_start":271,"line_end":271,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759022,"byte_end":8759029,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759034,"byte_end":8759037,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ usage would be:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759042,"byte_end":8759061,"line_start":274,"line_end":274,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759066,"byte_end":8759069,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759074,"byte_end":8759087,"line_start":276,"line_end":276,"column_start":5,"column_end":18}},{"value":"/ tokio::process::Command::new(\"sh\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759092,"byte_end":8759130,"line_start":277,"line_end":277,"column_start":5,"column_end":43}},{"value":"/   .arg(\"-C\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759135,"byte_end":8759151,"line_start":278,"line_end":278,"column_start":5,"column_end":21}},{"value":"/   .arg(\"/path/to/repo\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759156,"byte_end":8759184,"line_start":279,"line_end":279,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759189,"byte_end":8759196,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759201,"byte_end":8759204,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ To pass multiple arguments see [`args`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759209,"byte_end":8759253,"line_start":282,"line_end":282,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759258,"byte_end":8759261,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ [`args`]: method@Self::args","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759266,"byte_end":8759297,"line_start":284,"line_end":284,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759302,"byte_end":8759305,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759310,"byte_end":8759324,"line_start":286,"line_end":286,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759329,"byte_end":8759332,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759337,"byte_end":8759353,"line_start":288,"line_end":288,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759358,"byte_end":8759361,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759366,"byte_end":8759379,"line_start":290,"line_end":290,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759384,"byte_end":8759416,"line_start":291,"line_end":291,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759421,"byte_end":8759424,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759429,"byte_end":8759465,"line_start":293,"line_end":293,"column_start":5,"column_end":41}},{"value":"/         .arg(\"-l\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759470,"byte_end":8759492,"line_start":294,"line_end":294,"column_start":5,"column_end":27}},{"value":"/         .arg(\"-a\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759497,"byte_end":8759520,"line_start":295,"line_end":295,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759525,"byte_end":8759532,"line_start":296,"line_end":296,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3271},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8760031,"byte_end":8760035,"line_start":318,"line_end":318,"column_start":12,"column_end":16},"name":"args","qualname":"<Command>::args","value":"pub fn args<I, S>(&mut Self, I) -> &mut Command where I: IntoIterator<Item =\nS>, S: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Adds multiple arguments to pass to the program.","sig":null,"attributes":[{"value":"/ Adds multiple arguments to pass to the program.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759653,"byte_end":8759704,"line_start":302,"line_end":302,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759709,"byte_end":8759712,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ To pass a single argument see [`arg`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759717,"byte_end":8759759,"line_start":304,"line_end":304,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759764,"byte_end":8759767,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ [`arg`]: method@Self::arg","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759772,"byte_end":8759801,"line_start":306,"line_end":306,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759806,"byte_end":8759809,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759814,"byte_end":8759828,"line_start":308,"line_end":308,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759833,"byte_end":8759836,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759841,"byte_end":8759857,"line_start":310,"line_end":310,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759862,"byte_end":8759865,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759870,"byte_end":8759883,"line_start":312,"line_end":312,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759888,"byte_end":8759920,"line_start":313,"line_end":313,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759925,"byte_end":8759928,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759933,"byte_end":8759969,"line_start":315,"line_end":315,"column_start":5,"column_end":41}},{"value":"/         .args(&[\"-l\", \"-a\"]);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8759974,"byte_end":8760007,"line_start":316,"line_end":316,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8760012,"byte_end":8760019,"line_start":317,"line_end":317,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3274},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8760651,"byte_end":8760654,"line_start":342,"line_end":342,"column_start":12,"column_end":15},"name":"env","qualname":"<Command>::env","value":"pub fn env<K, V>(&mut Self, K, V) -> &mut Command where K: AsRef<OsStr>,\nV: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Inserts or updates an environment variable mapping.","sig":null,"attributes":[{"value":"/ Inserts or updates an environment variable mapping.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8760207,"byte_end":8760262,"line_start":327,"line_end":327,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8760267,"byte_end":8760270,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ Note that environment variable names are case-insensitive (but case-preserving) on Windows,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8760275,"byte_end":8760370,"line_start":329,"line_end":329,"column_start":5,"column_end":100}},{"value":"/ and case-sensitive on all other platforms.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8760375,"byte_end":8760421,"line_start":330,"line_end":330,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8760426,"byte_end":8760429,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8760434,"byte_end":8760448,"line_start":332,"line_end":332,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8760453,"byte_end":8760456,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8760461,"byte_end":8760477,"line_start":334,"line_end":334,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8760482,"byte_end":8760485,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8760490,"byte_end":8760503,"line_start":336,"line_end":336,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8760508,"byte_end":8760540,"line_start":337,"line_end":337,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8760545,"byte_end":8760548,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8760553,"byte_end":8760589,"line_start":339,"line_end":339,"column_start":5,"column_end":41}},{"value":"/         .env(\"PATH\", \"/bin\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8760594,"byte_end":8760627,"line_start":340,"line_end":340,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8760632,"byte_end":8760639,"line_start":341,"line_end":341,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3277},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8761528,"byte_end":8761532,"line_start":374,"line_end":374,"column_start":12,"column_end":16},"name":"envs","qualname":"<Command>::envs","value":"pub fn envs<I, K, V>(&mut Self, I) -> &mut Command where I: IntoIterator<Item\n= (K, V)>, K: AsRef<OsStr>, V: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Adds or updates multiple environment variable mappings.","sig":null,"attributes":[{"value":"/ Adds or updates multiple environment variable mappings.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8760826,"byte_end":8760885,"line_start":351,"line_end":351,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8760890,"byte_end":8760893,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8760898,"byte_end":8760912,"line_start":353,"line_end":353,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8760917,"byte_end":8760920,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8760925,"byte_end":8760941,"line_start":355,"line_end":355,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8760946,"byte_end":8760949,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8760954,"byte_end":8760967,"line_start":357,"line_end":357,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8760972,"byte_end":8761004,"line_start":358,"line_end":358,"column_start":5,"column_end":37}},{"value":"/ use std::process::{Stdio};","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8761009,"byte_end":8761039,"line_start":359,"line_end":359,"column_start":5,"column_end":35}},{"value":"/ use std::env;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8761044,"byte_end":8761061,"line_start":360,"line_end":360,"column_start":5,"column_end":22}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8761066,"byte_end":8761100,"line_start":361,"line_end":361,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8761105,"byte_end":8761108,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ let filtered_env : HashMap<String, String> =","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8761113,"byte_end":8761161,"line_start":363,"line_end":363,"column_start":5,"column_end":53}},{"value":"/     env::vars().filter(|&(ref k, _)|","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8761166,"byte_end":8761206,"line_start":364,"line_end":364,"column_start":5,"column_end":45}},{"value":"/         k == \"TERM\" || k == \"TZ\" || k == \"LANG\" || k == \"PATH\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8761211,"byte_end":8761277,"line_start":365,"line_end":365,"column_start":5,"column_end":71}},{"value":"/     ).collect();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8761282,"byte_end":8761302,"line_start":366,"line_end":366,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8761307,"byte_end":8761310,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"printenv\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8761315,"byte_end":8761357,"line_start":368,"line_end":368,"column_start":5,"column_end":47}},{"value":"/         .stdin(Stdio::null())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8761362,"byte_end":8761395,"line_start":369,"line_end":369,"column_start":5,"column_end":38}},{"value":"/         .stdout(Stdio::inherit())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8761400,"byte_end":8761437,"line_start":370,"line_end":370,"column_start":5,"column_end":42}},{"value":"/         .env_clear()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8761442,"byte_end":8761466,"line_start":371,"line_end":371,"column_start":5,"column_end":29}},{"value":"/         .envs(&filtered_env);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8761471,"byte_end":8761504,"line_start":372,"line_end":372,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8761509,"byte_end":8761516,"line_start":373,"line_end":373,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3281},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8762010,"byte_end":8762020,"line_start":396,"line_end":396,"column_start":12,"column_end":22},"name":"env_remove","qualname":"<Command>::env_remove","value":"pub fn env_remove<K: AsRef<OsStr>>(&mut Self, K) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Removes an environment variable mapping.","sig":null,"attributes":[{"value":"/ Removes an environment variable mapping.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8761737,"byte_end":8761781,"line_start":384,"line_end":384,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8761786,"byte_end":8761789,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8761794,"byte_end":8761808,"line_start":386,"line_end":386,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8761813,"byte_end":8761816,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8761821,"byte_end":8761837,"line_start":388,"line_end":388,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8761842,"byte_end":8761845,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8761850,"byte_end":8761863,"line_start":390,"line_end":390,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8761868,"byte_end":8761900,"line_start":391,"line_end":391,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8761905,"byte_end":8761908,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8761913,"byte_end":8761949,"line_start":393,"line_end":393,"column_start":5,"column_end":41}},{"value":"/         .env_remove(\"PATH\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8761954,"byte_end":8761986,"line_start":394,"line_end":394,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8761991,"byte_end":8761998,"line_start":395,"line_end":395,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3283},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8762415,"byte_end":8762424,"line_start":413,"line_end":413,"column_start":12,"column_end":21},"name":"env_clear","qualname":"<Command>::env_clear","value":"pub fn env_clear(&mut Self) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Clears the entire environment map for the child process.","sig":null,"attributes":[{"value":"/ Clears the entire environment map for the child process.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8762133,"byte_end":8762193,"line_start":401,"line_end":401,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8762198,"byte_end":8762201,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8762206,"byte_end":8762220,"line_start":403,"line_end":403,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8762225,"byte_end":8762228,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8762233,"byte_end":8762249,"line_start":405,"line_end":405,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8762254,"byte_end":8762257,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8762262,"byte_end":8762275,"line_start":407,"line_end":407,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8762280,"byte_end":8762312,"line_start":408,"line_end":408,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8762317,"byte_end":8762320,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8762325,"byte_end":8762361,"line_start":410,"line_end":410,"column_start":5,"column_end":41}},{"value":"/         .env_clear();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8762366,"byte_end":8762391,"line_start":411,"line_end":411,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8762396,"byte_end":8762403,"line_start":412,"line_end":412,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3284},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8763269,"byte_end":8763280,"line_start":440,"line_end":440,"column_start":12,"column_end":23},"name":"current_dir","qualname":"<Command>::current_dir","value":"pub fn current_dir<P: AsRef<Path>>(&mut Self, P) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets the working directory for the child process.","sig":null,"attributes":[{"value":"/ Sets the working directory for the child process.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8762508,"byte_end":8762561,"line_start":418,"line_end":418,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8762566,"byte_end":8762569,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8762574,"byte_end":8762606,"line_start":420,"line_end":420,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8762611,"byte_end":8762614,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ If the program path is relative (e.g., `\"./script.sh\"`), it's ambiguous","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8762619,"byte_end":8762694,"line_start":422,"line_end":422,"column_start":5,"column_end":80}},{"value":"/ whether it should be interpreted relative to the parent's working","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8762699,"byte_end":8762768,"line_start":423,"line_end":423,"column_start":5,"column_end":74}},{"value":"/ directory or relative to `current_dir`. The behavior in this case is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8762773,"byte_end":8762845,"line_start":424,"line_end":424,"column_start":5,"column_end":77}},{"value":"/ platform specific and unstable, and it's recommended to use","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8762850,"byte_end":8762913,"line_start":425,"line_end":425,"column_start":5,"column_end":68}},{"value":"/ [`canonicalize`] to get an absolute program path instead.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8762918,"byte_end":8762979,"line_start":426,"line_end":426,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8762984,"byte_end":8762987,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ [`canonicalize`]: crate::fs::canonicalize()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8762992,"byte_end":8763039,"line_start":428,"line_end":428,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8763044,"byte_end":8763047,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8763052,"byte_end":8763066,"line_start":430,"line_end":430,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8763071,"byte_end":8763074,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8763079,"byte_end":8763095,"line_start":432,"line_end":432,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8763100,"byte_end":8763103,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8763108,"byte_end":8763121,"line_start":434,"line_end":434,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8763126,"byte_end":8763158,"line_start":435,"line_end":435,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8763163,"byte_end":8763166,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8763171,"byte_end":8763207,"line_start":437,"line_end":437,"column_start":5,"column_end":41}},{"value":"/         .current_dir(\"/bin\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8763212,"byte_end":8763245,"line_start":438,"line_end":438,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8763250,"byte_end":8763257,"line_start":439,"line_end":439,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3286},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8763975,"byte_end":8763980,"line_start":464,"line_end":464,"column_start":12,"column_end":17},"name":"stdin","qualname":"<Command>::stdin","value":"pub fn stdin<T: Into<Stdio>>(&mut Self, T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets configuration for the child process's standard input (stdin) handle.","sig":null,"attributes":[{"value":"/ Sets configuration for the child process's standard input (stdin) handle.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8763393,"byte_end":8763470,"line_start":445,"line_end":445,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8763475,"byte_end":8763478,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ Defaults to [`inherit`] when used with `spawn` or `status`, and","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8763483,"byte_end":8763550,"line_start":447,"line_end":447,"column_start":5,"column_end":72}},{"value":"/ defaults to [`piped`] when used with `output`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8763555,"byte_end":8763605,"line_start":448,"line_end":448,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8763610,"byte_end":8763613,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ [`inherit`]: std::process::Stdio::inherit","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8763618,"byte_end":8763663,"line_start":450,"line_end":450,"column_start":5,"column_end":50}},{"value":"/ [`piped`]: std::process::Stdio::piped","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8763668,"byte_end":8763709,"line_start":451,"line_end":451,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8763714,"byte_end":8763717,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8763722,"byte_end":8763736,"line_start":453,"line_end":453,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8763741,"byte_end":8763744,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8763749,"byte_end":8763765,"line_start":455,"line_end":455,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8763770,"byte_end":8763773,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8763778,"byte_end":8763791,"line_start":457,"line_end":457,"column_start":5,"column_end":18}},{"value":"/ use std::process::{Stdio};","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8763796,"byte_end":8763826,"line_start":458,"line_end":458,"column_start":5,"column_end":35}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8763831,"byte_end":8763863,"line_start":459,"line_end":459,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8763868,"byte_end":8763871,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8763876,"byte_end":8763912,"line_start":461,"line_end":461,"column_start":5,"column_end":41}},{"value":"/         .stdin(Stdio::null());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8763917,"byte_end":8763951,"line_start":462,"line_end":462,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8763956,"byte_end":8763963,"line_start":463,"line_end":463,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3288},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8764671,"byte_end":8764677,"line_start":488,"line_end":488,"column_start":12,"column_end":18},"name":"stdout","qualname":"<Command>::stdout","value":"pub fn stdout<T: Into<Stdio>>(&mut Self, T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets configuration for the child process's standard output (stdout) handle.","sig":null,"attributes":[{"value":"/ Sets configuration for the child process's standard output (stdout) handle.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8764087,"byte_end":8764166,"line_start":469,"line_end":469,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8764171,"byte_end":8764174,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ Defaults to [`inherit`] when used with `spawn` or `status`, and","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8764179,"byte_end":8764246,"line_start":471,"line_end":471,"column_start":5,"column_end":72}},{"value":"/ defaults to [`piped`] when used with `output`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8764251,"byte_end":8764301,"line_start":472,"line_end":472,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8764306,"byte_end":8764309,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ [`inherit`]: std::process::Stdio::inherit","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8764314,"byte_end":8764359,"line_start":474,"line_end":474,"column_start":5,"column_end":50}},{"value":"/ [`piped`]: std::process::Stdio::piped","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8764364,"byte_end":8764405,"line_start":475,"line_end":475,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8764410,"byte_end":8764413,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8764418,"byte_end":8764432,"line_start":477,"line_end":477,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8764437,"byte_end":8764440,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8764445,"byte_end":8764461,"line_start":479,"line_end":479,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8764466,"byte_end":8764469,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8764474,"byte_end":8764487,"line_start":481,"line_end":481,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8764492,"byte_end":8764525,"line_start":482,"line_end":482,"column_start":5,"column_end":38}},{"value":"/ use std::process::Stdio;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8764530,"byte_end":8764558,"line_start":483,"line_end":483,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8764563,"byte_end":8764566,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8764571,"byte_end":8764607,"line_start":485,"line_end":485,"column_start":5,"column_end":41}},{"value":"/         .stdout(Stdio::null());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8764612,"byte_end":8764647,"line_start":486,"line_end":486,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8764652,"byte_end":8764659,"line_start":487,"line_end":487,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3290},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8765370,"byte_end":8765376,"line_start":512,"line_end":512,"column_start":12,"column_end":18},"name":"stderr","qualname":"<Command>::stderr","value":"pub fn stderr<T: Into<Stdio>>(&mut Self, T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets configuration for the child process's standard error (stderr) handle.","sig":null,"attributes":[{"value":"/ Sets configuration for the child process's standard error (stderr) handle.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8764785,"byte_end":8764863,"line_start":493,"line_end":493,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8764868,"byte_end":8764871,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ Defaults to [`inherit`] when used with `spawn` or `status`, and","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8764876,"byte_end":8764943,"line_start":495,"line_end":495,"column_start":5,"column_end":72}},{"value":"/ defaults to [`piped`] when used with `output`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8764948,"byte_end":8764998,"line_start":496,"line_end":496,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8765003,"byte_end":8765006,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ [`inherit`]: std::process::Stdio::inherit","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8765011,"byte_end":8765056,"line_start":498,"line_end":498,"column_start":5,"column_end":50}},{"value":"/ [`piped`]: std::process::Stdio::piped","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8765061,"byte_end":8765102,"line_start":499,"line_end":499,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8765107,"byte_end":8765110,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8765115,"byte_end":8765129,"line_start":501,"line_end":501,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8765134,"byte_end":8765137,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8765142,"byte_end":8765158,"line_start":503,"line_end":503,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8765163,"byte_end":8765166,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8765171,"byte_end":8765184,"line_start":505,"line_end":505,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8765189,"byte_end":8765222,"line_start":506,"line_end":506,"column_start":5,"column_end":38}},{"value":"/ use std::process::{Stdio};","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8765227,"byte_end":8765257,"line_start":507,"line_end":507,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8765262,"byte_end":8765265,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8765270,"byte_end":8765306,"line_start":509,"line_end":509,"column_start":5,"column_end":41}},{"value":"/         .stderr(Stdio::null());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8765311,"byte_end":8765346,"line_start":510,"line_end":510,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8765351,"byte_end":8765358,"line_start":511,"line_end":511,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3292},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8767010,"byte_end":8767022,"line_start":543,"line_end":543,"column_start":12,"column_end":24},"name":"kill_on_drop","qualname":"<Command>::kill_on_drop","value":"pub fn kill_on_drop(&mut Self, bool) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Controls whether a `kill` operation should be invoked on a spawned child\n process when its corresponding `Child` handle is dropped.","sig":null,"attributes":[{"value":"/ Controls whether a `kill` operation should be invoked on a spawned child","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8765484,"byte_end":8765560,"line_start":517,"line_end":517,"column_start":5,"column_end":81}},{"value":"/ process when its corresponding `Child` handle is dropped.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8765565,"byte_end":8765626,"line_start":518,"line_end":518,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8765631,"byte_end":8765634,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ By default, this value is assumed to be `false`, meaning the next spawned","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8765639,"byte_end":8765716,"line_start":520,"line_end":520,"column_start":5,"column_end":82}},{"value":"/ process will not be killed on drop, similar to the behavior of the standard","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8765721,"byte_end":8765800,"line_start":521,"line_end":521,"column_start":5,"column_end":84}},{"value":"/ library.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8765805,"byte_end":8765817,"line_start":522,"line_end":522,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8765822,"byte_end":8765825,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8765830,"byte_end":8765843,"line_start":524,"line_end":524,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8765848,"byte_end":8765851,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ On Unix platforms processes must be \"reaped\" by their parent process after","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8765856,"byte_end":8765934,"line_start":526,"line_end":526,"column_start":5,"column_end":83}},{"value":"/ they have exited in order to release all OS resources. A child process which","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8765939,"byte_end":8766019,"line_start":527,"line_end":527,"column_start":5,"column_end":85}},{"value":"/ has exited, but has not yet been reaped by its parent is considered a \"zombie\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8766024,"byte_end":8766106,"line_start":528,"line_end":528,"column_start":5,"column_end":87}},{"value":"/ process. Such processes continue to count against limits imposed by the system,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8766111,"byte_end":8766194,"line_start":529,"line_end":529,"column_start":5,"column_end":88}},{"value":"/ and having too many zombie processes present can prevent additional processes","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8766199,"byte_end":8766280,"line_start":530,"line_end":530,"column_start":5,"column_end":86}},{"value":"/ from being spawned.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8766285,"byte_end":8766308,"line_start":531,"line_end":531,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8766313,"byte_end":8766316,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ Although issuing a `kill` signal to the child process is a synchronous","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8766321,"byte_end":8766395,"line_start":533,"line_end":533,"column_start":5,"column_end":79}},{"value":"/ operation, the resulting zombie process cannot be `.await`ed inside of the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8766400,"byte_end":8766478,"line_start":534,"line_end":534,"column_start":5,"column_end":83}},{"value":"/ destructor to avoid blocking other tasks. The tokio runtime will, on a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8766483,"byte_end":8766557,"line_start":535,"line_end":535,"column_start":5,"column_end":79}},{"value":"/ best-effort basis, attempt to reap and clean up such processes in the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8766562,"byte_end":8766635,"line_start":536,"line_end":536,"column_start":5,"column_end":78}},{"value":"/ background, but makes no additional guarantees are made with regards","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8766640,"byte_end":8766712,"line_start":537,"line_end":537,"column_start":5,"column_end":77}},{"value":"/ how quickly or how often this procedure will take place.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8766717,"byte_end":8766777,"line_start":538,"line_end":538,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8766782,"byte_end":8766785,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ If stronger guarantees are required, it is recommended to avoid dropping","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8766790,"byte_end":8766866,"line_start":540,"line_end":540,"column_start":5,"column_end":81}},{"value":"/ a [`Child`] handle where possible, and instead utilize `child.wait().await`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8766871,"byte_end":8766950,"line_start":541,"line_end":541,"column_start":5,"column_end":84}},{"value":"/ or `child.kill().await` where possible.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8766955,"byte_end":8766998,"line_start":542,"line_end":542,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3293},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8767421,"byte_end":8767435,"line_start":554,"line_end":554,"column_start":12,"column_end":26},"name":"creation_flags","qualname":"<Command>::creation_flags","value":"pub fn creation_flags(&mut Self, u32) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets the [process creation flags][1] to be passed to `CreateProcess`.","sig":null,"attributes":[{"value":"/ Sets the [process creation flags][1] to be passed to `CreateProcess`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8767138,"byte_end":8767211,"line_start":548,"line_end":548,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8767216,"byte_end":8767219,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ These will always be ORed with `CREATE_UNICODE_ENVIRONMENT`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8767224,"byte_end":8767288,"line_start":550,"line_end":550,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8767293,"byte_end":8767296,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ [1]: https://msdn.microsoft.com/en-us/library/windows/desktop/ms684863(v=vs.85).aspx","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8767301,"byte_end":8767389,"line_start":552,"line_end":552,"column_start":5,"column_end":93}},{"value":"cfg(windows)","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8767394,"byte_end":8767409,"line_start":553,"line_end":553,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3294},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8772662,"byte_end":8772667,"line_start":681,"line_end":681,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Command>::spawn","value":"pub fn spawn(&mut Self) -> io::Result<Child>","parent":null,"children":[],"decl_id":null,"docs":" Executes the command as a child process, returning a handle to it.","sig":null,"attributes":[{"value":"/ Executes the command as a child process, returning a handle to it.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8769814,"byte_end":8769884,"line_start":614,"line_end":614,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8769889,"byte_end":8769892,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ By default, stdin, stdout and stderr are inherited from the parent.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8769897,"byte_end":8769968,"line_start":616,"line_end":616,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8769973,"byte_end":8769976,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ This method will spawn the child process synchronously and return a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8769981,"byte_end":8770052,"line_start":618,"line_end":618,"column_start":5,"column_end":76}},{"value":"/ handle to a future-aware child process. The `Child` returned implements","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8770057,"byte_end":8770132,"line_start":619,"line_end":619,"column_start":5,"column_end":80}},{"value":"/ `Future` itself to acquire the `ExitStatus` of the child, and otherwise","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8770137,"byte_end":8770212,"line_start":620,"line_end":620,"column_start":5,"column_end":80}},{"value":"/ the `Child` has methods to acquire handles to the stdin, stdout, and","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8770217,"byte_end":8770289,"line_start":621,"line_end":621,"column_start":5,"column_end":77}},{"value":"/ stderr streams.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8770294,"byte_end":8770313,"line_start":622,"line_end":622,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8770318,"byte_end":8770321,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ All I/O this child does will be associated with the current default","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8770326,"byte_end":8770397,"line_start":624,"line_end":624,"column_start":5,"column_end":76}},{"value":"/ event loop.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8770402,"byte_end":8770417,"line_start":625,"line_end":625,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8770422,"byte_end":8770425,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8770430,"byte_end":8770444,"line_start":627,"line_end":627,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8770449,"byte_end":8770452,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8770457,"byte_end":8770473,"line_start":629,"line_end":629,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8770478,"byte_end":8770481,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8770486,"byte_end":8770499,"line_start":631,"line_end":631,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8770504,"byte_end":8770536,"line_start":632,"line_end":632,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8770541,"byte_end":8770544,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ async fn run_ls() -> std::process::ExitStatus {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8770549,"byte_end":8770600,"line_start":634,"line_end":634,"column_start":5,"column_end":56}},{"value":"/     Command::new(\"ls\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8770605,"byte_end":8770631,"line_start":635,"line_end":635,"column_start":5,"column_end":31}},{"value":"/         .spawn()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8770636,"byte_end":8770656,"line_start":636,"line_end":636,"column_start":5,"column_end":25}},{"value":"/         .expect(\"ls command failed to start\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8770661,"byte_end":8770710,"line_start":637,"line_end":637,"column_start":5,"column_end":54}},{"value":"/         .wait()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8770715,"byte_end":8770734,"line_start":638,"line_end":638,"column_start":5,"column_end":24}},{"value":"/         .await","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8770739,"byte_end":8770757,"line_start":639,"line_end":639,"column_start":5,"column_end":23}},{"value":"/         .expect(\"ls command failed to run\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8770762,"byte_end":8770809,"line_start":640,"line_end":640,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8770814,"byte_end":8770819,"line_start":641,"line_end":641,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8770824,"byte_end":8770831,"line_start":642,"line_end":642,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8770836,"byte_end":8770839,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8770844,"byte_end":8770857,"line_start":644,"line_end":644,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8770862,"byte_end":8770865,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ ## Dropping/Cancellation","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8770870,"byte_end":8770898,"line_start":646,"line_end":646,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8770903,"byte_end":8770906,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ Similar to the behavior to the standard library, and unlike the futures","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8770911,"byte_end":8770986,"line_start":648,"line_end":648,"column_start":5,"column_end":80}},{"value":"/ paradigm of dropping-implies-cancellation, a spawned process will, by","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8770991,"byte_end":8771064,"line_start":649,"line_end":649,"column_start":5,"column_end":78}},{"value":"/ default, continue to execute even after the `Child` handle has been dropped.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8771069,"byte_end":8771149,"line_start":650,"line_end":650,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8771154,"byte_end":8771157,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ The [`Command::kill_on_drop`] method can be used to modify this behavior","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8771162,"byte_end":8771238,"line_start":652,"line_end":652,"column_start":5,"column_end":81}},{"value":"/ and kill the child process if the `Child` wrapper is dropped before it","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8771243,"byte_end":8771317,"line_start":653,"line_end":653,"column_start":5,"column_end":79}},{"value":"/ has exited.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8771322,"byte_end":8771337,"line_start":654,"line_end":654,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8771342,"byte_end":8771345,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ ## Unix Processes","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8771350,"byte_end":8771371,"line_start":656,"line_end":656,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8771376,"byte_end":8771379,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ On Unix platforms processes must be \"reaped\" by their parent process after","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8771384,"byte_end":8771462,"line_start":658,"line_end":658,"column_start":5,"column_end":83}},{"value":"/ they have exited in order to release all OS resources. A child process which","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8771467,"byte_end":8771547,"line_start":659,"line_end":659,"column_start":5,"column_end":85}},{"value":"/ has exited, but has not yet been reaped by its parent is considered a \"zombie\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8771552,"byte_end":8771634,"line_start":660,"line_end":660,"column_start":5,"column_end":87}},{"value":"/ process. Such processes continue to count against limits imposed by the system,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8771639,"byte_end":8771722,"line_start":661,"line_end":661,"column_start":5,"column_end":88}},{"value":"/ and having too many zombie processes present can prevent additional processes","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8771727,"byte_end":8771808,"line_start":662,"line_end":662,"column_start":5,"column_end":86}},{"value":"/ from being spawned.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8771813,"byte_end":8771836,"line_start":663,"line_end":663,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8771841,"byte_end":8771844,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ The tokio runtime will, on a best-effort basis, attempt to reap and clean up","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8771849,"byte_end":8771929,"line_start":665,"line_end":665,"column_start":5,"column_end":85}},{"value":"/ any process which it has spawned. No additional guarantees are made with regards","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8771934,"byte_end":8772018,"line_start":666,"line_end":666,"column_start":5,"column_end":89}},{"value":"/ how quickly or how often this procedure will take place.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8772023,"byte_end":8772083,"line_start":667,"line_end":667,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8772088,"byte_end":8772091,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ It is recommended to avoid dropping a [`Child`] process handle before it has been","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8772096,"byte_end":8772181,"line_start":669,"line_end":669,"column_start":5,"column_end":90}},{"value":"/ fully `await`ed if stricter cleanup guarantees are required.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8772186,"byte_end":8772250,"line_start":670,"line_end":670,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8772255,"byte_end":8772258,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ [`Command`]: crate::process::Command","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8772263,"byte_end":8772303,"line_start":672,"line_end":672,"column_start":5,"column_end":45}},{"value":"/ [`Command::kill_on_drop`]: crate::process::Command::kill_on_drop","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8772308,"byte_end":8772376,"line_start":673,"line_end":673,"column_start":5,"column_end":73}},{"value":"/ [`Child`]: crate::process::Child","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8772381,"byte_end":8772417,"line_start":674,"line_end":674,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8772422,"byte_end":8772425,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8772430,"byte_end":8772442,"line_start":676,"line_end":676,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8772447,"byte_end":8772450,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ On Unix platforms this method will fail with `std::io::ErrorKind::WouldBlock`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8772455,"byte_end":8772536,"line_start":678,"line_end":678,"column_start":5,"column_end":86}},{"value":"/ if the system process limit is reached (which includes other applications","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8772541,"byte_end":8772618,"line_start":679,"line_end":679,"column_start":5,"column_end":82}},{"value":"/ running on the system).","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8772623,"byte_end":8772650,"line_start":680,"line_end":680,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3299},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8774527,"byte_end":8774533,"line_start":731,"line_end":731,"column_start":12,"column_end":18},"name":"status","qualname":"<Command>::status","value":"pub fn status(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Executes the command as a child process, waiting for it to finish and\n collecting its exit status.","sig":null,"attributes":[{"value":"/ Executes the command as a child process, waiting for it to finish and","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8773183,"byte_end":8773256,"line_start":693,"line_end":693,"column_start":5,"column_end":78}},{"value":"/ collecting its exit status.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8773261,"byte_end":8773292,"line_start":694,"line_end":694,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8773297,"byte_end":8773300,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ By default, stdin, stdout and stderr are inherited from the parent.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8773305,"byte_end":8773376,"line_start":696,"line_end":696,"column_start":5,"column_end":76}},{"value":"/ If any input/output handles are set to a pipe then they will be immediately","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8773381,"byte_end":8773460,"line_start":697,"line_end":697,"column_start":5,"column_end":84}},{"value":"/ closed after the child is spawned.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8773465,"byte_end":8773503,"line_start":698,"line_end":698,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8773508,"byte_end":8773511,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ All I/O this child does will be associated with the current default","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8773516,"byte_end":8773587,"line_start":700,"line_end":700,"column_start":5,"column_end":76}},{"value":"/ event loop.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8773592,"byte_end":8773607,"line_start":701,"line_end":701,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8773612,"byte_end":8773615,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ The destructor of the future returned by this function will kill","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8773620,"byte_end":8773688,"line_start":703,"line_end":703,"column_start":5,"column_end":73}},{"value":"/ the child if [`kill_on_drop`] is set to true.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8773693,"byte_end":8773742,"line_start":704,"line_end":704,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8773747,"byte_end":8773750,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ [`kill_on_drop`]: fn@Self::kill_on_drop","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8773755,"byte_end":8773798,"line_start":706,"line_end":706,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8773803,"byte_end":8773806,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8773811,"byte_end":8773823,"line_start":708,"line_end":708,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8773828,"byte_end":8773831,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ This future will return an error if the child process cannot be spawned","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8773836,"byte_end":8773911,"line_start":710,"line_end":710,"column_start":5,"column_end":80}},{"value":"/ or if there is an error while awaiting its status.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8773916,"byte_end":8773970,"line_start":711,"line_end":711,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8773975,"byte_end":8773978,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ On Unix platforms this method will fail with `std::io::ErrorKind::WouldBlock`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8773983,"byte_end":8774064,"line_start":713,"line_end":713,"column_start":5,"column_end":86}},{"value":"/ if the system process limit is reached (which includes other applications","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8774069,"byte_end":8774146,"line_start":714,"line_end":714,"column_start":5,"column_end":82}},{"value":"/ running on the system).","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8774151,"byte_end":8774178,"line_start":715,"line_end":715,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8774183,"byte_end":8774186,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8774191,"byte_end":8774205,"line_start":717,"line_end":717,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8774210,"byte_end":8774213,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8774218,"byte_end":8774234,"line_start":719,"line_end":719,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8774239,"byte_end":8774242,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8774247,"byte_end":8774260,"line_start":721,"line_end":721,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8774265,"byte_end":8774297,"line_start":722,"line_end":722,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8774302,"byte_end":8774305,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ async fn run_ls() -> std::process::ExitStatus {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8774310,"byte_end":8774361,"line_start":724,"line_end":724,"column_start":5,"column_end":56}},{"value":"/     Command::new(\"ls\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8774366,"byte_end":8774392,"line_start":725,"line_end":725,"column_start":5,"column_end":31}},{"value":"/         .status()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8774397,"byte_end":8774418,"line_start":726,"line_end":726,"column_start":5,"column_end":26}},{"value":"/         .await","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8774423,"byte_end":8774441,"line_start":727,"line_end":727,"column_start":5,"column_end":23}},{"value":"/         .expect(\"ls command failed to run\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8774446,"byte_end":8774493,"line_start":728,"line_end":728,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8774498,"byte_end":8774503,"line_start":729,"line_end":729,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8774508,"byte_end":8774515,"line_start":730,"line_end":730,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3302},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8776876,"byte_end":8776882,"line_start":794,"line_end":794,"column_start":12,"column_end":18},"name":"output","qualname":"<Command>::output","value":"pub fn output(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Executes the command as a child process, waiting for it to finish and\n collecting all of its output.","sig":null,"attributes":[{"value":"/ Executes the command as a child process, waiting for it to finish and","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8775015,"byte_end":8775088,"line_start":748,"line_end":748,"column_start":5,"column_end":78}},{"value":"/ collecting all of its output.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8775093,"byte_end":8775126,"line_start":749,"line_end":749,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8775131,"byte_end":8775134,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ > **Note**: this method, unlike the standard library, will","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8775139,"byte_end":8775201,"line_start":751,"line_end":751,"column_start":5,"column_end":67}},{"value":"/ > unconditionally configure the stdout/stderr handles to be pipes, even","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8775206,"byte_end":8775281,"line_start":752,"line_end":752,"column_start":5,"column_end":80}},{"value":"/ > if they have been previously configured. If this is not desired then","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8775286,"byte_end":8775360,"line_start":753,"line_end":753,"column_start":5,"column_end":79}},{"value":"/ > the `spawn` method should be used in combination with the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8775365,"byte_end":8775428,"line_start":754,"line_end":754,"column_start":5,"column_end":68}},{"value":"/ > `wait_with_output` method on child.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8775433,"byte_end":8775474,"line_start":755,"line_end":755,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8775479,"byte_end":8775482,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ This method will return a future representing the collection of the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8775487,"byte_end":8775558,"line_start":757,"line_end":757,"column_start":5,"column_end":76}},{"value":"/ child process's stdout/stderr. It will resolve to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8775563,"byte_end":8775616,"line_start":758,"line_end":758,"column_start":5,"column_end":58}},{"value":"/ the `Output` type in the standard library, containing `stdout` and","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8775621,"byte_end":8775691,"line_start":759,"line_end":759,"column_start":5,"column_end":75}},{"value":"/ `stderr` as `Vec<u8>` along with an `ExitStatus` representing how the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8775696,"byte_end":8775769,"line_start":760,"line_end":760,"column_start":5,"column_end":78}},{"value":"/ process exited.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8775774,"byte_end":8775793,"line_start":761,"line_end":761,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8775798,"byte_end":8775801,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ All I/O this child does will be associated with the current default","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8775806,"byte_end":8775877,"line_start":763,"line_end":763,"column_start":5,"column_end":76}},{"value":"/ event loop.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8775882,"byte_end":8775897,"line_start":764,"line_end":764,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8775902,"byte_end":8775905,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ The destructor of the future returned by this function will kill","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8775910,"byte_end":8775978,"line_start":766,"line_end":766,"column_start":5,"column_end":73}},{"value":"/ the child if [`kill_on_drop`] is set to true.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8775983,"byte_end":8776032,"line_start":767,"line_end":767,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8776037,"byte_end":8776040,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ [`kill_on_drop`]: fn@Self::kill_on_drop","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8776045,"byte_end":8776088,"line_start":769,"line_end":769,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8776093,"byte_end":8776096,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8776101,"byte_end":8776113,"line_start":771,"line_end":771,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8776118,"byte_end":8776121,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ This future will return an error if the child process cannot be spawned","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8776126,"byte_end":8776201,"line_start":773,"line_end":773,"column_start":5,"column_end":80}},{"value":"/ or if there is an error while awaiting its status.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8776206,"byte_end":8776260,"line_start":774,"line_end":774,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8776265,"byte_end":8776268,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ On Unix platforms this method will fail with `std::io::ErrorKind::WouldBlock`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8776273,"byte_end":8776354,"line_start":776,"line_end":776,"column_start":5,"column_end":86}},{"value":"/ if the system process limit is reached (which includes other applications","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8776359,"byte_end":8776436,"line_start":777,"line_end":777,"column_start":5,"column_end":82}},{"value":"/ running on the system).","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8776441,"byte_end":8776468,"line_start":778,"line_end":778,"column_start":5,"column_end":32}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8776473,"byte_end":8776487,"line_start":779,"line_end":779,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8776492,"byte_end":8776495,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8776500,"byte_end":8776516,"line_start":781,"line_end":781,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8776521,"byte_end":8776524,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8776529,"byte_end":8776542,"line_start":783,"line_end":783,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8776547,"byte_end":8776579,"line_start":784,"line_end":784,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8776584,"byte_end":8776587,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ async fn run_ls() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8776592,"byte_end":8776615,"line_start":786,"line_end":786,"column_start":5,"column_end":28}},{"value":"/     let output: std::process::Output = Command::new(\"ls\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8776620,"byte_end":8776681,"line_start":787,"line_end":787,"column_start":5,"column_end":66}},{"value":"/         .output()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8776686,"byte_end":8776707,"line_start":788,"line_end":788,"column_start":5,"column_end":26}},{"value":"/         .await","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8776712,"byte_end":8776730,"line_start":789,"line_end":789,"column_start":5,"column_end":23}},{"value":"/         .expect(\"ls command failed to run\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8776735,"byte_end":8776783,"line_start":790,"line_end":790,"column_start":5,"column_end":53}},{"value":"/     println!(\"stderr of ls: {:?}\", output.stderr);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8776788,"byte_end":8776842,"line_start":791,"line_end":791,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8776847,"byte_end":8776852,"line_start":792,"line_end":792,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8776857,"byte_end":8776864,"line_start":793,"line_end":793,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3389},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8779209,"byte_end":8779214,"line_start":884,"line_end":884,"column_start":12,"column_end":17},"name":"Child","qualname":"::process::Child","value":"Child { stdin, stdout, stderr }","parent":null,"children":[{"krate":0,"index":3390},{"krate":0,"index":3391},{"krate":0,"index":3392},{"krate":0,"index":3393}],"decl_id":null,"docs":" Representation of a child process spawned onto an event loop.","sig":null,"attributes":[{"value":"/ Representation of a child process spawned onto an event loop.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8778696,"byte_end":8778761,"line_start":873,"line_end":873,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8778762,"byte_end":8778765,"line_start":874,"line_end":874,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8778766,"byte_end":8778779,"line_start":875,"line_end":875,"column_start":1,"column_end":14}},{"value":"/ Similar to the behavior to the standard library, and unlike the futures","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8778780,"byte_end":8778855,"line_start":876,"line_end":876,"column_start":1,"column_end":76}},{"value":"/ paradigm of dropping-implies-cancellation, a spawned process will, by","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8778856,"byte_end":8778929,"line_start":877,"line_end":877,"column_start":1,"column_end":74}},{"value":"/ default, continue to execute even after the `Child` handle has been dropped.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8778930,"byte_end":8779010,"line_start":878,"line_end":878,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8779011,"byte_end":8779014,"line_start":879,"line_end":879,"column_start":1,"column_end":4}},{"value":"/ The `Command::kill_on_drop` method can be used to modify this behavior","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8779015,"byte_end":8779089,"line_start":880,"line_end":880,"column_start":1,"column_end":75}},{"value":"/ and kill the child process if the `Child` wrapper is dropped before it","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8779090,"byte_end":8779164,"line_start":881,"line_end":881,"column_start":1,"column_end":75}},{"value":"/ has exited.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8779165,"byte_end":8779180,"line_start":882,"line_end":882,"column_start":1,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":3391},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8779689,"byte_end":8779694,"line_start":896,"line_end":896,"column_start":9,"column_end":14},"name":"stdin","qualname":"::process::Child::stdin","value":"std::option::Option<process::ChildStdin>","parent":{"krate":0,"index":3389},"children":[],"decl_id":null,"docs":" The handle for writing to the child's standard input (stdin), if it has\n been captured. To avoid partially moving the `child` and thus blocking\n yourself from calling functions on `child` while using `stdin`, you might\n find it helpful to do:","sig":null,"attributes":[{"value":"/ The handle for writing to the child's standard input (stdin), if it has","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8779245,"byte_end":8779320,"line_start":887,"line_end":887,"column_start":5,"column_end":80}},{"value":"/ been captured. To avoid partially moving the `child` and thus blocking","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8779325,"byte_end":8779399,"line_start":888,"line_end":888,"column_start":5,"column_end":79}},{"value":"/ yourself from calling functions on `child` while using `stdin`, you might","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8779404,"byte_end":8779481,"line_start":889,"line_end":889,"column_start":5,"column_end":82}},{"value":"/ find it helpful to do:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8779486,"byte_end":8779512,"line_start":890,"line_end":890,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8779517,"byte_end":8779520,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8779525,"byte_end":8779538,"line_start":892,"line_end":892,"column_start":5,"column_end":18}},{"value":"/ # let mut child = tokio::process::Command::new(\"echo\").spawn().unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8779543,"byte_end":8779619,"line_start":893,"line_end":893,"column_start":5,"column_end":81}},{"value":"/ let stdin = child.stdin.take().unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8779624,"byte_end":8779668,"line_start":894,"line_end":894,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8779673,"byte_end":8779680,"line_start":895,"line_end":895,"column_start":5,"column_end":12}}]},{"kind":"Field","id":{"krate":0,"index":3392},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8780179,"byte_end":8780185,"line_start":908,"line_end":908,"column_start":9,"column_end":15},"name":"stdout","qualname":"::process::Child::stdout","value":"std::option::Option<process::ChildStdout>","parent":{"krate":0,"index":3389},"children":[],"decl_id":null,"docs":" The handle for reading from the child's standard output (stdout), if it\n has been captured. You might find it helpful to do","sig":null,"attributes":[{"value":"/ The handle for reading from the child's standard output (stdout), if it","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8779721,"byte_end":8779796,"line_start":898,"line_end":898,"column_start":5,"column_end":80}},{"value":"/ has been captured. You might find it helpful to do","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8779801,"byte_end":8779855,"line_start":899,"line_end":899,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8779860,"byte_end":8779863,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8779868,"byte_end":8779881,"line_start":901,"line_end":901,"column_start":5,"column_end":18}},{"value":"/ # let mut child = tokio::process::Command::new(\"echo\").spawn().unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8779886,"byte_end":8779962,"line_start":902,"line_end":902,"column_start":5,"column_end":81}},{"value":"/ let stdout = child.stdout.take().unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8779967,"byte_end":8780013,"line_start":903,"line_end":903,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8780018,"byte_end":8780025,"line_start":904,"line_end":904,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8780030,"byte_end":8780033,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ to avoid partially moving the `child` and thus blocking yourself from calling","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8780038,"byte_end":8780119,"line_start":906,"line_end":906,"column_start":5,"column_end":86}},{"value":"/ functions on `child` while using `stdout`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8780124,"byte_end":8780170,"line_start":907,"line_end":907,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":3393},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8780670,"byte_end":8780676,"line_start":920,"line_end":920,"column_start":9,"column_end":15},"name":"stderr","qualname":"::process::Child::stderr","value":"std::option::Option<process::ChildStderr>","parent":{"krate":0,"index":3389},"children":[],"decl_id":null,"docs":" The handle for reading from the child's standard error (stderr), if it\n has been captured. You might find it helpful to do","sig":null,"attributes":[{"value":"/ The handle for reading from the child's standard error (stderr), if it","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8780213,"byte_end":8780287,"line_start":910,"line_end":910,"column_start":5,"column_end":79}},{"value":"/ has been captured. You might find it helpful to do","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8780292,"byte_end":8780346,"line_start":911,"line_end":911,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8780351,"byte_end":8780354,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8780359,"byte_end":8780372,"line_start":913,"line_end":913,"column_start":5,"column_end":18}},{"value":"/ # let mut child = tokio::process::Command::new(\"echo\").spawn().unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8780377,"byte_end":8780453,"line_start":914,"line_end":914,"column_start":5,"column_end":81}},{"value":"/ let stderr = child.stderr.take().unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8780458,"byte_end":8780504,"line_start":915,"line_end":915,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8780509,"byte_end":8780516,"line_start":916,"line_end":916,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8780521,"byte_end":8780524,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ to avoid partially moving the `child` and thus blocking yourself from calling","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8780529,"byte_end":8780610,"line_start":918,"line_end":918,"column_start":5,"column_end":86}},{"value":"/ functions on `child` while using `stderr`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8780615,"byte_end":8780661,"line_start":919,"line_end":919,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3320},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8781068,"byte_end":8781070,"line_start":930,"line_end":930,"column_start":12,"column_end":14},"name":"id","qualname":"<Child>::id","value":"pub fn id(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the OS-assigned process identifier associated with this child\n while it is still running.","sig":null,"attributes":[{"value":"/ Returns the OS-assigned process identifier associated with this child","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8780719,"byte_end":8780792,"line_start":924,"line_end":924,"column_start":5,"column_end":78}},{"value":"/ while it is still running.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8780797,"byte_end":8780827,"line_start":925,"line_end":925,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8780832,"byte_end":8780835,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ Once the child has been polled to completion this will return `None`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8780840,"byte_end":8780913,"line_start":927,"line_end":927,"column_start":5,"column_end":78}},{"value":"/ This is done to avoid confusion on platforms like Unix where the OS","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8780918,"byte_end":8780989,"line_start":928,"line_end":928,"column_start":5,"column_end":76}},{"value":"/ identifier could be reused once the process has completed.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8780994,"byte_end":8781056,"line_start":929,"line_end":929,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3321},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8781679,"byte_end":8781689,"line_start":944,"line_end":944,"column_start":12,"column_end":22},"name":"start_kill","qualname":"<Child>::start_kill","value":"pub fn start_kill(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to force the child to exit, but does not wait for the request\n to take effect.","sig":null,"attributes":[{"value":"/ Attempts to force the child to exit, but does not wait for the request","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8781249,"byte_end":8781323,"line_start":937,"line_end":937,"column_start":5,"column_end":79}},{"value":"/ to take effect.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8781328,"byte_end":8781347,"line_start":938,"line_end":938,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8781352,"byte_end":8781355,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ On Unix platforms, this is the equivalent to sending a SIGKILL. Note","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8781360,"byte_end":8781432,"line_start":940,"line_end":940,"column_start":5,"column_end":77}},{"value":"/ that on Unix platforms it is possible for a zombie process to remain","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8781437,"byte_end":8781509,"line_start":941,"line_end":941,"column_start":5,"column_end":77}},{"value":"/ after a kill is sent; to avoid this, the caller should ensure that either","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8781514,"byte_end":8781591,"line_start":942,"line_end":942,"column_start":5,"column_end":82}},{"value":"/ `child.wait().await` or `child.try_wait()` is invoked successfully.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8781596,"byte_end":8781667,"line_start":943,"line_end":943,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3322},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8783014,"byte_end":8783018,"line_start":979,"line_end":979,"column_start":18,"column_end":22},"name":"kill","qualname":"<Child>::kill","value":"pub async fn kill<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Forces the child to exit.","sig":null,"attributes":[{"value":"/ Forces the child to exit.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8782010,"byte_end":8782039,"line_start":954,"line_end":954,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8782044,"byte_end":8782047,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to sending a SIGKILL on unix platforms.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8782052,"byte_end":8782114,"line_start":956,"line_end":956,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8782119,"byte_end":8782122,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ If the child has to be killed remotely, it is possible to do it using","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8782127,"byte_end":8782200,"line_start":958,"line_end":958,"column_start":5,"column_end":78}},{"value":"/ a combination of the select! macro and a oneshot channel. In the following","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8782205,"byte_end":8782283,"line_start":959,"line_end":959,"column_start":5,"column_end":83}},{"value":"/ example, the child will run until completion unless a message is sent on","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8782288,"byte_end":8782364,"line_start":960,"line_end":960,"column_start":5,"column_end":81}},{"value":"/ the oneshot channel. If that happens, the child is killed immediately","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8782369,"byte_end":8782442,"line_start":961,"line_end":961,"column_start":5,"column_end":78}},{"value":"/ using the `.kill()` method.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8782447,"byte_end":8782478,"line_start":962,"line_end":962,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8782483,"byte_end":8782486,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8782491,"byte_end":8782504,"line_start":964,"line_end":964,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8782509,"byte_end":8782541,"line_start":965,"line_end":965,"column_start":5,"column_end":37}},{"value":"/ use tokio::sync::oneshot::channel;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8782546,"byte_end":8782584,"line_start":966,"line_end":966,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8782589,"byte_end":8782592,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8782597,"byte_end":8782615,"line_start":968,"line_end":968,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8782620,"byte_end":8782641,"line_start":969,"line_end":969,"column_start":5,"column_end":26}},{"value":"/     let (send, recv) = channel::<()>();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8782646,"byte_end":8782689,"line_start":970,"line_end":970,"column_start":5,"column_end":48}},{"value":"/     let mut child = Command::new(\"sleep\").arg(\"1\").spawn().unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8782694,"byte_end":8782766,"line_start":971,"line_end":971,"column_start":5,"column_end":77}},{"value":"/     tokio::spawn(async move { send.send(()) });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8782771,"byte_end":8782822,"line_start":972,"line_end":972,"column_start":5,"column_end":56}},{"value":"/     tokio::select! {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8782827,"byte_end":8782851,"line_start":973,"line_end":973,"column_start":5,"column_end":29}},{"value":"/         _ = child.wait() => {}","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8782856,"byte_end":8782890,"line_start":974,"line_end":974,"column_start":5,"column_end":39}},{"value":"/         _ = recv => child.kill().await.expect(\"kill failed\"),","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8782895,"byte_end":8782960,"line_start":975,"line_end":975,"column_start":5,"column_end":70}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8782965,"byte_end":8782974,"line_start":976,"line_end":976,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8782979,"byte_end":8782984,"line_start":977,"line_end":977,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8782989,"byte_end":8782996,"line_start":978,"line_end":978,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3325},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8784430,"byte_end":8784434,"line_start":1018,"line_end":1018,"column_start":18,"column_end":22},"name":"wait","qualname":"<Child>::wait","value":"pub async fn wait<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the child to exit completely, returning the status that it\n exited with. This function will continue to have the same return value\n after it has been called at least once.","sig":null,"attributes":[{"value":"/ Waits for the child to exit completely, returning the status that it","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8783132,"byte_end":8783204,"line_start":985,"line_end":985,"column_start":5,"column_end":77}},{"value":"/ exited with. This function will continue to have the same return value","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8783209,"byte_end":8783283,"line_start":986,"line_end":986,"column_start":5,"column_end":79}},{"value":"/ after it has been called at least once.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8783288,"byte_end":8783331,"line_start":987,"line_end":987,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8783336,"byte_end":8783339,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ The stdin handle to the child process, if any, will be closed","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8783344,"byte_end":8783409,"line_start":989,"line_end":989,"column_start":5,"column_end":70}},{"value":"/ before waiting. This helps avoid deadlock: it ensures that the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8783414,"byte_end":8783480,"line_start":990,"line_end":990,"column_start":5,"column_end":71}},{"value":"/ child does not block waiting for input from the parent, while","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8783485,"byte_end":8783550,"line_start":991,"line_end":991,"column_start":5,"column_end":70}},{"value":"/ the parent waits for the child to exit.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8783555,"byte_end":8783598,"line_start":992,"line_end":992,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8783603,"byte_end":8783606,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ If the caller wishes to explicitly control when the child's stdin","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8783611,"byte_end":8783680,"line_start":994,"line_end":994,"column_start":5,"column_end":74}},{"value":"/ handle is closed, they may `.take()` it before calling `.wait()`:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8783685,"byte_end":8783754,"line_start":995,"line_end":995,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8783759,"byte_end":8783762,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8783767,"byte_end":8783780,"line_start":997,"line_end":997,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8783785,"byte_end":8783818,"line_start":998,"line_end":998,"column_start":5,"column_end":38}},{"value":"/ use tokio::process::Command;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8783823,"byte_end":8783855,"line_start":999,"line_end":999,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8783860,"byte_end":8783863,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8783868,"byte_end":8783886,"line_start":1001,"line_end":1001,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8783891,"byte_end":8783912,"line_start":1002,"line_end":1002,"column_start":5,"column_end":26}},{"value":"/     let mut child = Command::new(\"cat\").spawn().unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8783917,"byte_end":8783978,"line_start":1003,"line_end":1003,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8783983,"byte_end":8783986,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/     let mut stdin = child.stdin.take().unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8783991,"byte_end":8784043,"line_start":1005,"line_end":1005,"column_start":5,"column_end":57}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8784048,"byte_end":8784081,"line_start":1006,"line_end":1006,"column_start":5,"column_end":38}},{"value":"/         // do something with stdin here...","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8784086,"byte_end":8784132,"line_start":1007,"line_end":1007,"column_start":5,"column_end":51}},{"value":"/         stdin.write_all(b\"hello world\\n\").await.unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8784137,"byte_end":8784198,"line_start":1008,"line_end":1008,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8784203,"byte_end":8784206,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/         // then drop when finished","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8784211,"byte_end":8784249,"line_start":1010,"line_end":1010,"column_start":5,"column_end":43}},{"value":"/         drop(stdin);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8784254,"byte_end":8784278,"line_start":1011,"line_end":1011,"column_start":5,"column_end":29}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8784283,"byte_end":8784294,"line_start":1012,"line_end":1012,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8784299,"byte_end":8784302,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/     // wait for the process to complete","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8784307,"byte_end":8784350,"line_start":1014,"line_end":1014,"column_start":5,"column_end":48}},{"value":"/     let _ = child.wait().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8784355,"byte_end":8784390,"line_start":1015,"line_end":1015,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8784395,"byte_end":8784400,"line_start":1016,"line_end":1016,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8784405,"byte_end":8784412,"line_start":1017,"line_end":1017,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3328},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8785782,"byte_end":8785790,"line_start":1052,"line_end":1052,"column_start":12,"column_end":20},"name":"try_wait","qualname":"<Child>::try_wait","value":"pub fn try_wait(&mut Self) -> io::Result<Option<ExitStatus>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to collect the exit status of the child if it has already\n exited.","sig":null,"attributes":[{"value":"/ Attempts to collect the exit status of the child if it has already","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8784973,"byte_end":8785043,"line_start":1037,"line_end":1037,"column_start":5,"column_end":75}},{"value":"/ exited.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8785048,"byte_end":8785059,"line_start":1038,"line_end":1038,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8785064,"byte_end":8785067,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ This function will not block the calling thread and will only","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8785072,"byte_end":8785137,"line_start":1040,"line_end":1040,"column_start":5,"column_end":70}},{"value":"/ check to see if the child process has exited or not. If the child has","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8785142,"byte_end":8785215,"line_start":1041,"line_end":1041,"column_start":5,"column_end":78}},{"value":"/ exited then on Unix the process ID is reaped. This function is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8785220,"byte_end":8785286,"line_start":1042,"line_end":1042,"column_start":5,"column_end":71}},{"value":"/ guaranteed to repeatedly return a successful exit status so long as the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8785291,"byte_end":8785366,"line_start":1043,"line_end":1043,"column_start":5,"column_end":80}},{"value":"/ child has already exited.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8785371,"byte_end":8785400,"line_start":1044,"line_end":1044,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8785405,"byte_end":8785408,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ If the child has exited, then `Ok(Some(status))` is returned. If the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8785413,"byte_end":8785485,"line_start":1046,"line_end":1046,"column_start":5,"column_end":77}},{"value":"/ exit status is not available at this time then `Ok(None)` is returned.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8785490,"byte_end":8785564,"line_start":1047,"line_end":1047,"column_start":5,"column_end":79}},{"value":"/ If an error occurs, then that error is returned.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8785569,"byte_end":8785621,"line_start":1048,"line_end":1048,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8785626,"byte_end":8785629,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ Note that unlike `wait`, this function will not attempt to drop stdin,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8785634,"byte_end":8785708,"line_start":1050,"line_end":1050,"column_start":5,"column_end":79}},{"value":"/ nor will it wake the current task if the child exits.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8785713,"byte_end":8785770,"line_start":1051,"line_end":1051,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3329},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8787250,"byte_end":8787266,"line_start":1085,"line_end":1085,"column_start":18,"column_end":34},"name":"wait_with_output","qualname":"<Child>::wait_with_output","value":"pub async fn wait_with_output(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that will resolve to an `Output`, containing the exit\n status, stdout, and stderr of the child process.","sig":null,"attributes":[{"value":"/ Returns a future that will resolve to an `Output`, containing the exit","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8786320,"byte_end":8786394,"line_start":1069,"line_end":1069,"column_start":5,"column_end":79}},{"value":"/ status, stdout, and stderr of the child process.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8786399,"byte_end":8786451,"line_start":1070,"line_end":1070,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8786456,"byte_end":8786459,"line_start":1071,"line_end":1071,"column_start":5,"column_end":8}},{"value":"/ The returned future will simultaneously waits for the child to exit and","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8786464,"byte_end":8786539,"line_start":1072,"line_end":1072,"column_start":5,"column_end":80}},{"value":"/ collect all remaining output on the stdout/stderr handles, returning an","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8786544,"byte_end":8786619,"line_start":1073,"line_end":1073,"column_start":5,"column_end":80}},{"value":"/ `Output` instance.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8786624,"byte_end":8786646,"line_start":1074,"line_end":1074,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8786651,"byte_end":8786654,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}},{"value":"/ The stdin handle to the child process, if any, will be closed before","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8786659,"byte_end":8786731,"line_start":1076,"line_end":1076,"column_start":5,"column_end":77}},{"value":"/ waiting. This helps avoid deadlock: it ensures that the child does not","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8786736,"byte_end":8786810,"line_start":1077,"line_end":1077,"column_start":5,"column_end":79}},{"value":"/ block waiting for input from the parent, while the parent waits for the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8786815,"byte_end":8786890,"line_start":1078,"line_end":1078,"column_start":5,"column_end":80}},{"value":"/ child to exit.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8786895,"byte_end":8786913,"line_start":1079,"line_end":1079,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8786918,"byte_end":8786921,"line_start":1080,"line_end":1080,"column_start":5,"column_end":8}},{"value":"/ By default, stdin, stdout and stderr are inherited from the parent. In","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8786926,"byte_end":8787000,"line_start":1081,"line_end":1081,"column_start":5,"column_end":79}},{"value":"/ order to capture the output into this `Output` it is necessary to create","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8787005,"byte_end":8787081,"line_start":1082,"line_end":1082,"column_start":5,"column_end":81}},{"value":"/ new pipes between parent and child. Use `stdout(Stdio::piped())` or","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8787086,"byte_end":8787157,"line_start":1083,"line_end":1083,"column_start":5,"column_end":76}},{"value":"/ `stderr(Stdio::piped())`, respectively, when creating a `Command`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8787162,"byte_end":8787232,"line_start":1084,"line_end":1084,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":3396},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8788151,"byte_end":8788161,"line_start":1114,"line_end":1114,"column_start":12,"column_end":22},"name":"ChildStdin","qualname":"::process::ChildStdin","value":"ChildStdin {  }","parent":null,"children":[{"krate":0,"index":3397}],"decl_id":null,"docs":" The standard input stream for spawned children.","sig":null,"attributes":[{"value":"/ The standard input stream for spawned children.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8787937,"byte_end":8787988,"line_start":1109,"line_end":1109,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8787989,"byte_end":8787992,"line_start":1110,"line_end":1110,"column_start":1,"column_end":4}},{"value":"/ This type implements the `AsyncWrite` trait to pass data to the stdin handle of","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8787993,"byte_end":8788076,"line_start":1111,"line_end":1111,"column_start":1,"column_end":84}},{"value":"/ handle of a child process asynchronously.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8788077,"byte_end":8788122,"line_start":1112,"line_end":1112,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":3400},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8788402,"byte_end":8788413,"line_start":1123,"line_end":1123,"column_start":12,"column_end":23},"name":"ChildStdout","qualname":"::process::ChildStdout","value":"ChildStdout {  }","parent":null,"children":[{"krate":0,"index":3401}],"decl_id":null,"docs":" The standard output stream for spawned children.","sig":null,"attributes":[{"value":"/ The standard output stream for spawned children.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8788195,"byte_end":8788247,"line_start":1118,"line_end":1118,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8788248,"byte_end":8788251,"line_start":1119,"line_end":1119,"column_start":1,"column_end":4}},{"value":"/ This type implements the `AsyncRead` trait to read data from the stdout","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8788252,"byte_end":8788327,"line_start":1120,"line_end":1120,"column_start":1,"column_end":76}},{"value":"/ handle of a child process asynchronously.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8788328,"byte_end":8788373,"line_start":1121,"line_end":1121,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":3404},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8788654,"byte_end":8788665,"line_start":1132,"line_end":1132,"column_start":12,"column_end":23},"name":"ChildStderr","qualname":"::process::ChildStderr","value":"ChildStderr {  }","parent":null,"children":[{"krate":0,"index":3405}],"decl_id":null,"docs":" The standard error stream for spawned children.","sig":null,"attributes":[{"value":"/ The standard error stream for spawned children.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8788448,"byte_end":8788499,"line_start":1127,"line_end":1127,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8788500,"byte_end":8788503,"line_start":1128,"line_end":1128,"column_start":1,"column_end":4}},{"value":"/ This type implements the `AsyncRead` trait to read data from the stderr","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8788504,"byte_end":8788579,"line_start":1129,"line_end":1129,"column_start":1,"column_end":76}},{"value":"/ handle of a child process asynchronously.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8788580,"byte_end":8788625,"line_start":1130,"line_end":1130,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":3410},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"runtime","qualname":"::runtime","value":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","parent":null,"children":[{"krate":0,"index":3411},{"krate":0,"index":3426},{"krate":0,"index":4031},{"krate":0,"index":4149},{"krate":0,"index":4150},{"krate":0,"index":4266},{"krate":0,"index":4267},{"krate":0,"index":4268},{"krate":0,"index":4326},{"krate":0,"index":4327},{"krate":0,"index":4337},{"krate":0,"index":4362},{"krate":0,"index":4363},{"krate":0,"index":4395},{"krate":0,"index":4396},{"krate":0,"index":4397},{"krate":0,"index":4398},{"krate":0,"index":4401},{"krate":0,"index":4507},{"krate":0,"index":4559},{"krate":0,"index":4560},{"krate":0,"index":4660},{"krate":0,"index":4879},{"krate":0,"index":4895},{"krate":0,"index":4896},{"krate":0,"index":4897},{"krate":0,"index":4912},{"krate":0,"index":4916},{"krate":0,"index":4918},{"krate":0,"index":4925},{"krate":0,"index":4898},{"krate":0,"index":4899}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23385,"byte_end":23407,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"/ The Tokio runtime.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8801335,"byte_end":8801357,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8801358,"byte_end":8801361,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Unlike other Rust programs, asynchronous applications require runtime","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8801362,"byte_end":8801435,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ support. In particular, the following runtime services are necessary:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8801436,"byte_end":8801509,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8801510,"byte_end":8801513,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * An **I/O event loop**, called the driver, which drives I/O resources and","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8801514,"byte_end":8801592,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/   dispatches I/O events to tasks that depend on them.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8801593,"byte_end":8801650,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/ * A **scheduler** to execute [tasks] that use these I/O resources.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8801651,"byte_end":8801721,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/ * A **timer** for scheduling work to run after a set period of time.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8801722,"byte_end":8801794,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8801795,"byte_end":8801798,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Tokio's [`Runtime`] bundles all of these services as a single type, allowing","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8801799,"byte_end":8801879,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ them to be started, shut down, and configured together. However, often it is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8801880,"byte_end":8801960,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ not required to configure a [`Runtime`] manually, and a user may just use the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8801961,"byte_end":8802042,"line_start":13,"line_end":13,"column_start":1,"column_end":82}},{"value":"/ [`tokio::main`] attribute macro, which creates a [`Runtime`] under the hood.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8802043,"byte_end":8802123,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8802124,"byte_end":8802127,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8802128,"byte_end":8802139,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8802140,"byte_end":8802143,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ When no fine tuning is required, the [`tokio::main`] attribute macro can be","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8802144,"byte_end":8802223,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ used.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8802224,"byte_end":8802233,"line_start":19,"line_end":19,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8802234,"byte_end":8802237,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8802238,"byte_end":8802251,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8802252,"byte_end":8802284,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8802285,"byte_end":8802334,"line_start":23,"line_end":23,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8802335,"byte_end":8802338,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8802339,"byte_end":8802357,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8802358,"byte_end":8802421,"line_start":26,"line_end":26,"column_start":1,"column_end":64}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8802422,"byte_end":8802488,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8802489,"byte_end":8802492,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8802493,"byte_end":8802507,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8802508,"byte_end":8802567,"line_start":30,"line_end":30,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8802568,"byte_end":8802571,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8802572,"byte_end":8802609,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8802610,"byte_end":8802650,"line_start":33,"line_end":33,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8802651,"byte_end":8802654,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8802655,"byte_end":8802735,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8802736,"byte_end":8802758,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8802759,"byte_end":8802822,"line_start":37,"line_end":37,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8802823,"byte_end":8802863,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8802864,"byte_end":8802914,"line_start":39,"line_end":39,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8802915,"byte_end":8802950,"line_start":40,"line_end":40,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8802951,"byte_end":8802986,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/                         println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8802987,"byte_end":8803069,"line_start":42,"line_end":42,"column_start":1,"column_end":83}},{"value":"/                         return;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8803070,"byte_end":8803105,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8803106,"byte_end":8803131,"line_start":44,"line_end":44,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8803132,"byte_end":8803154,"line_start":45,"line_end":45,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8803155,"byte_end":8803158,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8803159,"byte_end":8803201,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8803202,"byte_end":8803274,"line_start":48,"line_end":48,"column_start":1,"column_end":73}},{"value":"/                     println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8803275,"byte_end":8803352,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/                     return;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8803353,"byte_end":8803384,"line_start":50,"line_end":50,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8803385,"byte_end":8803406,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8803407,"byte_end":8803424,"line_start":52,"line_end":52,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8803425,"byte_end":8803440,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8803441,"byte_end":8803450,"line_start":54,"line_end":54,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8803451,"byte_end":8803456,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8803457,"byte_end":8803464,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8803465,"byte_end":8803468,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ From within the context of the runtime, additional tasks are spawned using","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8803469,"byte_end":8803547,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ the [`tokio::spawn`] function. Futures spawned using this function will be","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8803548,"byte_end":8803626,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ executed on the same thread pool used by the [`Runtime`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8803627,"byte_end":8803688,"line_start":60,"line_end":60,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8803689,"byte_end":8803692,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ A [`Runtime`] instance can also be used directly.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8803693,"byte_end":8803746,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8803747,"byte_end":8803750,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8803751,"byte_end":8803764,"line_start":64,"line_end":64,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8803765,"byte_end":8803797,"line_start":65,"line_end":65,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8803798,"byte_end":8803847,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8803848,"byte_end":8803880,"line_start":67,"line_end":67,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8803881,"byte_end":8803884,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8803885,"byte_end":8803942,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"/     // Create the runtime","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8803943,"byte_end":8803972,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/     let rt  = Runtime::new()?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8803973,"byte_end":8804007,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8804008,"byte_end":8804011,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/     // Spawn the root task","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8804012,"byte_end":8804042,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/     rt.block_on(async {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8804043,"byte_end":8804070,"line_start":74,"line_end":74,"column_start":1,"column_end":28}},{"value":"/         let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8804071,"byte_end":8804141,"line_start":75,"line_end":75,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8804142,"byte_end":8804145,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/         loop {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8804146,"byte_end":8804164,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/             let (mut socket, _) = listener.accept().await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8804165,"byte_end":8804228,"line_start":78,"line_end":78,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8804229,"byte_end":8804232,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/             tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8804233,"byte_end":8804274,"line_start":80,"line_end":80,"column_start":1,"column_end":42}},{"value":"/                 let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8804275,"byte_end":8804319,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8804320,"byte_end":8804323,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/                 // In a loop, read data from the socket and write the data back.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8804324,"byte_end":8804408,"line_start":83,"line_end":83,"column_start":1,"column_end":85}},{"value":"/                 loop {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8804409,"byte_end":8804435,"line_start":84,"line_end":84,"column_start":1,"column_end":27}},{"value":"/                     let n = match socket.read(&mut buf).await {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8804436,"byte_end":8804503,"line_start":85,"line_end":85,"column_start":1,"column_end":68}},{"value":"/                         // socket closed","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8804504,"byte_end":8804548,"line_start":86,"line_end":86,"column_start":1,"column_end":45}},{"value":"/                         Ok(n) if n == 0 => return,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8804549,"byte_end":8804603,"line_start":87,"line_end":87,"column_start":1,"column_end":55}},{"value":"/                         Ok(n) => n,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8804604,"byte_end":8804643,"line_start":88,"line_end":88,"column_start":1,"column_end":40}},{"value":"/                         Err(e) => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8804644,"byte_end":8804683,"line_start":89,"line_end":89,"column_start":1,"column_end":40}},{"value":"/                             println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8804684,"byte_end":8804770,"line_start":90,"line_end":90,"column_start":1,"column_end":87}},{"value":"/                             return;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8804771,"byte_end":8804810,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/                         }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8804811,"byte_end":8804840,"line_start":92,"line_end":92,"column_start":1,"column_end":30}},{"value":"/                     };","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8804841,"byte_end":8804867,"line_start":93,"line_end":93,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8804868,"byte_end":8804871,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/                     // Write the data back","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8804872,"byte_end":8804918,"line_start":95,"line_end":95,"column_start":1,"column_end":47}},{"value":"/                     if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8804919,"byte_end":8804995,"line_start":96,"line_end":96,"column_start":1,"column_end":77}},{"value":"/                         println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8804996,"byte_end":8805077,"line_start":97,"line_end":97,"column_start":1,"column_end":82}},{"value":"/                         return;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8805078,"byte_end":8805113,"line_start":98,"line_end":98,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8805114,"byte_end":8805139,"line_start":99,"line_end":99,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8805140,"byte_end":8805161,"line_start":100,"line_end":100,"column_start":1,"column_end":22}},{"value":"/             });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8805162,"byte_end":8805181,"line_start":101,"line_end":101,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8805182,"byte_end":8805195,"line_start":102,"line_end":102,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8805196,"byte_end":8805206,"line_start":103,"line_end":103,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8805207,"byte_end":8805212,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8805213,"byte_end":8805220,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8805221,"byte_end":8805224,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ## Runtime Configurations","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8805225,"byte_end":8805254,"line_start":107,"line_end":107,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8805255,"byte_end":8805258,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ Tokio provides multiple task scheduling strategies, suitable for different","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8805259,"byte_end":8805337,"line_start":109,"line_end":109,"column_start":1,"column_end":79}},{"value":"/ applications. The [runtime builder] or `#[tokio::main]` attribute may be","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8805338,"byte_end":8805414,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ used to select which scheduler to use.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8805415,"byte_end":8805457,"line_start":111,"line_end":111,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8805458,"byte_end":8805461,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ #### Multi-Thread Scheduler","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8805462,"byte_end":8805493,"line_start":113,"line_end":113,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8805494,"byte_end":8805497,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ The multi-thread scheduler executes futures on a _thread pool_, using a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8805498,"byte_end":8805573,"line_start":115,"line_end":115,"column_start":1,"column_end":76}},{"value":"/ work-stealing strategy. By default, it will start a worker thread for each","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8805574,"byte_end":8805652,"line_start":116,"line_end":116,"column_start":1,"column_end":79}},{"value":"/ CPU core available on the system. This tends to be the ideal configuration","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8805653,"byte_end":8805731,"line_start":117,"line_end":117,"column_start":1,"column_end":79}},{"value":"/ for most applications. The multi-thread scheduler requires the `rt-multi-thread`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8805732,"byte_end":8805816,"line_start":118,"line_end":118,"column_start":1,"column_end":85}},{"value":"/ feature flag, and is selected by default:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8805817,"byte_end":8805862,"line_start":119,"line_end":119,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8805863,"byte_end":8805870,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8805871,"byte_end":8805894,"line_start":121,"line_end":121,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8805895,"byte_end":8805898,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8805899,"byte_end":8805958,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/ let threaded_rt = runtime::Runtime::new()?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8805959,"byte_end":8806006,"line_start":124,"line_end":124,"column_start":1,"column_end":48}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8806007,"byte_end":8806021,"line_start":125,"line_end":125,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8806022,"byte_end":8806029,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8806030,"byte_end":8806033,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ Most applications should use the multi-thread scheduler, except in some","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8806034,"byte_end":8806109,"line_start":128,"line_end":128,"column_start":1,"column_end":76}},{"value":"/ niche use-cases, such as when running only a single thread is required.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8806110,"byte_end":8806185,"line_start":129,"line_end":129,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8806186,"byte_end":8806189,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ #### Current-Thread Scheduler","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8806190,"byte_end":8806223,"line_start":131,"line_end":131,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8806224,"byte_end":8806227,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ The current-thread scheduler provides a _single-threaded_ future executor.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8806228,"byte_end":8806306,"line_start":133,"line_end":133,"column_start":1,"column_end":79}},{"value":"/ All tasks will be created and executed on the current thread. This requires","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8806307,"byte_end":8806386,"line_start":134,"line_end":134,"column_start":1,"column_end":80}},{"value":"/ the `rt` feature flag.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8806387,"byte_end":8806413,"line_start":135,"line_end":135,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8806414,"byte_end":8806421,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8806422,"byte_end":8806445,"line_start":137,"line_end":137,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8806446,"byte_end":8806449,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8806450,"byte_end":8806509,"line_start":139,"line_end":139,"column_start":1,"column_end":60}},{"value":"/ let basic_rt = runtime::Builder::new_current_thread()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8806510,"byte_end":8806567,"line_start":140,"line_end":140,"column_start":1,"column_end":58}},{"value":"/     .build()?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8806568,"byte_end":8806586,"line_start":141,"line_end":141,"column_start":1,"column_end":19}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8806587,"byte_end":8806601,"line_start":142,"line_end":142,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8806602,"byte_end":8806609,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8806610,"byte_end":8806613,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ #### Resource drivers","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8806614,"byte_end":8806639,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8806640,"byte_end":8806643,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ When configuring a runtime by hand, no resource drivers are enabled by","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8806644,"byte_end":8806718,"line_start":147,"line_end":147,"column_start":1,"column_end":75}},{"value":"/ default. In this case, attempting to use networking types or time types will","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8806719,"byte_end":8806799,"line_start":148,"line_end":148,"column_start":1,"column_end":81}},{"value":"/ fail. In order to enable these types, the resource drivers must be enabled.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8806800,"byte_end":8806879,"line_start":149,"line_end":149,"column_start":1,"column_end":80}},{"value":"/ This is done with [`Builder::enable_io`] and [`Builder::enable_time`]. As a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8806880,"byte_end":8806959,"line_start":150,"line_end":150,"column_start":1,"column_end":80}},{"value":"/ shorthand, [`Builder::enable_all`] enables both resource drivers.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8806960,"byte_end":8807029,"line_start":151,"line_end":151,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8807030,"byte_end":8807033,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ## Lifetime of spawned threads","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8807034,"byte_end":8807068,"line_start":153,"line_end":153,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8807069,"byte_end":8807072,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ The runtime may spawn threads depending on its configuration and usage. The","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8807073,"byte_end":8807152,"line_start":155,"line_end":155,"column_start":1,"column_end":80}},{"value":"/ multi-thread scheduler spawns threads to schedule tasks and for `spawn_blocking`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8807153,"byte_end":8807237,"line_start":156,"line_end":156,"column_start":1,"column_end":85}},{"value":"/ calls.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8807238,"byte_end":8807248,"line_start":157,"line_end":157,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8807249,"byte_end":8807252,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ While the `Runtime` is active, threads may shutdown after periods of being","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8807253,"byte_end":8807331,"line_start":159,"line_end":159,"column_start":1,"column_end":79}},{"value":"/ idle. Once `Runtime` is dropped, all runtime threads are forcibly shutdown.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8807332,"byte_end":8807411,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ Any tasks that have not yet completed will be dropped.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8807412,"byte_end":8807470,"line_start":161,"line_end":161,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8807471,"byte_end":8807474,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8807475,"byte_end":8807499,"line_start":163,"line_end":163,"column_start":1,"column_end":25}},{"value":"/ [`Runtime`]: Runtime","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8807500,"byte_end":8807524,"line_start":164,"line_end":164,"column_start":1,"column_end":25}},{"value":"/ [`tokio::spawn`]: crate::spawn","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8807525,"byte_end":8807559,"line_start":165,"line_end":165,"column_start":1,"column_end":35}},{"value":"/ [`tokio::main`]: ../attr.main.html","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8807560,"byte_end":8807598,"line_start":166,"line_end":166,"column_start":1,"column_end":39}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8807599,"byte_end":8807645,"line_start":167,"line_end":167,"column_start":1,"column_end":47}},{"value":"/ [`Runtime::new`]: crate::runtime::Runtime::new","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8807646,"byte_end":8807696,"line_start":168,"line_end":168,"column_start":1,"column_end":51}},{"value":"/ [`Builder::basic_scheduler`]: crate::runtime::Builder::basic_scheduler","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8807697,"byte_end":8807771,"line_start":169,"line_end":169,"column_start":1,"column_end":75}},{"value":"/ [`Builder::threaded_scheduler`]: crate::runtime::Builder::threaded_scheduler","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8807772,"byte_end":8807852,"line_start":170,"line_end":170,"column_start":1,"column_end":81}},{"value":"/ [`Builder::enable_io`]: crate::runtime::Builder::enable_io","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8807853,"byte_end":8807915,"line_start":171,"line_end":171,"column_start":1,"column_end":63}},{"value":"/ [`Builder::enable_time`]: crate::runtime::Builder::enable_time","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8807916,"byte_end":8807982,"line_start":172,"line_end":172,"column_start":1,"column_end":67}},{"value":"/ [`Builder::enable_all`]: crate::runtime::Builder::enable_all","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8807983,"byte_end":8808047,"line_start":173,"line_end":173,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":3964},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8843204,"byte_end":8843213,"line_start":8,"line_end":8,"column_start":16,"column_end":25},"name":"JoinError","qualname":"::runtime::task::error::JoinError","value":"JoinError {  }","parent":null,"children":[{"krate":0,"index":3965}],"decl_id":null,"docs":" Task failed to execute to completion.\n","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23385,"byte_end":23407,"line_start":263,"line_end":263,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3539},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8843702,"byte_end":8843714,"line_start":32,"line_end":32,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<JoinError>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task being cancelled\n","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task being cancelled","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8843622,"byte_end":8843690,"line_start":31,"line_end":31,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3540},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8844168,"byte_end":8844176,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"is_panic","qualname":"<JoinError>::is_panic","value":"pub fn is_panic(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task panicking","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task panicking","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8843789,"byte_end":8843851,"line_start":36,"line_end":36,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8843856,"byte_end":8843859,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8843864,"byte_end":8843878,"line_start":38,"line_end":38,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8843883,"byte_end":8843886,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8843891,"byte_end":8843898,"line_start":40,"line_end":40,"column_start":5,"column_end":12}},{"value":"/ use std::panic;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8843903,"byte_end":8843922,"line_start":41,"line_end":41,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8843927,"byte_end":8843930,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8843935,"byte_end":8843953,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8843958,"byte_end":8843979,"line_start":44,"line_end":44,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8843984,"byte_end":8844022,"line_start":45,"line_end":45,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8844027,"byte_end":8844054,"line_start":46,"line_end":46,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8844059,"byte_end":8844089,"line_start":47,"line_end":47,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8844094,"byte_end":8844097,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/     assert!(err.is_panic());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8844102,"byte_end":8844134,"line_start":49,"line_end":49,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8844139,"byte_end":8844144,"line_start":50,"line_end":50,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8844149,"byte_end":8844156,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3541},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8845031,"byte_end":8845041,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"into_panic","qualname":"<JoinError>::into_panic","value":"pub fn into_panic(Self) -> Box<Any + Send + 'static>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task panicked.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task panicked.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8844250,"byte_end":8844329,"line_start":56,"line_end":56,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8844334,"byte_end":8844337,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8844342,"byte_end":8844354,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8844359,"byte_end":8844362,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ `into_panic()` panics if the `Error` does not represent the underlying","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8844367,"byte_end":8844441,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ task terminating with a panic. Use `is_panic` to check the error reason","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8844446,"byte_end":8844521,"line_start":61,"line_end":61,"column_start":5,"column_end":80}},{"value":"/ or `try_into_panic` for a variant that does not panic.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8844526,"byte_end":8844584,"line_start":62,"line_end":62,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8844589,"byte_end":8844592,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8844597,"byte_end":8844611,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8844616,"byte_end":8844619,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8844624,"byte_end":8844643,"line_start":66,"line_end":66,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8844648,"byte_end":8844667,"line_start":67,"line_end":67,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8844672,"byte_end":8844675,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8844680,"byte_end":8844698,"line_start":69,"line_end":69,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8844703,"byte_end":8844724,"line_start":70,"line_end":70,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8844729,"byte_end":8844767,"line_start":71,"line_end":71,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8844772,"byte_end":8844799,"line_start":72,"line_end":72,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8844804,"byte_end":8844834,"line_start":73,"line_end":73,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8844839,"byte_end":8844842,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/     if err.is_panic() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8844847,"byte_end":8844874,"line_start":75,"line_end":75,"column_start":5,"column_end":32}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8844879,"byte_end":8844927,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(err.into_panic());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8844932,"byte_end":8844983,"line_start":77,"line_end":77,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8844988,"byte_end":8844997,"line_start":78,"line_end":78,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8845002,"byte_end":8845007,"line_start":79,"line_end":79,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8845012,"byte_end":8845019,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3542},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8845806,"byte_end":8845820,"line_start":107,"line_end":107,"column_start":12,"column_end":26},"name":"try_into_panic","qualname":"<JoinError>::try_into_panic","value":"pub fn try_into_panic(Self) -> Result<Box<Any + Send + 'static>, JoinError>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task\n panicked if the task terminated due to a panic. Otherwise, `self` is\n returned.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8845182,"byte_end":8845251,"line_start":86,"line_end":86,"column_start":5,"column_end":74}},{"value":"/ panicked if the task terminated due to a panic. Otherwise, `self` is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8845256,"byte_end":8845328,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8845333,"byte_end":8845346,"line_start":88,"line_end":88,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8845351,"byte_end":8845354,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8845359,"byte_end":8845373,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8845378,"byte_end":8845381,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8845386,"byte_end":8845405,"line_start":92,"line_end":92,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8845410,"byte_end":8845429,"line_start":93,"line_end":93,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8845434,"byte_end":8845437,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8845442,"byte_end":8845460,"line_start":95,"line_end":95,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8845465,"byte_end":8845486,"line_start":96,"line_end":96,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8845491,"byte_end":8845529,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8845534,"byte_end":8845561,"line_start":98,"line_end":98,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8845566,"byte_end":8845596,"line_start":99,"line_end":99,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8845601,"byte_end":8845604,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/     if let Ok(reason) = err.try_into_panic() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8845609,"byte_end":8845659,"line_start":101,"line_end":101,"column_start":5,"column_end":55}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8845664,"byte_end":8845712,"line_start":102,"line_end":102,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(reason);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8845717,"byte_end":8845758,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8845763,"byte_end":8845772,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8845777,"byte_end":8845782,"line_start":105,"line_end":105,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8845787,"byte_end":8845794,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3966},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8865804,"byte_end":8865814,"line_start":144,"line_end":144,"column_start":16,"column_end":26},"name":"JoinHandle","qualname":"::runtime::task::join::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":3968},{"krate":0,"index":3969}],"decl_id":null,"docs":" An owned permission to join on a task (await its termination).","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23385,"byte_end":23407,"line_start":263,"line_end":263,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3664},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8867117,"byte_end":8867122,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"abort","qualname":"<JoinHandle<T>>::abort","value":"pub fn abort(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Abort the task associated with the handle.","sig":null,"attributes":[{"value":"/ Abort the task associated with the handle.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8866160,"byte_end":8866206,"line_start":161,"line_end":161,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8866211,"byte_end":8866214,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Awaiting a cancelled task might complete as usual if the task was","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8866219,"byte_end":8866288,"line_start":163,"line_end":163,"column_start":5,"column_end":74}},{"value":"/ already completed at the time it was cancelled, but most likely it","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8866293,"byte_end":8866363,"line_start":164,"line_end":164,"column_start":5,"column_end":75}},{"value":"/ will complete with a `Err(JoinError::Cancelled)`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8866368,"byte_end":8866421,"line_start":165,"line_end":165,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8866426,"byte_end":8866429,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8866434,"byte_end":8866445,"line_start":167,"line_end":167,"column_start":5,"column_end":16}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8866450,"byte_end":8866470,"line_start":168,"line_end":168,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8866475,"byte_end":8866478,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8866483,"byte_end":8866501,"line_start":170,"line_end":170,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8866506,"byte_end":8866527,"line_start":171,"line_end":171,"column_start":5,"column_end":26}},{"value":"/    let mut handles = Vec::new();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8866532,"byte_end":8866568,"line_start":172,"line_end":172,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8866573,"byte_end":8866576,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/    handles.push(tokio::spawn(async {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8866581,"byte_end":8866621,"line_start":174,"line_end":174,"column_start":5,"column_end":45}},{"value":"/       time::sleep(time::Duration::from_secs(10)).await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8866626,"byte_end":8866685,"line_start":175,"line_end":175,"column_start":5,"column_end":64}},{"value":"/       true","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8866690,"byte_end":8866704,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/    }));","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8866709,"byte_end":8866720,"line_start":177,"line_end":177,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8866725,"byte_end":8866728,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/    handles.push(tokio::spawn(async {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8866733,"byte_end":8866773,"line_start":179,"line_end":179,"column_start":5,"column_end":45}},{"value":"/       time::sleep(time::Duration::from_secs(10)).await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8866778,"byte_end":8866837,"line_start":180,"line_end":180,"column_start":5,"column_end":64}},{"value":"/       false","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8866842,"byte_end":8866857,"line_start":181,"line_end":181,"column_start":5,"column_end":20}},{"value":"/    }));","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8866862,"byte_end":8866873,"line_start":182,"line_end":182,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8866878,"byte_end":8866881,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/    for handle in &handles {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8866886,"byte_end":8866917,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/        handle.abort();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8866922,"byte_end":8866948,"line_start":185,"line_end":185,"column_start":5,"column_end":31}},{"value":"/    }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8866953,"byte_end":8866961,"line_start":186,"line_end":186,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8866966,"byte_end":8866969,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/    for handle in handles {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8866974,"byte_end":8867004,"line_start":188,"line_end":188,"column_start":5,"column_end":35}},{"value":"/        assert!(handle.await.unwrap_err().is_cancelled());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8867009,"byte_end":8867070,"line_start":189,"line_end":189,"column_start":5,"column_end":66}},{"value":"/    }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8867075,"byte_end":8867083,"line_start":190,"line_end":190,"column_start":5,"column_end":13}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8867088,"byte_end":8867093,"line_start":191,"line_end":191,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8867098,"byte_end":8867105,"line_start":192,"line_end":192,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4279},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8921188,"byte_end":8921195,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"Builder","qualname":"::runtime::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":4280},{"krate":0,"index":4281},{"krate":0,"index":4282},{"krate":0,"index":4283},{"krate":0,"index":4284},{"krate":0,"index":4285},{"krate":0,"index":4286},{"krate":0,"index":4287},{"krate":0,"index":4288},{"krate":0,"index":4289},{"krate":0,"index":4290}],"decl_id":null,"docs":" Builds Tokio Runtime with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds Tokio Runtime with custom configuration values.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8920232,"byte_end":8920290,"line_start":8,"line_end":8,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8920291,"byte_end":8920294,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values. The","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8920295,"byte_end":8920367,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ Runtime is constructed by calling [`build`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8920368,"byte_end":8920416,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8920417,"byte_end":8920420,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new_multi_thread`]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8920421,"byte_end":8920498,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ or [`Builder::new_current_thread`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8920499,"byte_end":8920538,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8920539,"byte_end":8920542,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various configuration","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8920543,"byte_end":8920620,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ settings.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8920621,"byte_end":8920634,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8920635,"byte_end":8920638,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`build`]: method@Self::build","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8920639,"byte_end":8920672,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/ [`Builder::new_multi_thread`]: method@Self::new_multi_thread","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8920673,"byte_end":8920737,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/ [`Builder::new_current_thread`]: method@Self::new_current_thread","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8920738,"byte_end":8920806,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8920807,"byte_end":8920810,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8920811,"byte_end":8920825,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8920826,"byte_end":8920829,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8920830,"byte_end":8920837,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8920838,"byte_end":8920870,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8920871,"byte_end":8920874,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8920875,"byte_end":8920890,"line_start":28,"line_end":28,"column_start":1,"column_end":16}},{"value":"/     // build runtime","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8920891,"byte_end":8920915,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/     let runtime = Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8920916,"byte_end":8920965,"line_start":30,"line_end":30,"column_start":1,"column_end":50}},{"value":"/         .worker_threads(4)","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8920966,"byte_end":8920996,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/         .thread_name(\"my-custom-name\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8920997,"byte_end":8921039,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/         .thread_stack_size(3 * 1024 * 1024)","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8921040,"byte_end":8921087,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/         .build()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8921088,"byte_end":8921108,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/         .unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8921109,"byte_end":8921131,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8921132,"byte_end":8921135,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // use runtime ...","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8921136,"byte_end":8921162,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8921163,"byte_end":8921168,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8921169,"byte_end":8921176,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4298},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8922556,"byte_end":8922574,"line_start":89,"line_end":89,"column_start":12,"column_end":30},"name":"new_current_thread","qualname":"<Builder>::new_current_thread","value":"pub fn new_current_thread() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new builder with the current thread scheduler selected.","sig":null,"attributes":[{"value":"/ Returns a new builder with the current thread scheduler selected.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8922401,"byte_end":8922470,"line_start":86,"line_end":86,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8922475,"byte_end":8922478,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8922483,"byte_end":8922544,"line_start":88,"line_end":88,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4299},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8922899,"byte_end":8922915,"line_start":98,"line_end":98,"column_start":12,"column_end":28},"name":"new_multi_thread","qualname":"<Builder>::new_multi_thread","value":"pub fn new_multi_thread() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new builder with the multi thread scheduler selected.","sig":null,"attributes":[{"value":"/ Returns a new builder with the multi thread scheduler selected.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8922643,"byte_end":8922710,"line_start":93,"line_end":93,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8922715,"byte_end":8922718,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8922723,"byte_end":8922784,"line_start":95,"line_end":95,"column_start":5,"column_end":66}},{"value":"cfg(feature = \"rt-multi-thread\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8922789,"byte_end":8922824,"line_start":96,"line_end":96,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4302},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8924445,"byte_end":8924455,"line_start":154,"line_end":154,"column_start":12,"column_end":22},"name":"enable_all","qualname":"<Builder>::enable_all","value":"pub fn enable_all(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables both I/O and time drivers.","sig":null,"attributes":[{"value":"/ Enables both I/O and time drivers.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8923952,"byte_end":8923990,"line_start":138,"line_end":138,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8923995,"byte_end":8923998,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Doing this is a shorthand for calling `enable_io` and `enable_time`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8924003,"byte_end":8924074,"line_start":140,"line_end":140,"column_start":5,"column_end":76}},{"value":"/ individually. If additional components are added to Tokio in the future,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8924079,"byte_end":8924155,"line_start":141,"line_end":141,"column_start":5,"column_end":81}},{"value":"/ `enable_all` will include these future components.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8924160,"byte_end":8924214,"line_start":142,"line_end":142,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8924219,"byte_end":8924222,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8924227,"byte_end":8924241,"line_start":144,"line_end":144,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8924246,"byte_end":8924249,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8924254,"byte_end":8924261,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8924266,"byte_end":8924289,"line_start":147,"line_end":147,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8924294,"byte_end":8924297,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8924302,"byte_end":8924351,"line_start":149,"line_end":149,"column_start":5,"column_end":54}},{"value":"/     .enable_all()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8924356,"byte_end":8924377,"line_start":150,"line_end":150,"column_start":5,"column_end":26}},{"value":"/     .build()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8924382,"byte_end":8924398,"line_start":151,"line_end":151,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8924403,"byte_end":8924421,"line_start":152,"line_end":152,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8924426,"byte_end":8924433,"line_start":153,"line_end":153,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4303},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8926146,"byte_end":8926160,"line_start":212,"line_end":212,"column_start":12,"column_end":26},"name":"worker_threads","qualname":"<Builder>::worker_threads","value":"pub fn worker_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of worker threads the `Runtime` will use.","sig":null,"attributes":[{"value":"/ Sets the number of worker threads the `Runtime` will use.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8924683,"byte_end":8924744,"line_start":163,"line_end":163,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8924749,"byte_end":8924752,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ This should be a number between 0 and 32,768 though it is advised to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8924757,"byte_end":8924829,"line_start":165,"line_end":165,"column_start":5,"column_end":77}},{"value":"/ keep this value on the smaller side.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8924834,"byte_end":8924874,"line_start":166,"line_end":166,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8924879,"byte_end":8924882,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Default","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8924887,"byte_end":8924900,"line_start":168,"line_end":168,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8924905,"byte_end":8924908,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8924913,"byte_end":8924982,"line_start":170,"line_end":170,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8924987,"byte_end":8924990,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8924995,"byte_end":8925006,"line_start":172,"line_end":172,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8925011,"byte_end":8925014,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ When using the `current_thread` runtime this method will panic, since","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8925019,"byte_end":8925092,"line_start":174,"line_end":174,"column_start":5,"column_end":78}},{"value":"/ those variants do not allow setting worker thread counts.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8925097,"byte_end":8925158,"line_start":175,"line_end":175,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8925163,"byte_end":8925166,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8925171,"byte_end":8925174,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8925179,"byte_end":8925193,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8925198,"byte_end":8925201,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ## Multi threaded runtime with 4 threads","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8925206,"byte_end":8925250,"line_start":180,"line_end":180,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8925255,"byte_end":8925258,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8925263,"byte_end":8925270,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8925275,"byte_end":8925298,"line_start":183,"line_end":183,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8925303,"byte_end":8925306,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ // This will spawn a work-stealing runtime with 4 worker threads.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8925311,"byte_end":8925380,"line_start":185,"line_end":185,"column_start":5,"column_end":74}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8925385,"byte_end":8925434,"line_start":186,"line_end":186,"column_start":5,"column_end":54}},{"value":"/     .worker_threads(4)","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8925439,"byte_end":8925465,"line_start":187,"line_end":187,"column_start":5,"column_end":31}},{"value":"/     .build()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8925470,"byte_end":8925486,"line_start":188,"line_end":188,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8925491,"byte_end":8925509,"line_start":189,"line_end":189,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8925514,"byte_end":8925517,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ rt.spawn(async move {});","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8925522,"byte_end":8925550,"line_start":191,"line_end":191,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8925555,"byte_end":8925562,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8925567,"byte_end":8925570,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ ## Current thread runtime (will only run on the current thread via `Runtime::block_on`)","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8925575,"byte_end":8925666,"line_start":194,"line_end":194,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8925671,"byte_end":8925674,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8925679,"byte_end":8925686,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8925691,"byte_end":8925714,"line_start":197,"line_end":197,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8925719,"byte_end":8925722,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ // Create a runtime that _must_ be driven from a call","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8925727,"byte_end":8925784,"line_start":199,"line_end":199,"column_start":5,"column_end":62}},{"value":"/ // to `Runtime::block_on`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8925789,"byte_end":8925819,"line_start":200,"line_end":200,"column_start":5,"column_end":35}},{"value":"/ let rt = runtime::Builder::new_current_thread()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8925824,"byte_end":8925875,"line_start":201,"line_end":201,"column_start":5,"column_end":56}},{"value":"/     .build()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8925880,"byte_end":8925896,"line_start":202,"line_end":202,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8925901,"byte_end":8925919,"line_start":203,"line_end":203,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8925924,"byte_end":8925927,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ // This will run the runtime and future on the current thread","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8925932,"byte_end":8925997,"line_start":205,"line_end":205,"column_start":5,"column_end":70}},{"value":"/ rt.block_on(async move {});","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8926002,"byte_end":8926033,"line_start":206,"line_end":206,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8926038,"byte_end":8926045,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8926050,"byte_end":8926053,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8926058,"byte_end":8926069,"line_start":209,"line_end":209,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8926074,"byte_end":8926077,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ This will panic if `val` is not larger than `0`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8926082,"byte_end":8926134,"line_start":211,"line_end":211,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4304},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8926792,"byte_end":8926812,"line_start":231,"line_end":231,"column_start":12,"column_end":32},"name":"max_blocking_threads","qualname":"<Builder>::max_blocking_threads","value":"pub fn max_blocking_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies limit for threads spawned by the Runtime used for blocking operations.","sig":null,"attributes":[{"value":"/ Specifies limit for threads spawned by the Runtime used for blocking operations.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8926327,"byte_end":8926411,"line_start":218,"line_end":218,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8926416,"byte_end":8926419,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8926424,"byte_end":8926427,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Similarly to the `worker_threads`, this number should be between 1 and 32,768.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8926432,"byte_end":8926514,"line_start":221,"line_end":221,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8926519,"byte_end":8926522,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ The default value is 512.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8926527,"byte_end":8926556,"line_start":223,"line_end":223,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8926561,"byte_end":8926564,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ Otherwise as `worker_threads` are always active, it limits additional threads (e.g. for","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8926569,"byte_end":8926660,"line_start":225,"line_end":225,"column_start":5,"column_end":96}},{"value":"/ blocking annotations).","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8926665,"byte_end":8926691,"line_start":226,"line_end":226,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8926696,"byte_end":8926699,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8926704,"byte_end":8926715,"line_start":228,"line_end":228,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8926720,"byte_end":8926723,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ This will panic if `val` is not larger than `0`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8926728,"byte_end":8926780,"line_start":230,"line_end":230,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4305},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8927368,"byte_end":8927379,"line_start":252,"line_end":252,"column_start":12,"column_end":23},"name":"thread_name","qualname":"<Builder>::thread_name","value":"pub fn thread_name<impl Into<String>: Into<String>>(&mut Self,\n                                                    impl Into<String>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8926985,"byte_end":8927049,"line_start":237,"line_end":237,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8927054,"byte_end":8927057,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ The default name is \"tokio-runtime-worker\".","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8927062,"byte_end":8927109,"line_start":239,"line_end":239,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8927114,"byte_end":8927117,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8927122,"byte_end":8927136,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8927141,"byte_end":8927144,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8927149,"byte_end":8927156,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8927161,"byte_end":8927186,"line_start":244,"line_end":244,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8927191,"byte_end":8927194,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8927199,"byte_end":8927220,"line_start":246,"line_end":246,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8927225,"byte_end":8927274,"line_start":247,"line_end":247,"column_start":5,"column_end":54}},{"value":"/     .thread_name(\"my-pool\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8927279,"byte_end":8927310,"line_start":248,"line_end":248,"column_start":5,"column_end":36}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8927315,"byte_end":8927332,"line_start":249,"line_end":249,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8927337,"byte_end":8927344,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8927349,"byte_end":8927356,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4308},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8928228,"byte_end":8928242,"line_start":278,"line_end":278,"column_start":12,"column_end":26},"name":"thread_name_fn","qualname":"<Builder>::thread_name_fn","value":"pub fn thread_name_fn<F>(&mut Self, F) -> &mut Self where F: Fn() -> String +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets a function used to generate the name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets a function used to generate the name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8927553,"byte_end":8927649,"line_start":258,"line_end":258,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8927654,"byte_end":8927657,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ The default name fn is `|| \"tokio-runtime-worker\".into()`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8927662,"byte_end":8927724,"line_start":260,"line_end":260,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8927729,"byte_end":8927732,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8927737,"byte_end":8927751,"line_start":262,"line_end":262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8927756,"byte_end":8927759,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8927764,"byte_end":8927771,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8927776,"byte_end":8927801,"line_start":265,"line_end":265,"column_start":5,"column_end":30}},{"value":"/ # use std::sync::atomic::{AtomicUsize, Ordering};","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8927806,"byte_end":8927859,"line_start":266,"line_end":266,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8927864,"byte_end":8927867,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8927872,"byte_end":8927893,"line_start":268,"line_end":268,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8927898,"byte_end":8927947,"line_start":269,"line_end":269,"column_start":5,"column_end":54}},{"value":"/     .thread_name_fn(|| {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8927952,"byte_end":8927980,"line_start":270,"line_end":270,"column_start":5,"column_end":33}},{"value":"/        static ATOMIC_ID: AtomicUsize = AtomicUsize::new(0);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8927985,"byte_end":8928048,"line_start":271,"line_end":271,"column_start":5,"column_end":68}},{"value":"/        let id = ATOMIC_ID.fetch_add(1, Ordering::SeqCst);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8928053,"byte_end":8928114,"line_start":272,"line_end":272,"column_start":5,"column_end":66}},{"value":"/        format!(\"my-pool-{}\", id)","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8928119,"byte_end":8928155,"line_start":273,"line_end":273,"column_start":5,"column_end":41}},{"value":"/     })","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8928160,"byte_end":8928170,"line_start":274,"line_end":274,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8928175,"byte_end":8928192,"line_start":275,"line_end":275,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8928197,"byte_end":8928204,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8928209,"byte_end":8928216,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4310},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8929007,"byte_end":8929024,"line_start":305,"line_end":305,"column_start":12,"column_end":29},"name":"thread_stack_size","qualname":"<Builder>::thread_stack_size","value":"pub fn thread_stack_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the stack size (in bytes) for worker threads.","sig":null,"attributes":[{"value":"/ Sets the stack size (in bytes) for worker threads.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8928418,"byte_end":8928472,"line_start":286,"line_end":286,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8928477,"byte_end":8928480,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ The actual stack size may be greater than this value if the platform","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8928485,"byte_end":8928557,"line_start":288,"line_end":288,"column_start":5,"column_end":77}},{"value":"/ specifies minimal stack size.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8928562,"byte_end":8928595,"line_start":289,"line_end":289,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8928600,"byte_end":8928603,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ The default stack size for spawned threads is 2 MiB, though this","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8928608,"byte_end":8928676,"line_start":291,"line_end":291,"column_start":5,"column_end":73}},{"value":"/ particular stack size is subject to change in the future.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8928681,"byte_end":8928742,"line_start":292,"line_end":292,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8928747,"byte_end":8928750,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8928755,"byte_end":8928769,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8928774,"byte_end":8928777,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8928782,"byte_end":8928789,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8928794,"byte_end":8928819,"line_start":297,"line_end":297,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8928824,"byte_end":8928827,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8928832,"byte_end":8928853,"line_start":299,"line_end":299,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8928858,"byte_end":8928907,"line_start":300,"line_end":300,"column_start":5,"column_end":54}},{"value":"/     .thread_stack_size(32 * 1024)","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8928912,"byte_end":8928949,"line_start":301,"line_end":301,"column_start":5,"column_end":42}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8928954,"byte_end":8928971,"line_start":302,"line_end":302,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8928976,"byte_end":8928983,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8928988,"byte_end":8928995,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4311},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8929644,"byte_end":8929659,"line_start":329,"line_end":329,"column_start":12,"column_end":27},"name":"on_thread_start","qualname":"<Builder>::on_thread_start","value":"pub fn on_thread_start<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` after each thread is started but before it starts\n doing work.","sig":null,"attributes":[{"value":"/ Executes function `f` after each thread is started but before it starts","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8929131,"byte_end":8929206,"line_start":310,"line_end":310,"column_start":5,"column_end":80}},{"value":"/ doing work.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8929211,"byte_end":8929226,"line_start":311,"line_end":311,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8929231,"byte_end":8929234,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8929239,"byte_end":8929301,"line_start":313,"line_end":313,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8929306,"byte_end":8929309,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8929314,"byte_end":8929328,"line_start":315,"line_end":315,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8929333,"byte_end":8929336,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8929341,"byte_end":8929348,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8929353,"byte_end":8929378,"line_start":318,"line_end":318,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8929383,"byte_end":8929386,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8929391,"byte_end":8929412,"line_start":320,"line_end":320,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8929417,"byte_end":8929471,"line_start":321,"line_end":321,"column_start":5,"column_end":59}},{"value":"/     .on_thread_start(|| {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8929476,"byte_end":8929505,"line_start":322,"line_end":322,"column_start":5,"column_end":34}},{"value":"/         println!(\"thread started\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8929510,"byte_end":8929549,"line_start":323,"line_end":323,"column_start":5,"column_end":44}},{"value":"/     })","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8929554,"byte_end":8929564,"line_start":324,"line_end":324,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8929569,"byte_end":8929586,"line_start":325,"line_end":325,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8929591,"byte_end":8929598,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8929603,"byte_end":8929610,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8929615,"byte_end":8929632,"line_start":328,"line_end":328,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4313},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8930300,"byte_end":8930314,"line_start":355,"line_end":355,"column_start":12,"column_end":26},"name":"on_thread_stop","qualname":"<Builder>::on_thread_stop","value":"pub fn on_thread_stop<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` before each thread stops.","sig":null,"attributes":[{"value":"/ Executes function `f` before each thread stops.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8929831,"byte_end":8929882,"line_start":337,"line_end":337,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8929887,"byte_end":8929890,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8929895,"byte_end":8929957,"line_start":339,"line_end":339,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8929962,"byte_end":8929965,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8929970,"byte_end":8929984,"line_start":341,"line_end":341,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8929989,"byte_end":8929992,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8929997,"byte_end":8930004,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8930009,"byte_end":8930034,"line_start":344,"line_end":344,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8930039,"byte_end":8930042,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8930047,"byte_end":8930068,"line_start":346,"line_end":346,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8930073,"byte_end":8930127,"line_start":347,"line_end":347,"column_start":5,"column_end":59}},{"value":"/     .on_thread_stop(|| {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8930132,"byte_end":8930160,"line_start":348,"line_end":348,"column_start":5,"column_end":33}},{"value":"/         println!(\"thread stopping\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8930165,"byte_end":8930205,"line_start":349,"line_end":349,"column_start":5,"column_end":45}},{"value":"/     })","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8930210,"byte_end":8930220,"line_start":350,"line_end":350,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8930225,"byte_end":8930242,"line_start":351,"line_end":351,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8930247,"byte_end":8930254,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8930259,"byte_end":8930266,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8930271,"byte_end":8930288,"line_start":354,"line_end":354,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4315},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8930878,"byte_end":8930883,"line_start":378,"line_end":378,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"pub fn build(&mut Self) -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Creates the configured `Runtime`.","sig":null,"attributes":[{"value":"/ Creates the configured `Runtime`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8930486,"byte_end":8930523,"line_start":363,"line_end":363,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8930528,"byte_end":8930531,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ The returned `Runtime` instance is ready to spawn tasks.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8930536,"byte_end":8930596,"line_start":365,"line_end":365,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8930601,"byte_end":8930604,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8930609,"byte_end":8930623,"line_start":367,"line_end":367,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8930628,"byte_end":8930631,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8930636,"byte_end":8930643,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8930648,"byte_end":8930680,"line_start":370,"line_end":370,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8930685,"byte_end":8930688,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ let rt  = Builder::new_multi_thread().build().unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8930693,"byte_end":8930752,"line_start":372,"line_end":372,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8930757,"byte_end":8930760,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ rt.block_on(async {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8930765,"byte_end":8930788,"line_start":374,"line_end":374,"column_start":5,"column_end":28}},{"value":"/     println!(\"Hello from the Tokio runtime\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8930793,"byte_end":8930842,"line_start":375,"line_end":375,"column_start":5,"column_end":54}},{"value":"/ });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8930847,"byte_end":8930854,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8930859,"byte_end":8930866,"line_start":377,"line_end":377,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4317},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8932062,"byte_end":8932079,"line_start":416,"line_end":416,"column_start":12,"column_end":29},"name":"thread_keep_alive","qualname":"<Builder>::thread_keep_alive","value":"pub fn thread_keep_alive(&mut Self, Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a custom timeout for a thread in the blocking pool.","sig":null,"attributes":[{"value":"/ Sets a custom timeout for a thread in the blocking pool.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8931553,"byte_end":8931613,"line_start":399,"line_end":399,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8931618,"byte_end":8931621,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ By default, the timeout for a thread is set to 10 seconds. This can","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8931626,"byte_end":8931697,"line_start":401,"line_end":401,"column_start":5,"column_end":76}},{"value":"/ be overriden using .thread_keep_alive().","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8931702,"byte_end":8931746,"line_start":402,"line_end":402,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8931751,"byte_end":8931754,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8931759,"byte_end":8931772,"line_start":404,"line_end":404,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8931777,"byte_end":8931780,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8931785,"byte_end":8931792,"line_start":406,"line_end":406,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8931797,"byte_end":8931822,"line_start":407,"line_end":407,"column_start":5,"column_end":30}},{"value":"/ # use std::time::Duration;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8931827,"byte_end":8931857,"line_start":408,"line_end":408,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8931862,"byte_end":8931865,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8931870,"byte_end":8931891,"line_start":410,"line_end":410,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8931896,"byte_end":8931945,"line_start":411,"line_end":411,"column_start":5,"column_end":54}},{"value":"/     .thread_keep_alive(Duration::from_millis(100))","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8931950,"byte_end":8932004,"line_start":412,"line_end":412,"column_start":5,"column_end":59}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8932009,"byte_end":8932026,"line_start":413,"line_end":413,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8932031,"byte_end":8932038,"line_start":414,"line_end":414,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8932043,"byte_end":8932050,"line_start":415,"line_end":415,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4426},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8933826,"byte_end":8933835,"line_start":469,"line_end":469,"column_start":16,"column_end":25},"name":"enable_io","qualname":"<Builder>::enable_io","value":"pub fn enable_io(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the I/O driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4428},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8934359,"byte_end":8934370,"line_start":492,"line_end":492,"column_start":16,"column_end":27},"name":"enable_time","qualname":"<Builder>::enable_time","value":"pub fn enable_time(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the time driver.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4471},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8945298,"byte_end":8945304,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"Handle","qualname":"::runtime::handle::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":4472},{"krate":0,"index":4473},{"krate":0,"index":4474},{"krate":0,"index":4475},{"krate":0,"index":4476},{"krate":0,"index":4477}],"decl_id":null,"docs":" Handle to the runtime.","sig":null,"attributes":[{"value":"/ Handle to the runtime.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8945029,"byte_end":8945055,"line_start":9,"line_end":9,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8945056,"byte_end":8945059,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The handle is internally reference-counted and can be freely cloned. A handle can be","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8945060,"byte_end":8945148,"line_start":11,"line_end":11,"column_start":1,"column_end":89}},{"value":"/ obtained using the [`Runtime::handle`] method.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8945149,"byte_end":8945199,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8945200,"byte_end":8945203,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::handle`]: crate::runtime::Runtime::handle()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8945204,"byte_end":8945262,"line_start":14,"line_end":14,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":4482},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8945991,"byte_end":8946001,"line_start":42,"line_end":42,"column_start":12,"column_end":22},"name":"EnterGuard","qualname":"::runtime::handle::EnterGuard","value":"EnterGuard {  }","parent":null,"children":[{"krate":0,"index":4484},{"krate":0,"index":4485}],"decl_id":null,"docs":" Runtime context guard.","sig":null,"attributes":[{"value":"/ Runtime context guard.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8945755,"byte_end":8945781,"line_start":35,"line_end":35,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8945782,"byte_end":8945785,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Returned by [`Runtime::enter`] and [`Handle::enter`], the context guard exits","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8945786,"byte_end":8945867,"line_start":37,"line_end":37,"column_start":1,"column_end":82}},{"value":"/ the runtime context on drop.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8945868,"byte_end":8945900,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8945901,"byte_end":8945904,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::enter`]: fn@crate::runtime::Runtime::enter","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8945905,"byte_end":8945962,"line_start":40,"line_end":40,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4379},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8946475,"byte_end":8946480,"line_start":55,"line_end":55,"column_start":12,"column_end":17},"name":"enter","qualname":"<Handle>::enter","value":"pub fn enter(&Self) -> EnterGuard","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Sleep`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8946085,"byte_end":8946160,"line_start":48,"line_end":48,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Sleep`] or [`TcpStream`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8946165,"byte_end":8946243,"line_start":49,"line_end":49,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8946248,"byte_end":8946316,"line_start":50,"line_end":50,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8946321,"byte_end":8946324,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ [`Sleep`]: struct@crate::time::Sleep","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8946329,"byte_end":8946369,"line_start":52,"line_end":52,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8946374,"byte_end":8946421,"line_start":53,"line_end":53,"column_start":5,"column_end":52}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8946426,"byte_end":8946463,"line_start":54,"line_end":54,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4380},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8947974,"byte_end":8947981,"line_start":100,"line_end":100,"column_start":12,"column_end":19},"name":"current","qualname":"<Handle>::current","value":"pub fn current() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Handle` view over the currently running `Runtime`","sig":null,"attributes":[{"value":"/ Returns a `Handle` view over the currently running `Runtime`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8946625,"byte_end":8946689,"line_start":62,"line_end":62,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8946694,"byte_end":8946697,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8946702,"byte_end":8946713,"line_start":64,"line_end":64,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8946718,"byte_end":8946721,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ This will panic if called outside the context of a Tokio runtime. That means that you must","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8946726,"byte_end":8946820,"line_start":66,"line_end":66,"column_start":5,"column_end":99}},{"value":"/ call this on one of the threads **being run by the runtime**. Calling this from within a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8946825,"byte_end":8946917,"line_start":67,"line_end":67,"column_start":5,"column_end":97}},{"value":"/ thread created by `std::thread::spawn` (for example) will cause a panic.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8946922,"byte_end":8946998,"line_start":68,"line_end":68,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8947003,"byte_end":8947006,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8947011,"byte_end":8947025,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8947030,"byte_end":8947033,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This can be used to obtain the handle of the surrounding runtime from an async","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8947038,"byte_end":8947120,"line_start":72,"line_end":72,"column_start":5,"column_end":87}},{"value":"/ block or function running on that runtime.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8947125,"byte_end":8947171,"line_start":73,"line_end":73,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8947176,"byte_end":8947179,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8947184,"byte_end":8947191,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ # use std::thread;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8947196,"byte_end":8947218,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/ # use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8947223,"byte_end":8947257,"line_start":77,"line_end":77,"column_start":5,"column_end":39}},{"value":"/ # fn dox() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8947262,"byte_end":8947278,"line_start":78,"line_end":78,"column_start":5,"column_end":21}},{"value":"/ # let rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8947283,"byte_end":8947322,"line_start":79,"line_end":79,"column_start":5,"column_end":44}},{"value":"/ # rt.spawn(async {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8947327,"byte_end":8947349,"line_start":80,"line_end":80,"column_start":5,"column_end":27}},{"value":"/ use tokio::runtime::Handle;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8947354,"byte_end":8947385,"line_start":81,"line_end":81,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8947390,"byte_end":8947393,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ // Inside an async block or function.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8947398,"byte_end":8947439,"line_start":83,"line_end":83,"column_start":5,"column_end":46}},{"value":"/ let handle = Handle::current();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8947444,"byte_end":8947479,"line_start":84,"line_end":84,"column_start":5,"column_end":40}},{"value":"/ handle.spawn(async {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8947484,"byte_end":8947508,"line_start":85,"line_end":85,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running in the existing Runtime\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8947513,"byte_end":8947569,"line_start":86,"line_end":86,"column_start":5,"column_end":61}},{"value":"/ });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8947574,"byte_end":8947581,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8947586,"byte_end":8947589,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # let handle =","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8947594,"byte_end":8947612,"line_start":89,"line_end":89,"column_start":5,"column_end":23}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8947617,"byte_end":8947644,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/     // Notice that the handle is created outside of this thread and then moved in","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8947649,"byte_end":8947734,"line_start":91,"line_end":91,"column_start":5,"column_end":90}},{"value":"/     handle.spawn(async { /* ... */ })","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8947739,"byte_end":8947780,"line_start":92,"line_end":92,"column_start":5,"column_end":46}},{"value":"/     // This next line would cause a panic","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8947785,"byte_end":8947830,"line_start":93,"line_end":93,"column_start":5,"column_end":50}},{"value":"/     // let handle2 = Handle::current();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8947835,"byte_end":8947878,"line_start":94,"line_end":94,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8947883,"byte_end":8947890,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8947895,"byte_end":8947924,"line_start":96,"line_end":96,"column_start":5,"column_end":34}},{"value":"/ # });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8947929,"byte_end":8947938,"line_start":97,"line_end":97,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8947943,"byte_end":8947950,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8947955,"byte_end":8947962,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4381},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8948255,"byte_end":8948266,"line_start":109,"line_end":109,"column_start":12,"column_end":23},"name":"try_current","qualname":"<Handle>::try_current","value":"pub fn try_current() -> Result<Self, TryCurrentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a Handle view over the currently running Runtime","sig":null,"attributes":[{"value":"/ Returns a Handle view over the currently running Runtime","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8948062,"byte_end":8948122,"line_start":104,"line_end":104,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8948127,"byte_end":8948130,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Returns an error if no Runtime has been started","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8948135,"byte_end":8948186,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8948191,"byte_end":8948194,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Contrary to `current`, this never panics","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8948199,"byte_end":8948243,"line_start":108,"line_end":108,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4382},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8949221,"byte_end":8949226,"line_start":141,"line_end":141,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Handle>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"/ Spawn a future onto the Tokio runtime.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8948369,"byte_end":8948411,"line_start":113,"line_end":113,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8948416,"byte_end":8948419,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ This spawns the given future onto the runtime's executor, usually a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8948424,"byte_end":8948495,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ thread pool. The thread pool is then responsible for polling the future","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8948500,"byte_end":8948575,"line_start":116,"line_end":116,"column_start":5,"column_end":80}},{"value":"/ until it completes.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8948580,"byte_end":8948603,"line_start":117,"line_end":117,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8948608,"byte_end":8948611,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8948616,"byte_end":8948675,"line_start":119,"line_end":119,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8948680,"byte_end":8948683,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8948688,"byte_end":8948709,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8948714,"byte_end":8948717,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8948722,"byte_end":8948736,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8948741,"byte_end":8948744,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8948749,"byte_end":8948756,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8948761,"byte_end":8948793,"line_start":126,"line_end":126,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8948798,"byte_end":8948801,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8948806,"byte_end":8948822,"line_start":128,"line_end":128,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8948827,"byte_end":8948852,"line_start":129,"line_end":129,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8948857,"byte_end":8948894,"line_start":130,"line_end":130,"column_start":5,"column_end":42}},{"value":"/ // Get a handle from this runtime","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8948899,"byte_end":8948936,"line_start":131,"line_end":131,"column_start":5,"column_end":42}},{"value":"/ let handle = rt.handle();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8948941,"byte_end":8948970,"line_start":132,"line_end":132,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8948975,"byte_end":8948978,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future onto the runtime using the handle","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8948983,"byte_end":8949038,"line_start":134,"line_end":134,"column_start":5,"column_end":60}},{"value":"/ handle.spawn(async {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8949043,"byte_end":8949067,"line_start":135,"line_end":135,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8949072,"byte_end":8949123,"line_start":136,"line_end":136,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8949128,"byte_end":8949135,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8949140,"byte_end":8949147,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8949152,"byte_end":8949159,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8949195,"byte_end":8949207,"line_start":140,"line_end":140,"column_start":36,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4384},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8950129,"byte_end":8950143,"line_start":171,"line_end":171,"column_start":12,"column_end":26},"name":"spawn_blocking","qualname":"<Handle>::spawn_blocking","value":"pub fn spawn_blocking<F, R>(&Self, F) -> JoinHandle<R> where F: FnOnce() ->\nR + Send + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Run the provided function on an executor dedicated to blocking\n operations.","sig":null,"attributes":[{"value":"/ Run the provided function on an executor dedicated to blocking","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8949526,"byte_end":8949592,"line_start":151,"line_end":151,"column_start":5,"column_end":71}},{"value":"/ operations.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8949597,"byte_end":8949612,"line_start":152,"line_end":152,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8949617,"byte_end":8949620,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8949625,"byte_end":8949639,"line_start":154,"line_end":154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8949644,"byte_end":8949647,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8949652,"byte_end":8949659,"line_start":156,"line_end":156,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8949664,"byte_end":8949696,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8949701,"byte_end":8949704,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8949709,"byte_end":8949725,"line_start":159,"line_end":159,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8949730,"byte_end":8949755,"line_start":160,"line_end":160,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8949760,"byte_end":8949797,"line_start":161,"line_end":161,"column_start":5,"column_end":42}},{"value":"/ // Get a handle from this runtime","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8949802,"byte_end":8949839,"line_start":162,"line_end":162,"column_start":5,"column_end":42}},{"value":"/ let handle = rt.handle();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8949844,"byte_end":8949873,"line_start":163,"line_end":163,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8949878,"byte_end":8949881,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ // Spawn a blocking function onto the runtime using the handle","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8949886,"byte_end":8949952,"line_start":165,"line_end":165,"column_start":5,"column_end":71}},{"value":"/ handle.spawn_blocking(|| {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8949957,"byte_end":8949987,"line_start":166,"line_end":166,"column_start":5,"column_end":35}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8949992,"byte_end":8950043,"line_start":167,"line_end":167,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8950048,"byte_end":8950055,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8950060,"byte_end":8950067,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8950103,"byte_end":8950115,"line_start":170,"line_end":170,"column_start":36,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":4387},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8951412,"byte_end":8951427,"line_start":207,"line_end":207,"column_start":12,"column_end":27},"name":"TryCurrentError","qualname":"::runtime::handle::TryCurrentError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `try_current` when no Runtime has been started\n","sig":null,"attributes":[{"value":"/ Error returned by `try_current` when no Runtime has been started","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8951332,"byte_end":8951400,"line_start":206,"line_end":206,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":4912},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8810424,"byte_end":8810431,"line_start":264,"line_end":264,"column_start":16,"column_end":23},"name":"Runtime","qualname":"::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":4913},{"krate":0,"index":4914},{"krate":0,"index":4915}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23385,"byte_end":23407,"line_start":263,"line_end":263,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4900},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8812414,"byte_end":8812417,"line_start":321,"line_end":321,"column_start":16,"column_end":19},"name":"new","qualname":"<Runtime>::new","value":"pub fn new() -> std::io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Create a new runtime instance with default configuration values.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-multi-thread\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8812296,"byte_end":8812331,"line_start":319,"line_end":319,"column_start":9,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4901},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8813055,"byte_end":8813061,"line_start":342,"line_end":342,"column_start":16,"column_end":22},"name":"handle","qualname":"<Runtime>::handle","value":"pub fn handle(&Self) -> &Handle","parent":null,"children":[],"decl_id":null,"docs":" Return a handle to the runtime's spawner.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4902},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8813985,"byte_end":8813990,"line_start":372,"line_end":372,"column_start":16,"column_end":21},"name":"spawn","qualname":"<Runtime>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8813955,"byte_end":8813967,"line_start":371,"line_end":371,"column_start":40,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4904},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8814763,"byte_end":8814777,"line_start":397,"line_end":397,"column_start":16,"column_end":30},"name":"spawn_blocking","qualname":"<Runtime>::spawn_blocking","value":"pub fn spawn_blocking<F, R>(&Self, F) -> JoinHandle<R> where F: FnOnce() ->\nR + Send + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Run the provided function on an executor dedicated to blocking operations.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8814733,"byte_end":8814745,"line_start":396,"line_end":396,"column_start":40,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4907},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8816702,"byte_end":8816710,"line_start":446,"line_end":446,"column_start":16,"column_end":24},"name":"block_on","qualname":"<Runtime>::block_on","value":"pub fn block_on<F: Future>(&Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime. This is the\n runtime's entry point.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4909},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8818198,"byte_end":8818203,"line_start":488,"line_end":488,"column_start":16,"column_end":21},"name":"enter","qualname":"<Runtime>::enter","value":"pub fn enter(&Self) -> EnterGuard","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4910},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8819773,"byte_end":8819789,"line_start":527,"line_end":527,"column_start":16,"column_end":32},"name":"shutdown_timeout","qualname":"<Runtime>::shutdown_timeout","value":"pub fn shutdown_timeout(Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, waiting for at most `duration` for all spawned\n task to shutdown.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4911},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8821218,"byte_end":8821237,"line_start":559,"line_end":559,"column_start":16,"column_end":35},"name":"shutdown_background","qualname":"<Runtime>::shutdown_background","value":"pub fn shutdown_background(Self)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, without waiting for any spawned tasks to shutdown.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4964},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","parent":null,"children":[{"krate":0,"index":4965},{"krate":0,"index":4975},{"krate":0,"index":4976},{"krate":0,"index":4977},{"krate":0,"index":4978},{"krate":0,"index":5141},{"krate":0,"index":5547},{"krate":0,"index":5636},{"krate":0,"index":5637},{"krate":0,"index":5638},{"krate":0,"index":5639},{"krate":0,"index":12826},{"krate":0,"index":5640},{"krate":0,"index":5641},{"krate":0,"index":5699},{"krate":0,"index":5700},{"krate":0,"index":5815},{"krate":0,"index":5907},{"krate":0,"index":5908},{"krate":0,"index":5909},{"krate":0,"index":5910},{"krate":0,"index":5943},{"krate":0,"index":5944},{"krate":0,"index":5945},{"krate":0,"index":5946},{"krate":0,"index":5947},{"krate":0,"index":6051},{"krate":0,"index":6052},{"krate":0,"index":6053},{"krate":0,"index":6054},{"krate":0,"index":6055},{"krate":0,"index":6100},{"krate":0,"index":6101}],"decl_id":null,"docs":" Synchronization primitives for use in asynchronous contexts.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23078,"byte_end":23102,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ Synchronization primitives for use in asynchronous contexts.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9017268,"byte_end":9017332,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9017333,"byte_end":9017336,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Tokio programs tend to be organized as a set of [tasks] where each task","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9017337,"byte_end":9017412,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ operates independently and may be executed on separate physical threads. The","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9017413,"byte_end":9017493,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ synchronization primitives provided in this module permit these independent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9017494,"byte_end":9017573,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ tasks to communicate together.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9017574,"byte_end":9017608,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9017609,"byte_end":9017612,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9017613,"byte_end":9017637,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9017638,"byte_end":9017641,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Message passing","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9017642,"byte_end":9017663,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9017664,"byte_end":9017667,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The most common form of synchronization in a Tokio program is message","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9017668,"byte_end":9017741,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ passing. Two tasks operate independently and send messages to each other to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9017742,"byte_end":9017821,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ synchronize. Doing so has the advantage of avoiding shared state.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9017822,"byte_end":9017891,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9017892,"byte_end":9017895,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Message passing is implemented using channels. A channel supports sending a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9017896,"byte_end":9017975,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ message from one producer task to one or more consumer tasks. There are a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9017976,"byte_end":9018053,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ few flavors of channels provided by Tokio. Each channel flavor supports","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9018054,"byte_end":9018129,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ different message passing patterns. When a channel supports multiple","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9018130,"byte_end":9018202,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ producers, many separate tasks may **send** messages. When a channel","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9018203,"byte_end":9018275,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ supports multiple consumers, many different separate tasks may **receive**","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9018276,"byte_end":9018354,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ messages.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9018355,"byte_end":9018368,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9018369,"byte_end":9018372,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Tokio provides many different channel flavors as different message passing","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9018373,"byte_end":9018451,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ patterns are best handled with different implementations.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9018452,"byte_end":9018513,"line_start":27,"line_end":27,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9018514,"byte_end":9018517,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## `oneshot` channel","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9018518,"byte_end":9018542,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9018543,"byte_end":9018546,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The [`oneshot` channel][oneshot] supports sending a **single** value from a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9018547,"byte_end":9018626,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ single producer to a single consumer. This channel is usually used to send","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9018627,"byte_end":9018705,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ the result of a computation to a waiter.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9018706,"byte_end":9018750,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9018751,"byte_end":9018754,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ **Example:** using a [`oneshot` channel][oneshot] to receive the result of a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9018755,"byte_end":9018835,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ computation.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9018836,"byte_end":9018852,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9018853,"byte_end":9018856,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9018857,"byte_end":9018864,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9018865,"byte_end":9018894,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9018895,"byte_end":9018898,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9018899,"byte_end":9018942,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/     \"represents the result of the computation\".to_string()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9018943,"byte_end":9019005,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9019006,"byte_end":9019011,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9019012,"byte_end":9019015,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9019016,"byte_end":9019034,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9019035,"byte_end":9019056,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9019057,"byte_end":9019099,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9019100,"byte_end":9019103,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9019104,"byte_end":9019137,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/         let res = some_computation().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9019138,"byte_end":9019185,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/         tx.send(res).unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9019186,"byte_end":9019220,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9019221,"byte_end":9019232,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9019233,"byte_end":9019236,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9019237,"byte_end":9019314,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9019315,"byte_end":9019318,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9019319,"byte_end":9019361,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/     let res = rx.await.unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9019362,"byte_end":9019398,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9019399,"byte_end":9019404,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9019405,"byte_end":9019412,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9019413,"byte_end":9019416,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Note, if the task produces a computation result as its final","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9019417,"byte_end":9019481,"line_start":61,"line_end":61,"column_start":1,"column_end":65}},{"value":"/ action before terminating, the [`JoinHandle`] can be used to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9019482,"byte_end":9019546,"line_start":62,"line_end":62,"column_start":1,"column_end":65}},{"value":"/ receive that value instead of allocating resources for the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9019547,"byte_end":9019609,"line_start":63,"line_end":63,"column_start":1,"column_end":63}},{"value":"/ `oneshot` channel. Awaiting on [`JoinHandle`] returns `Result`. If","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9019610,"byte_end":9019680,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ the task panics, the `Joinhandle` yields `Err` with the panic","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9019681,"byte_end":9019746,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/ cause.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9019747,"byte_end":9019757,"line_start":66,"line_end":66,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9019758,"byte_end":9019761,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ **Example:**","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9019762,"byte_end":9019778,"line_start":68,"line_end":68,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9019779,"byte_end":9019782,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9019783,"byte_end":9019790,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9019791,"byte_end":9019834,"line_start":71,"line_end":71,"column_start":1,"column_end":44}},{"value":"/     \"the result of the computation\".to_string()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9019835,"byte_end":9019886,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9019887,"byte_end":9019892,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9019893,"byte_end":9019896,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9019897,"byte_end":9019915,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9019916,"byte_end":9019937,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9019938,"byte_end":9019989,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/         some_computation().await","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9019990,"byte_end":9020026,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9020027,"byte_end":9020038,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9020039,"byte_end":9020042,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9020043,"byte_end":9020120,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9020121,"byte_end":9020124,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9020125,"byte_end":9020167,"line_start":83,"line_end":83,"column_start":1,"column_end":43}},{"value":"/     let res = join_handle.await.unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9020168,"byte_end":9020213,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9020214,"byte_end":9020219,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9020220,"byte_end":9020227,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9020228,"byte_end":9020231,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [oneshot]: oneshot","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9020232,"byte_end":9020254,"line_start":88,"line_end":88,"column_start":1,"column_end":23}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9020255,"byte_end":9020298,"line_start":89,"line_end":89,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9020299,"byte_end":9020302,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ## `mpsc` channel","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9020303,"byte_end":9020324,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9020325,"byte_end":9020328,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc` channel][mpsc] supports sending **many** values from **many**","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9020329,"byte_end":9020406,"line_start":93,"line_end":93,"column_start":1,"column_end":78}},{"value":"/ producers to a single consumer. This channel is often used to send work to a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9020407,"byte_end":9020487,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"/ task or to receive the result of many computations.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9020488,"byte_end":9020543,"line_start":95,"line_end":95,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9020544,"byte_end":9020547,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ **Example:** using an mpsc to incrementally stream the results of a series","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9020548,"byte_end":9020626,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ of computations.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9020627,"byte_end":9020647,"line_start":98,"line_end":98,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9020648,"byte_end":9020651,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9020652,"byte_end":9020659,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9020660,"byte_end":9020686,"line_start":101,"line_end":101,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9020687,"byte_end":9020690,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation(input: u32) -> String {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9020691,"byte_end":9020744,"line_start":103,"line_end":103,"column_start":1,"column_end":54}},{"value":"/     format!(\"the result of computation {}\", input)","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9020745,"byte_end":9020799,"line_start":104,"line_end":104,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9020800,"byte_end":9020805,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9020806,"byte_end":9020809,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9020810,"byte_end":9020828,"line_start":107,"line_end":107,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9020829,"byte_end":9020850,"line_start":108,"line_end":108,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9020851,"byte_end":9020897,"line_start":109,"line_end":109,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9020898,"byte_end":9020901,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9020902,"byte_end":9020935,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9020936,"byte_end":9020964,"line_start":112,"line_end":112,"column_start":1,"column_end":29}},{"value":"/             let res = some_computation(i).await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9020965,"byte_end":9021017,"line_start":113,"line_end":113,"column_start":1,"column_end":53}},{"value":"/             tx.send(res).await.unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9021018,"byte_end":9021062,"line_start":114,"line_end":114,"column_start":1,"column_end":45}},{"value":"/         }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9021063,"byte_end":9021076,"line_start":115,"line_end":115,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9021077,"byte_end":9021088,"line_start":116,"line_end":116,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9021089,"byte_end":9021092,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9021093,"byte_end":9021140,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/         println!(\"got = {}\", res);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9021141,"byte_end":9021179,"line_start":119,"line_end":119,"column_start":1,"column_end":39}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9021180,"byte_end":9021189,"line_start":120,"line_end":120,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9021190,"byte_end":9021195,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9021196,"byte_end":9021203,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9021204,"byte_end":9021207,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The argument to `mpsc::channel` is the channel capacity. This is the maximum","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9021208,"byte_end":9021288,"line_start":124,"line_end":124,"column_start":1,"column_end":81}},{"value":"/ number of values that can be stored in the channel pending receipt at any","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9021289,"byte_end":9021366,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ given time. Properly setting this value is key in implementing robust","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9021367,"byte_end":9021440,"line_start":126,"line_end":126,"column_start":1,"column_end":74}},{"value":"/ programs as the channel capacity plays a critical part in handling back","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9021441,"byte_end":9021516,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"/ pressure.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9021517,"byte_end":9021530,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9021531,"byte_end":9021534,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ A common concurrency pattern for resource management is to spawn a task","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9021535,"byte_end":9021610,"line_start":130,"line_end":130,"column_start":1,"column_end":76}},{"value":"/ dedicated to managing that resource and using message passing between other","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9021611,"byte_end":9021690,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ tasks to interact with the resource. The resource may be anything that may","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9021691,"byte_end":9021769,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"/ not be concurrently used. Some examples include a socket and program state.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9021770,"byte_end":9021849,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ For example, if multiple tasks need to send data over a single socket, spawn","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9021850,"byte_end":9021930,"line_start":134,"line_end":134,"column_start":1,"column_end":81}},{"value":"/ a task to manage the socket and use a channel to synchronize.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9021931,"byte_end":9021996,"line_start":135,"line_end":135,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9021997,"byte_end":9022000,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ **Example:** sending data from many tasks over a single socket using message","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9022001,"byte_end":9022081,"line_start":137,"line_end":137,"column_start":1,"column_end":81}},{"value":"/ passing.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9022082,"byte_end":9022094,"line_start":138,"line_end":138,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9022095,"byte_end":9022098,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9022099,"byte_end":9022112,"line_start":140,"line_end":140,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncWriteExt};","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9022113,"byte_end":9022154,"line_start":141,"line_end":141,"column_start":1,"column_end":42}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9022155,"byte_end":9022185,"line_start":142,"line_end":142,"column_start":1,"column_end":31}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9022186,"byte_end":9022212,"line_start":143,"line_end":143,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9022213,"byte_end":9022216,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9022217,"byte_end":9022235,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9022236,"byte_end":9022275,"line_start":146,"line_end":146,"column_start":1,"column_end":40}},{"value":"/     let mut socket = TcpStream::connect(\"www.example.com:1234\").await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9022276,"byte_end":9022351,"line_start":147,"line_end":147,"column_start":1,"column_end":76}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9022352,"byte_end":9022398,"line_start":148,"line_end":148,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9022399,"byte_end":9022402,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..10 {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9022403,"byte_end":9022427,"line_start":150,"line_end":150,"column_start":1,"column_end":25}},{"value":"/         // Each task needs its own `tx` handle. This is done by cloning the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9022428,"byte_end":9022507,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"/         // original handle.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9022508,"byte_end":9022539,"line_start":152,"line_end":152,"column_start":1,"column_end":32}},{"value":"/         let tx = tx.clone();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9022540,"byte_end":9022572,"line_start":153,"line_end":153,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9022573,"byte_end":9022576,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9022577,"byte_end":9022614,"line_start":155,"line_end":155,"column_start":1,"column_end":38}},{"value":"/             tx.send(&b\"data to write\"[..]).await.unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9022615,"byte_end":9022677,"line_start":156,"line_end":156,"column_start":1,"column_end":63}},{"value":"/         });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9022678,"byte_end":9022693,"line_start":157,"line_end":157,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9022694,"byte_end":9022703,"line_start":158,"line_end":158,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9022704,"byte_end":9022707,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/     // The `rx` half of the channel returns `None` once **all** `tx` clones","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9022708,"byte_end":9022787,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/     // drop. To ensure `None` is returned, drop the handle owned by the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9022788,"byte_end":9022863,"line_start":161,"line_end":161,"column_start":1,"column_end":76}},{"value":"/     // current task. If this `tx` handle is not dropped, there will always","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9022864,"byte_end":9022942,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"/     // be a single outstanding `tx` handle.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9022943,"byte_end":9022990,"line_start":163,"line_end":163,"column_start":1,"column_end":48}},{"value":"/     drop(tx);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9022991,"byte_end":9023008,"line_start":164,"line_end":164,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9023009,"byte_end":9023012,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9023013,"byte_end":9023060,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/         socket.write_all(res).await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9023061,"byte_end":9023102,"line_start":167,"line_end":167,"column_start":1,"column_end":42}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9023103,"byte_end":9023112,"line_start":168,"line_end":168,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9023113,"byte_end":9023116,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9023117,"byte_end":9023131,"line_start":170,"line_end":170,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9023132,"byte_end":9023137,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9023138,"byte_end":9023145,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9023146,"byte_end":9023149,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc`][mpsc] and [`oneshot`][oneshot] channels can be combined to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9023150,"byte_end":9023225,"line_start":174,"line_end":174,"column_start":1,"column_end":76}},{"value":"/ provide a request / response type synchronization pattern with a shared","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9023226,"byte_end":9023301,"line_start":175,"line_end":175,"column_start":1,"column_end":76}},{"value":"/ resource. A task is spawned to synchronize a resource and waits on commands","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9023302,"byte_end":9023381,"line_start":176,"line_end":176,"column_start":1,"column_end":80}},{"value":"/ received on a [`mpsc`][mpsc] channel. Each command includes a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9023382,"byte_end":9023447,"line_start":177,"line_end":177,"column_start":1,"column_end":66}},{"value":"/ [`oneshot`][oneshot] `Sender` on which the result of the command is sent.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9023448,"byte_end":9023525,"line_start":178,"line_end":178,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9023526,"byte_end":9023529,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a task to synchronize a `u64` counter. Each task sends an","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9023530,"byte_end":9023608,"line_start":180,"line_end":180,"column_start":1,"column_end":79}},{"value":"/ \"fetch and increment\" command. The counter value **before** the increment is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9023609,"byte_end":9023689,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ sent over the provided `oneshot` channel.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9023690,"byte_end":9023735,"line_start":182,"line_end":182,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9023736,"byte_end":9023739,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9023740,"byte_end":9023747,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::{oneshot, mpsc};","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9023748,"byte_end":9023785,"line_start":185,"line_end":185,"column_start":1,"column_end":38}},{"value":"/ use Command::Increment;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9023786,"byte_end":9023813,"line_start":186,"line_end":186,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9023814,"byte_end":9023817,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9023818,"byte_end":9023836,"line_start":188,"line_end":188,"column_start":1,"column_end":19}},{"value":"/     Increment,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9023837,"byte_end":9023855,"line_start":189,"line_end":189,"column_start":1,"column_end":19}},{"value":"/     // Other commands can be added here","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9023856,"byte_end":9023899,"line_start":190,"line_end":190,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9023900,"byte_end":9023905,"line_start":191,"line_end":191,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9023906,"byte_end":9023909,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9023910,"byte_end":9023928,"line_start":193,"line_end":193,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9023929,"byte_end":9023950,"line_start":194,"line_end":194,"column_start":1,"column_end":22}},{"value":"/     let (cmd_tx, mut cmd_rx) = mpsc::channel::<(Command, oneshot::Sender<u64>)>(100);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9023951,"byte_end":9024040,"line_start":195,"line_end":195,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9024041,"byte_end":9024044,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to manage the counter","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9024045,"byte_end":9024090,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9024091,"byte_end":9024124,"line_start":198,"line_end":198,"column_start":1,"column_end":34}},{"value":"/         let mut counter: u64 = 0;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9024125,"byte_end":9024162,"line_start":199,"line_end":199,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9024163,"byte_end":9024166,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/         while let Some((cmd, response)) = cmd_rx.recv().await {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9024167,"byte_end":9024234,"line_start":201,"line_end":201,"column_start":1,"column_end":68}},{"value":"/             match cmd {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9024235,"byte_end":9024262,"line_start":202,"line_end":202,"column_start":1,"column_end":28}},{"value":"/                 Increment => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9024263,"byte_end":9024297,"line_start":203,"line_end":203,"column_start":1,"column_end":35}},{"value":"/                     let prev = counter;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9024298,"byte_end":9024341,"line_start":204,"line_end":204,"column_start":1,"column_end":44}},{"value":"/                     counter += 1;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9024342,"byte_end":9024379,"line_start":205,"line_end":205,"column_start":1,"column_end":38}},{"value":"/                     response.send(prev).unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9024380,"byte_end":9024433,"line_start":206,"line_end":206,"column_start":1,"column_end":54}},{"value":"/                 }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9024434,"byte_end":9024455,"line_start":207,"line_end":207,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9024456,"byte_end":9024473,"line_start":208,"line_end":208,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9024474,"byte_end":9024487,"line_start":209,"line_end":209,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9024488,"byte_end":9024499,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9024500,"byte_end":9024503,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/     let mut join_handles = vec![];","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9024504,"byte_end":9024542,"line_start":212,"line_end":212,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9024543,"byte_end":9024546,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that will send the increment command.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9024547,"byte_end":9024607,"line_start":214,"line_end":214,"column_start":1,"column_end":61}},{"value":"/     for _ in 0..10 {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9024608,"byte_end":9024632,"line_start":215,"line_end":215,"column_start":1,"column_end":25}},{"value":"/         let cmd_tx = cmd_tx.clone();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9024633,"byte_end":9024673,"line_start":216,"line_end":216,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9024674,"byte_end":9024677,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/         join_handles.push(tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9024678,"byte_end":9024733,"line_start":218,"line_end":218,"column_start":1,"column_end":56}},{"value":"/             let (resp_tx, resp_rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9024734,"byte_end":9024794,"line_start":219,"line_end":219,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9024795,"byte_end":9024798,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/             cmd_tx.send((Increment, resp_tx)).await.ok().unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9024799,"byte_end":9024869,"line_start":221,"line_end":221,"column_start":1,"column_end":71}},{"value":"/             let res = resp_rx.await.unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9024870,"byte_end":9024919,"line_start":222,"line_end":222,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9024920,"byte_end":9024923,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/             println!(\"previous value = {}\", res);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9024924,"byte_end":9024977,"line_start":224,"line_end":224,"column_start":1,"column_end":54}},{"value":"/         }));","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9024978,"byte_end":9024994,"line_start":225,"line_end":225,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9024995,"byte_end":9025004,"line_start":226,"line_end":226,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9025005,"byte_end":9025008,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/     // Wait for all tasks to complete","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9025009,"byte_end":9025050,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/     for join_handle in join_handles.drain(..) {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9025051,"byte_end":9025102,"line_start":229,"line_end":229,"column_start":1,"column_end":52}},{"value":"/         join_handle.await.unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9025103,"byte_end":9025142,"line_start":230,"line_end":230,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9025143,"byte_end":9025152,"line_start":231,"line_end":231,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9025153,"byte_end":9025158,"line_start":232,"line_end":232,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9025159,"byte_end":9025166,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9025167,"byte_end":9025170,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ [mpsc]: mpsc","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9025171,"byte_end":9025187,"line_start":235,"line_end":235,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9025188,"byte_end":9025191,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ## `broadcast` channel","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9025192,"byte_end":9025218,"line_start":237,"line_end":237,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9025219,"byte_end":9025222,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The [`broadcast` channel] supports sending **many** values from","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9025223,"byte_end":9025290,"line_start":239,"line_end":239,"column_start":1,"column_end":68}},{"value":"/ **many** producers to **many** consumers. Each consumer will receive","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9025291,"byte_end":9025363,"line_start":240,"line_end":240,"column_start":1,"column_end":73}},{"value":"/ **each** value. This channel can be used to implement \"fan out\" style","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9025364,"byte_end":9025437,"line_start":241,"line_end":241,"column_start":1,"column_end":74}},{"value":"/ patterns common with pub / sub or \"chat\" systems.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9025438,"byte_end":9025491,"line_start":242,"line_end":242,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9025492,"byte_end":9025495,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ This channel tends to be used less often than `oneshot` and `mpsc` but still","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9025496,"byte_end":9025576,"line_start":244,"line_end":244,"column_start":1,"column_end":81}},{"value":"/ has its use cases.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9025577,"byte_end":9025599,"line_start":245,"line_end":245,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9025600,"byte_end":9025603,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9025604,"byte_end":9025619,"line_start":247,"line_end":247,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9025620,"byte_end":9025623,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9025624,"byte_end":9025631,"line_start":249,"line_end":249,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9025632,"byte_end":9025663,"line_start":250,"line_end":250,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9025664,"byte_end":9025667,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9025668,"byte_end":9025686,"line_start":252,"line_end":252,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9025687,"byte_end":9025708,"line_start":253,"line_end":253,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9025709,"byte_end":9025760,"line_start":254,"line_end":254,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9025761,"byte_end":9025798,"line_start":255,"line_end":255,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9025799,"byte_end":9025802,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9025803,"byte_end":9025836,"line_start":257,"line_end":257,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9025837,"byte_end":9025891,"line_start":258,"line_end":258,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9025892,"byte_end":9025946,"line_start":259,"line_end":259,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9025947,"byte_end":9025958,"line_start":260,"line_end":260,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9025959,"byte_end":9025962,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9025963,"byte_end":9025996,"line_start":262,"line_end":262,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9025997,"byte_end":9026051,"line_start":263,"line_end":263,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9026052,"byte_end":9026106,"line_start":264,"line_end":264,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9026107,"byte_end":9026118,"line_start":265,"line_end":265,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9026119,"byte_end":9026122,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9026123,"byte_end":9026152,"line_start":267,"line_end":267,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9026153,"byte_end":9026182,"line_start":268,"line_end":268,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9026183,"byte_end":9026188,"line_start":269,"line_end":269,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9026189,"byte_end":9026196,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9026197,"byte_end":9026200,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ [`broadcast` channel]: crate::sync::broadcast","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9026201,"byte_end":9026250,"line_start":272,"line_end":272,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9026251,"byte_end":9026254,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ ## `watch` channel","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9026255,"byte_end":9026277,"line_start":274,"line_end":274,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9026278,"byte_end":9026281,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] supports sending **many** values from a **single**","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9026282,"byte_end":9026358,"line_start":276,"line_end":276,"column_start":1,"column_end":77}},{"value":"/ producer to **many** consumers. However, only the **most recent** value is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9026359,"byte_end":9026437,"line_start":277,"line_end":277,"column_start":1,"column_end":79}},{"value":"/ stored in the channel. Consumers are notified when a new value is sent, but","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9026438,"byte_end":9026517,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/ there is no guarantee that consumers will see **all** values.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9026518,"byte_end":9026583,"line_start":279,"line_end":279,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9026584,"byte_end":9026587,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] is similar to a [`broadcast` channel] with capacity 1.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9026588,"byte_end":9026668,"line_start":281,"line_end":281,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9026669,"byte_end":9026672,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ Use cases for the [`watch` channel] include broadcasting configuration","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9026673,"byte_end":9026747,"line_start":283,"line_end":283,"column_start":1,"column_end":75}},{"value":"/ changes or signalling program state changes, such as transitioning to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9026748,"byte_end":9026821,"line_start":284,"line_end":284,"column_start":1,"column_end":74}},{"value":"/ shutdown.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9026822,"byte_end":9026835,"line_start":285,"line_end":285,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9026836,"byte_end":9026839,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a [`watch` channel] to notify tasks of configuration","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9026840,"byte_end":9026913,"line_start":287,"line_end":287,"column_start":1,"column_end":74}},{"value":"/ changes. In this example, a configuration file is checked periodically. When","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9026914,"byte_end":9026994,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/ the file changes, the configuration changes are signalled to consumers.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9026995,"byte_end":9027070,"line_start":289,"line_end":289,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9027071,"byte_end":9027074,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9027075,"byte_end":9027082,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9027083,"byte_end":9027110,"line_start":292,"line_end":292,"column_start":1,"column_end":28}},{"value":"/ use tokio::time::{self, Duration, Instant};","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9027111,"byte_end":9027158,"line_start":293,"line_end":293,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9027159,"byte_end":9027162,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9027163,"byte_end":9027179,"line_start":295,"line_end":295,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9027180,"byte_end":9027183,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Clone, Eq, PartialEq)]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9027184,"byte_end":9027226,"line_start":297,"line_end":297,"column_start":1,"column_end":43}},{"value":"/ struct Config {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9027227,"byte_end":9027246,"line_start":298,"line_end":298,"column_start":1,"column_end":20}},{"value":"/     timeout: Duration,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9027247,"byte_end":9027273,"line_start":299,"line_end":299,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9027274,"byte_end":9027279,"line_start":300,"line_end":300,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9027280,"byte_end":9027283,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ impl Config {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9027284,"byte_end":9027301,"line_start":302,"line_end":302,"column_start":1,"column_end":18}},{"value":"/     async fn load_from_file() -> io::Result<Config> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9027302,"byte_end":9027359,"line_start":303,"line_end":303,"column_start":1,"column_end":58}},{"value":"/         // file loading and deserialization logic here","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9027360,"byte_end":9027418,"line_start":304,"line_end":304,"column_start":1,"column_end":59}},{"value":"/ # Ok(Config { timeout: Duration::from_secs(1) })","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9027419,"byte_end":9027471,"line_start":305,"line_end":305,"column_start":1,"column_end":53}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9027472,"byte_end":9027481,"line_start":306,"line_end":306,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9027482,"byte_end":9027487,"line_start":307,"line_end":307,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9027488,"byte_end":9027491,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ async fn my_async_operation() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9027492,"byte_end":9027527,"line_start":309,"line_end":309,"column_start":1,"column_end":36}},{"value":"/     // Do something here","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9027528,"byte_end":9027556,"line_start":310,"line_end":310,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9027557,"byte_end":9027562,"line_start":311,"line_end":311,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9027563,"byte_end":9027566,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9027567,"byte_end":9027585,"line_start":313,"line_end":313,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9027586,"byte_end":9027607,"line_start":314,"line_end":314,"column_start":1,"column_end":22}},{"value":"/     // Load initial configuration value","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9027608,"byte_end":9027651,"line_start":315,"line_end":315,"column_start":1,"column_end":44}},{"value":"/     let mut config = Config::load_from_file().await.unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9027652,"byte_end":9027717,"line_start":316,"line_end":316,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9027718,"byte_end":9027721,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/     // Create the watch channel, initialized with the loaded configuration","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9027722,"byte_end":9027800,"line_start":318,"line_end":318,"column_start":1,"column_end":79}},{"value":"/     let (tx, rx) = watch::channel(config.clone());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9027801,"byte_end":9027855,"line_start":319,"line_end":319,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9027856,"byte_end":9027859,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to monitor the file.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9027860,"byte_end":9027904,"line_start":321,"line_end":321,"column_start":1,"column_end":45}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9027905,"byte_end":9027938,"line_start":322,"line_end":322,"column_start":1,"column_end":34}},{"value":"/         loop {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9027939,"byte_end":9027957,"line_start":323,"line_end":323,"column_start":1,"column_end":19}},{"value":"/             // Wait 10 seconds between checks","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9027958,"byte_end":9028007,"line_start":324,"line_end":324,"column_start":1,"column_end":50}},{"value":"/             time::sleep(Duration::from_secs(10)).await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9028008,"byte_end":9028067,"line_start":325,"line_end":325,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9028068,"byte_end":9028071,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/             // Load the configuration file","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9028072,"byte_end":9028118,"line_start":327,"line_end":327,"column_start":1,"column_end":47}},{"value":"/             let new_config = Config::load_from_file().await.unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9028119,"byte_end":9028192,"line_start":328,"line_end":328,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9028193,"byte_end":9028196,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/             // If the configuration changed, send the new config value","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9028197,"byte_end":9028271,"line_start":330,"line_end":330,"column_start":1,"column_end":75}},{"value":"/             // on the watch channel.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9028272,"byte_end":9028312,"line_start":331,"line_end":331,"column_start":1,"column_end":41}},{"value":"/             if new_config != config {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9028313,"byte_end":9028354,"line_start":332,"line_end":332,"column_start":1,"column_end":42}},{"value":"/                 tx.send(new_config.clone()).unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9028355,"byte_end":9028412,"line_start":333,"line_end":333,"column_start":1,"column_end":58}},{"value":"/                 config = new_config;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9028413,"byte_end":9028453,"line_start":334,"line_end":334,"column_start":1,"column_end":41}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9028454,"byte_end":9028471,"line_start":335,"line_end":335,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9028472,"byte_end":9028485,"line_start":336,"line_end":336,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9028486,"byte_end":9028497,"line_start":337,"line_end":337,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9028498,"byte_end":9028501,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/     let mut handles = vec![];","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9028502,"byte_end":9028535,"line_start":339,"line_end":339,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9028536,"byte_end":9028539,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that runs the async operation for at most `timeout`. If","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9028540,"byte_end":9028618,"line_start":341,"line_end":341,"column_start":1,"column_end":79}},{"value":"/     // the timeout elapses, restart the operation.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9028619,"byte_end":9028673,"line_start":342,"line_end":342,"column_start":1,"column_end":55}},{"value":"/     //","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9028674,"byte_end":9028684,"line_start":343,"line_end":343,"column_start":1,"column_end":11}},{"value":"/     // The task simultaneously watches the `Config` for changes. When the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9028685,"byte_end":9028762,"line_start":344,"line_end":344,"column_start":1,"column_end":78}},{"value":"/     // timeout duration changes, the timeout is updated without restarting","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9028763,"byte_end":9028841,"line_start":345,"line_end":345,"column_start":1,"column_end":79}},{"value":"/     // the in-flight operation.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9028842,"byte_end":9028877,"line_start":346,"line_end":346,"column_start":1,"column_end":36}},{"value":"/     for _ in 0..5 {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9028878,"byte_end":9028901,"line_start":347,"line_end":347,"column_start":1,"column_end":24}},{"value":"/         // Clone a config watch handle for use in this task","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9028902,"byte_end":9028965,"line_start":348,"line_end":348,"column_start":1,"column_end":64}},{"value":"/         let mut rx = rx.clone();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9028966,"byte_end":9029002,"line_start":349,"line_end":349,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9029003,"byte_end":9029006,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/         let handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9029007,"byte_end":9029057,"line_start":351,"line_end":351,"column_start":1,"column_end":51}},{"value":"/             // Start the initial operation and pin the future to the stack.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9029058,"byte_end":9029137,"line_start":352,"line_end":352,"column_start":1,"column_end":80}},{"value":"/             // Pinning to the stack is required to resume the operation","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9029138,"byte_end":9029213,"line_start":353,"line_end":353,"column_start":1,"column_end":76}},{"value":"/             // across multiple calls to `select!`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9029214,"byte_end":9029267,"line_start":354,"line_end":354,"column_start":1,"column_end":54}},{"value":"/             let op = my_async_operation();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9029268,"byte_end":9029314,"line_start":355,"line_end":355,"column_start":1,"column_end":47}},{"value":"/             tokio::pin!(op);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9029315,"byte_end":9029347,"line_start":356,"line_end":356,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9029348,"byte_end":9029351,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/             // Get the initial config value","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9029352,"byte_end":9029399,"line_start":358,"line_end":358,"column_start":1,"column_end":48}},{"value":"/             let mut conf = rx.borrow().clone();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9029400,"byte_end":9029451,"line_start":359,"line_end":359,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9029452,"byte_end":9029455,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/             let mut op_start = Instant::now();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9029456,"byte_end":9029506,"line_start":361,"line_end":361,"column_start":1,"column_end":51}},{"value":"/             let sleep = time::sleep_until(op_start + conf.timeout);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9029507,"byte_end":9029578,"line_start":362,"line_end":362,"column_start":1,"column_end":72}},{"value":"/             tokio::pin!(sleep);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9029579,"byte_end":9029614,"line_start":363,"line_end":363,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9029615,"byte_end":9029618,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/             loop {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9029619,"byte_end":9029641,"line_start":365,"line_end":365,"column_start":1,"column_end":23}},{"value":"/                 tokio::select! {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9029642,"byte_end":9029678,"line_start":366,"line_end":366,"column_start":1,"column_end":37}},{"value":"/                     _ = &mut sleep => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9029679,"byte_end":9029722,"line_start":367,"line_end":367,"column_start":1,"column_end":44}},{"value":"/                         // The operation elapsed. Restart it","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9029723,"byte_end":9029787,"line_start":368,"line_end":368,"column_start":1,"column_end":65}},{"value":"/                         op.set(my_async_operation());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9029788,"byte_end":9029845,"line_start":369,"line_end":369,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9029846,"byte_end":9029849,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/                         // Track the new start time","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9029850,"byte_end":9029905,"line_start":371,"line_end":371,"column_start":1,"column_end":56}},{"value":"/                         op_start = Instant::now();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9029906,"byte_end":9029960,"line_start":372,"line_end":372,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9029961,"byte_end":9029964,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/                         // Restart the timeout","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9029965,"byte_end":9030015,"line_start":374,"line_end":374,"column_start":1,"column_end":51}},{"value":"/                         sleep.set(time::sleep_until(op_start + conf.timeout));","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9030016,"byte_end":9030098,"line_start":375,"line_end":375,"column_start":1,"column_end":83}},{"value":"/                     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9030099,"byte_end":9030124,"line_start":376,"line_end":376,"column_start":1,"column_end":26}},{"value":"/                     _ = rx.changed() => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9030125,"byte_end":9030170,"line_start":377,"line_end":377,"column_start":1,"column_end":46}},{"value":"/                         conf = rx.borrow().clone();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9030171,"byte_end":9030226,"line_start":378,"line_end":378,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9030227,"byte_end":9030230,"line_start":379,"line_end":379,"column_start":1,"column_end":4}},{"value":"/                         // The configuration has been updated. Update the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9030231,"byte_end":9030308,"line_start":380,"line_end":380,"column_start":1,"column_end":78}},{"value":"/                         // `sleep` using the new `timeout` value.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9030309,"byte_end":9030378,"line_start":381,"line_end":381,"column_start":1,"column_end":70}},{"value":"/                         sleep.as_mut().reset(op_start + conf.timeout);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9030379,"byte_end":9030453,"line_start":382,"line_end":382,"column_start":1,"column_end":75}},{"value":"/                     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9030454,"byte_end":9030479,"line_start":383,"line_end":383,"column_start":1,"column_end":26}},{"value":"/                     _ = &mut op => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9030480,"byte_end":9030520,"line_start":384,"line_end":384,"column_start":1,"column_end":41}},{"value":"/                         // The operation completed!","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9030521,"byte_end":9030576,"line_start":385,"line_end":385,"column_start":1,"column_end":56}},{"value":"/                         return","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9030577,"byte_end":9030611,"line_start":386,"line_end":386,"column_start":1,"column_end":35}},{"value":"/                     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9030612,"byte_end":9030637,"line_start":387,"line_end":387,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9030638,"byte_end":9030659,"line_start":388,"line_end":388,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9030660,"byte_end":9030677,"line_start":389,"line_end":389,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9030678,"byte_end":9030693,"line_start":390,"line_end":390,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9030694,"byte_end":9030697,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/         handles.push(handle);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9030698,"byte_end":9030731,"line_start":392,"line_end":392,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9030732,"byte_end":9030741,"line_start":393,"line_end":393,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9030742,"byte_end":9030745,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/     for handle in handles.drain(..) {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9030746,"byte_end":9030787,"line_start":395,"line_end":395,"column_start":1,"column_end":42}},{"value":"/         handle.await.unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9030788,"byte_end":9030822,"line_start":396,"line_end":396,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9030823,"byte_end":9030832,"line_start":397,"line_end":397,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9030833,"byte_end":9030838,"line_start":398,"line_end":398,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9030839,"byte_end":9030846,"line_start":399,"line_end":399,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9030847,"byte_end":9030850,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ [`watch` channel]: mod@crate::sync::watch","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9030851,"byte_end":9030896,"line_start":401,"line_end":401,"column_start":1,"column_end":46}},{"value":"/ [`broadcast` channel]: mod@crate::sync::broadcast","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9030897,"byte_end":9030950,"line_start":402,"line_end":402,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9030951,"byte_end":9030954,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ # State synchronization","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9030955,"byte_end":9030982,"line_start":404,"line_end":404,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9030983,"byte_end":9030986,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ The remaining synchronization primitives focus on synchronizing state.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9030987,"byte_end":9031061,"line_start":406,"line_end":406,"column_start":1,"column_end":75}},{"value":"/ These are asynchronous equivalents to versions provided by `std`. They","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9031062,"byte_end":9031136,"line_start":407,"line_end":407,"column_start":1,"column_end":75}},{"value":"/ operate in a similar way as their `std` counterparts but will wait","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9031137,"byte_end":9031207,"line_start":408,"line_end":408,"column_start":1,"column_end":71}},{"value":"/ asynchronously instead of blocking the thread.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9031208,"byte_end":9031258,"line_start":409,"line_end":409,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9031259,"byte_end":9031262,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ * [`Barrier`](Barrier) Ensures multiple tasks will wait for each other to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9031263,"byte_end":9031340,"line_start":411,"line_end":411,"column_start":1,"column_end":78}},{"value":"/   reach a point in the program, before continuing execution all together.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9031341,"byte_end":9031418,"line_start":412,"line_end":412,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9031419,"byte_end":9031422,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ * [`Mutex`](Mutex) Mutual Exclusion mechanism, which ensures that at most","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9031423,"byte_end":9031500,"line_start":414,"line_end":414,"column_start":1,"column_end":78}},{"value":"/   one thread at a time is able to access some data.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9031501,"byte_end":9031556,"line_start":415,"line_end":415,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9031557,"byte_end":9031560,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ * [`Notify`](Notify) Basic task notification. `Notify` supports notifying a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9031561,"byte_end":9031640,"line_start":417,"line_end":417,"column_start":1,"column_end":80}},{"value":"/   receiving task without sending data. In this case, the task wakes up and","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9031641,"byte_end":9031719,"line_start":418,"line_end":418,"column_start":1,"column_end":79}},{"value":"/   resumes processing.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9031720,"byte_end":9031745,"line_start":419,"line_end":419,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9031746,"byte_end":9031749,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ * [`RwLock`](RwLock) Provides a mutual exclusion mechanism which allows","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9031750,"byte_end":9031825,"line_start":421,"line_end":421,"column_start":1,"column_end":76}},{"value":"/   multiple readers at the same time, while allowing only one writer at a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9031826,"byte_end":9031902,"line_start":422,"line_end":422,"column_start":1,"column_end":77}},{"value":"/   time. In some cases, this can be more efficient than a mutex.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9031903,"byte_end":9031970,"line_start":423,"line_end":423,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9031971,"byte_end":9031974,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ * [`Semaphore`](Semaphore) Limits the amount of concurrency. A semaphore","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9031975,"byte_end":9032051,"line_start":425,"line_end":425,"column_start":1,"column_end":77}},{"value":"/   holds a number of permits, which tasks may request in order to enter a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9032052,"byte_end":9032128,"line_start":426,"line_end":426,"column_start":1,"column_end":77}},{"value":"/   critical section. Semaphores are useful for implementing limiting or","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9032129,"byte_end":9032203,"line_start":427,"line_end":427,"column_start":1,"column_end":75}},{"value":"/   bounding of any kind.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9032204,"byte_end":9032231,"line_start":428,"line_end":428,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":6154},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9034540,"byte_end":9034547,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"Barrier","qualname":"::sync::barrier::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":6155},{"krate":0,"index":6156},{"krate":0,"index":6157}],"decl_id":null,"docs":" A barrier enables multiple threads to synchronize the beginning of some computation.","sig":null,"attributes":[{"value":"/ A barrier enables multiple threads to synchronize the beginning of some computation.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9033587,"byte_end":9033675,"line_start":5,"line_end":5,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9033676,"byte_end":9033679,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9033680,"byte_end":9033687,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9033688,"byte_end":9033708,"line_start":8,"line_end":8,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9033709,"byte_end":9033732,"line_start":9,"line_end":9,"column_start":1,"column_end":24}},{"value":"/ use tokio::sync::Barrier;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9033733,"byte_end":9033762,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9033763,"byte_end":9033766,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ use futures::future::join_all;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9033767,"byte_end":9033801,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9033802,"byte_end":9033825,"line_start":13,"line_end":13,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9033826,"byte_end":9033829,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let mut handles = Vec::with_capacity(10);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9033830,"byte_end":9033875,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ let barrier = Arc::new(Barrier::new(10));","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9033876,"byte_end":9033921,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/ for _ in 0..10 {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9033922,"byte_end":9033942,"line_start":17,"line_end":17,"column_start":1,"column_end":21}},{"value":"/     let c = barrier.clone();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9033943,"byte_end":9033975,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/     // The same messages will be printed together.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9033976,"byte_end":9034030,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/     // You will NOT see any interleaving.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9034031,"byte_end":9034076,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/     handles.push(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9034077,"byte_end":9034110,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/         println!(\"before wait\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9034111,"byte_end":9034147,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/         let wr = c.wait().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9034148,"byte_end":9034184,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/         println!(\"after wait\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9034185,"byte_end":9034220,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/         wr","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9034221,"byte_end":9034235,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9034236,"byte_end":9034247,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9034248,"byte_end":9034253,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ // Will not resolve until all \"before wait\" messages have been printed","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9034254,"byte_end":9034328,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ let wrs = join_all(handles).await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9034329,"byte_end":9034367,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/ // Exactly one barrier will resolve as the \"leader\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9034368,"byte_end":9034423,"line_start":30,"line_end":30,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(wrs.into_iter().filter(|wr| wr.is_leader()).count(), 1);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9034424,"byte_end":9034495,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9034496,"byte_end":9034503,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9034504,"byte_end":9034511,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4969},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9035010,"byte_end":9035013,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<Barrier>::new","value":"pub fn new(usize) -> Barrier","parent":null,"children":[],"decl_id":null,"docs":" Creates a new barrier that can block a given number of threads.","sig":null,"attributes":[{"value":"/ Creates a new barrier that can block a given number of threads.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9034770,"byte_end":9034837,"line_start":49,"line_end":49,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9034842,"byte_end":9034845,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ A barrier will block `n`-1 threads which call [`Barrier::wait`] and then wake up all","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9034850,"byte_end":9034938,"line_start":51,"line_end":51,"column_start":5,"column_end":93}},{"value":"/ threads at once when the `n`th thread calls `wait`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9034943,"byte_end":9034998,"line_start":52,"line_end":52,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4970},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9036086,"byte_end":9036090,"line_start":82,"line_end":82,"column_start":18,"column_end":22},"name":"wait","qualname":"<Barrier>::wait","value":"pub async fn wait<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Does not resolve until all tasks have rendezvoused here.","sig":null,"attributes":[{"value":"/ Does not resolve until all tasks have rendezvoused here.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9035612,"byte_end":9035672,"line_start":74,"line_end":74,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9035677,"byte_end":9035680,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Barriers are re-usable after all threads have rendezvoused once, and can","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9035685,"byte_end":9035761,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ be used continuously.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9035766,"byte_end":9035791,"line_start":77,"line_end":77,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9035796,"byte_end":9035799,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ A single (arbitrary) future will receive a [`BarrierWaitResult`] that returns `true` from","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9035804,"byte_end":9035897,"line_start":79,"line_end":79,"column_start":5,"column_end":98}},{"value":"/ [`BarrierWaitResult::is_leader`] when returning from this function, and all other threads","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9035902,"byte_end":9035995,"line_start":80,"line_end":80,"column_start":5,"column_end":98}},{"value":"/ will receive a result that will return `false` from `is_leader`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9036000,"byte_end":9036068,"line_start":81,"line_end":81,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":6166},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9038011,"byte_end":9038028,"line_start":128,"line_end":128,"column_start":12,"column_end":29},"name":"BarrierWaitResult","qualname":"::sync::barrier::BarrierWaitResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.\n","sig":null,"attributes":[{"value":"/ A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9037875,"byte_end":9037975,"line_start":126,"line_end":126,"column_start":1,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":4974},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9038276,"byte_end":9038285,"line_start":135,"line_end":135,"column_start":12,"column_end":21},"name":"is_leader","qualname":"<BarrierWaitResult>::is_leader","value":"pub fn is_leader(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this thread from wait is the \"leader thread\".","sig":null,"attributes":[{"value":"/ Returns `true` if this thread from wait is the \"leader thread\".","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9038066,"byte_end":9038133,"line_start":131,"line_end":131,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9038138,"byte_end":9038141,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Only one thread will have `true` returned from their result, all other threads will have","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9038146,"byte_end":9038238,"line_start":133,"line_end":133,"column_start":5,"column_end":97}},{"value":"/ `false` returned.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9038243,"byte_end":9038264,"line_start":134,"line_end":134,"column_start":5,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":4978},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"broadcast","qualname":"::sync::broadcast","value":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","parent":null,"children":[{"krate":0,"index":4979},{"krate":0,"index":4980},{"krate":0,"index":4981},{"krate":0,"index":4982},{"krate":0,"index":4983},{"krate":0,"index":4984},{"krate":0,"index":4985},{"krate":0,"index":4986},{"krate":0,"index":4987},{"krate":0,"index":4988},{"krate":0,"index":4989},{"krate":0,"index":4990},{"krate":0,"index":4991},{"krate":0,"index":12640},{"krate":0,"index":4992},{"krate":0,"index":4993},{"krate":0,"index":4994},{"krate":0,"index":12646},{"krate":0,"index":4995},{"krate":0,"index":4996},{"krate":0,"index":4997},{"krate":0,"index":4998},{"krate":0,"index":4999},{"krate":0,"index":5000},{"krate":0,"index":5003},{"krate":0,"index":5007},{"krate":0,"index":5020},{"krate":0,"index":5021},{"krate":0,"index":5027},{"krate":0,"index":5032},{"krate":0,"index":5038},{"krate":0,"index":5043},{"krate":0,"index":5047},{"krate":0,"index":5052},{"krate":0,"index":5055},{"krate":0,"index":5058},{"krate":0,"index":5059},{"krate":0,"index":5061},{"krate":0,"index":5063},{"krate":0,"index":5065},{"krate":0,"index":5067},{"krate":0,"index":5069},{"krate":0,"index":5078},{"krate":0,"index":5080},{"krate":0,"index":5082},{"krate":0,"index":5085},{"krate":0,"index":5088},{"krate":0,"index":5092},{"krate":0,"index":5098},{"krate":0,"index":5101},{"krate":0,"index":5106},{"krate":0,"index":5111},{"krate":0,"index":5117},{"krate":0,"index":5123},{"krate":0,"index":5126},{"krate":0,"index":5129},{"krate":0,"index":5134},{"krate":0,"index":5139}],"decl_id":null,"docs":" A multi-producer, multi-consumer broadcast queue. Each sent value is seen by\n all consumers.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23078,"byte_end":23102,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, multi-consumer broadcast queue. Each sent value is seen by","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9038327,"byte_end":9038407,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"/ all consumers.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9038408,"byte_end":9038426,"line_start":2,"line_end":2,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9038427,"byte_end":9038430,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ A [`Sender`] is used to broadcast values to **all** connected [`Receiver`]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9038431,"byte_end":9038509,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ values. [`Sender`] handles are clone-able, allowing concurrent send and","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9038510,"byte_end":9038585,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ receive actions. [`Sender`] and [`Receiver`] are both `Send` and `Sync` as","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9038586,"byte_end":9038664,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ long as `T` is also `Send` or `Sync` respectively.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9038665,"byte_end":9038719,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9038720,"byte_end":9038723,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ When a value is sent, **all** [`Receiver`] handles are notified and will","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9038724,"byte_end":9038800,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ receive the value. The value is stored once inside the channel and cloned on","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9038801,"byte_end":9038881,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ demand for each receiver. Once all receivers have received a clone of the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9038882,"byte_end":9038959,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ value, the value is released from the channel.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9038960,"byte_end":9039010,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9039011,"byte_end":9039014,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A channel is created by calling [`channel`], specifying the maximum number","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9039015,"byte_end":9039093,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ of messages the channel can retain at any given time.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9039094,"byte_end":9039151,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9039152,"byte_end":9039155,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ New [`Receiver`] handles are created by calling [`Sender::subscribe`]. The","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9039156,"byte_end":9039234,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ returned [`Receiver`] will receive values sent **after** the call to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9039235,"byte_end":9039307,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `subscribe`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9039308,"byte_end":9039324,"line_start":19,"line_end":19,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9039325,"byte_end":9039328,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ## Lagging","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9039329,"byte_end":9039343,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9039344,"byte_end":9039347,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ As sent messages must be retained until **all** [`Receiver`] handles receive","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9039348,"byte_end":9039428,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ a clone, broadcast channels are susceptible to the \"slow receiver\" problem.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9039429,"byte_end":9039508,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ In this case, all but one receiver are able to receive values at the rate","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9039509,"byte_end":9039586,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ they are sent. Because one receiver is stalled, the channel starts to fill","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9039587,"byte_end":9039665,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ up.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9039666,"byte_end":9039673,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9039674,"byte_end":9039677,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This broadcast channel implementation handles this case by setting a hard","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9039678,"byte_end":9039755,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ upper bound on the number of values the channel may retain at any given","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9039756,"byte_end":9039831,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ time. This upper bound is passed to the [`channel`] function as an argument.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9039832,"byte_end":9039912,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9039913,"byte_end":9039916,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ If a value is sent when the channel is at capacity, the oldest value","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9039917,"byte_end":9039989,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"/ currently held by the channel is released. This frees up space for the new","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9039990,"byte_end":9040068,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ value. Any receiver that has not yet seen the released value will return","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9040069,"byte_end":9040145,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ [`RecvError::Lagged`] the next time [`recv`] is called.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9040146,"byte_end":9040205,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9040206,"byte_end":9040209,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Once [`RecvError::Lagged`] is returned, the lagging receiver's position is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9040210,"byte_end":9040288,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ updated to the oldest value contained by the channel. The next call to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9040289,"byte_end":9040363,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ [`recv`] will return this value.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9040364,"byte_end":9040400,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9040401,"byte_end":9040404,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This behavior enables a receiver to detect when it has lagged so far behind","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9040405,"byte_end":9040484,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ that data has been dropped. The caller may decide how to respond to this:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9040485,"byte_end":9040562,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ either by aborting its task or by tolerating lost messages and resuming","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9040563,"byte_end":9040638,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ consumption of the channel.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9040639,"byte_end":9040670,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9040671,"byte_end":9040674,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## Closing","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9040675,"byte_end":9040689,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9040690,"byte_end":9040693,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ When **all** [`Sender`] handles have been dropped, no new values may be","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9040694,"byte_end":9040769,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ sent. At this point, the channel is \"closed\". Once a receiver has received","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9040770,"byte_end":9040848,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"/ all values retained by the channel, the next call to [`recv`] will return","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9040849,"byte_end":9040926,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/ with [`RecvError::Closed`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9040927,"byte_end":9040958,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9040959,"byte_end":9040962,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9040963,"byte_end":9041009,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9041010,"byte_end":9041078,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9041079,"byte_end":9041129,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9041130,"byte_end":9041178,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"/ [`RecvError::Lagged`]: crate::sync::broadcast::error::RecvError::Lagged","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9041179,"byte_end":9041254,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ [`RecvError::Closed`]: crate::sync::broadcast::error::RecvError::Closed","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9041255,"byte_end":9041330,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9041331,"byte_end":9041383,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9041384,"byte_end":9041387,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9041388,"byte_end":9041402,"line_start":62,"line_end":62,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9041403,"byte_end":9041406,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9041407,"byte_end":9041422,"line_start":64,"line_end":64,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9041423,"byte_end":9041426,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9041427,"byte_end":9041434,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9041435,"byte_end":9041466,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9041467,"byte_end":9041470,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9041471,"byte_end":9041489,"line_start":69,"line_end":69,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9041490,"byte_end":9041511,"line_start":70,"line_end":70,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9041512,"byte_end":9041563,"line_start":71,"line_end":71,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9041564,"byte_end":9041601,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9041602,"byte_end":9041605,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9041606,"byte_end":9041639,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9041640,"byte_end":9041694,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9041695,"byte_end":9041749,"line_start":76,"line_end":76,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9041750,"byte_end":9041761,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9041762,"byte_end":9041765,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9041766,"byte_end":9041799,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9041800,"byte_end":9041854,"line_start":80,"line_end":80,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9041855,"byte_end":9041909,"line_start":81,"line_end":81,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9041910,"byte_end":9041921,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9041922,"byte_end":9041925,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9041926,"byte_end":9041955,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9041956,"byte_end":9041985,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9041986,"byte_end":9041991,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9041992,"byte_end":9041999,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9042000,"byte_end":9042003,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ Handling lag","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9042004,"byte_end":9042020,"line_start":89,"line_end":89,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9042021,"byte_end":9042024,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9042025,"byte_end":9042032,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9042033,"byte_end":9042064,"line_start":92,"line_end":92,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9042065,"byte_end":9042068,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9042069,"byte_end":9042087,"line_start":94,"line_end":94,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9042088,"byte_end":9042109,"line_start":95,"line_end":95,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9042110,"byte_end":9042159,"line_start":96,"line_end":96,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9042160,"byte_end":9042163,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9042164,"byte_end":9042193,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9042194,"byte_end":9042223,"line_start":99,"line_end":99,"column_start":1,"column_end":30}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9042224,"byte_end":9042253,"line_start":100,"line_end":100,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9042254,"byte_end":9042257,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/     // The receiver lagged behind","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9042258,"byte_end":9042295,"line_start":102,"line_end":102,"column_start":1,"column_end":38}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9042296,"byte_end":9042338,"line_start":103,"line_end":103,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9042339,"byte_end":9042342,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9042343,"byte_end":9042412,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9042413,"byte_end":9042416,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9042417,"byte_end":9042466,"line_start":107,"line_end":107,"column_start":1,"column_end":50}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9042467,"byte_end":9042516,"line_start":108,"line_end":108,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9042517,"byte_end":9042522,"line_start":109,"line_end":109,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9042523,"byte_end":9042530,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5000},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9043727,"byte_end":9043733,"line_start":157,"line_end":157,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::broadcast::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":5002}],"decl_id":null,"docs":" Sending-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Sending-half of the [`broadcast`] channel.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9042934,"byte_end":9042980,"line_start":126,"line_end":126,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9042981,"byte_end":9042984,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ May be used from many threads. Messages can be sent with","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9042985,"byte_end":9043045,"line_start":128,"line_end":128,"column_start":1,"column_end":61}},{"value":"/ [`send`][Sender::send].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9043046,"byte_end":9043073,"line_start":129,"line_end":129,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9043074,"byte_end":9043077,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9043078,"byte_end":9043092,"line_start":131,"line_end":131,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9043093,"byte_end":9043096,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9043097,"byte_end":9043104,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9043105,"byte_end":9043136,"line_start":134,"line_end":134,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9043137,"byte_end":9043140,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9043141,"byte_end":9043159,"line_start":136,"line_end":136,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9043160,"byte_end":9043181,"line_start":137,"line_end":137,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9043182,"byte_end":9043233,"line_start":138,"line_end":138,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9043234,"byte_end":9043271,"line_start":139,"line_end":139,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9043272,"byte_end":9043275,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9043276,"byte_end":9043309,"line_start":141,"line_end":141,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9043310,"byte_end":9043364,"line_start":142,"line_end":142,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9043365,"byte_end":9043419,"line_start":143,"line_end":143,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9043420,"byte_end":9043431,"line_start":144,"line_end":144,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9043432,"byte_end":9043435,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9043436,"byte_end":9043469,"line_start":146,"line_end":146,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9043470,"byte_end":9043524,"line_start":147,"line_end":147,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9043525,"byte_end":9043579,"line_start":148,"line_end":148,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9043580,"byte_end":9043591,"line_start":149,"line_end":149,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9043592,"byte_end":9043595,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9043596,"byte_end":9043625,"line_start":151,"line_end":151,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9043626,"byte_end":9043655,"line_start":152,"line_end":152,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9043656,"byte_end":9043661,"line_start":153,"line_end":153,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9043662,"byte_end":9043669,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9043670,"byte_end":9043673,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9043674,"byte_end":9043715,"line_start":156,"line_end":156,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":5003},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9044781,"byte_end":9044789,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::broadcast::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":5005},{"krate":0,"index":5006}],"decl_id":null,"docs":" Receiving-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Receiving-half of the [`broadcast`] channel.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9043770,"byte_end":9043818,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9043819,"byte_end":9043822,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ Must not be used concurrently. Messages may be retrieved using","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9043823,"byte_end":9043889,"line_start":163,"line_end":163,"column_start":1,"column_end":67}},{"value":"/ [`recv`][Receiver::recv].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9043890,"byte_end":9043919,"line_start":164,"line_end":164,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9043920,"byte_end":9043923,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ To turn this receiver into a `Stream`, you can use the [`BroadcastStream`]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9043924,"byte_end":9044002,"line_start":166,"line_end":166,"column_start":1,"column_end":79}},{"value":"/ wrapper.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9044003,"byte_end":9044015,"line_start":167,"line_end":167,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9044016,"byte_end":9044019,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ [`BroadcastStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.BroadcastStream.html","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9044020,"byte_end":9044127,"line_start":169,"line_end":169,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9044128,"byte_end":9044131,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9044132,"byte_end":9044146,"line_start":171,"line_end":171,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9044147,"byte_end":9044150,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9044151,"byte_end":9044158,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9044159,"byte_end":9044190,"line_start":174,"line_end":174,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9044191,"byte_end":9044194,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9044195,"byte_end":9044213,"line_start":176,"line_end":176,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9044214,"byte_end":9044235,"line_start":177,"line_end":177,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9044236,"byte_end":9044287,"line_start":178,"line_end":178,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9044288,"byte_end":9044325,"line_start":179,"line_end":179,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9044326,"byte_end":9044329,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9044330,"byte_end":9044363,"line_start":181,"line_end":181,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9044364,"byte_end":9044418,"line_start":182,"line_end":182,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9044419,"byte_end":9044473,"line_start":183,"line_end":183,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9044474,"byte_end":9044485,"line_start":184,"line_end":184,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9044486,"byte_end":9044489,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9044490,"byte_end":9044523,"line_start":186,"line_end":186,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9044524,"byte_end":9044578,"line_start":187,"line_end":187,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9044579,"byte_end":9044633,"line_start":188,"line_end":188,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9044634,"byte_end":9044645,"line_start":189,"line_end":189,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9044646,"byte_end":9044649,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9044650,"byte_end":9044679,"line_start":191,"line_end":191,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9044680,"byte_end":9044709,"line_start":192,"line_end":192,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9044710,"byte_end":9044715,"line_start":193,"line_end":193,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9044716,"byte_end":9044723,"line_start":194,"line_end":194,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9044724,"byte_end":9044727,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9044728,"byte_end":9044769,"line_start":196,"line_end":196,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":5007},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9044938,"byte_end":9044943,"line_start":205,"line_end":205,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::broadcast::error","value":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","parent":null,"children":[{"krate":0,"index":5008},{"krate":0,"index":6173},{"krate":0,"index":6177},{"krate":0,"index":5009},{"krate":0,"index":5012},{"krate":0,"index":6180},{"krate":0,"index":6190},{"krate":0,"index":6186},{"krate":0,"index":6187},{"krate":0,"index":5014},{"krate":0,"index":5016},{"krate":0,"index":6192},{"krate":0,"index":6204},{"krate":0,"index":6200},{"krate":0,"index":6201},{"krate":0,"index":5017},{"krate":0,"index":5019}],"decl_id":null,"docs":" Broadcast error types\n","sig":null,"attributes":[{"value":"/ Broadcast error types","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9044950,"byte_end":9044975,"line_start":206,"line_end":206,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":6173},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9045447,"byte_end":9045456,"line_start":219,"line_end":219,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::broadcast::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by from the [`send`] function on a [`Sender`].","sig":null,"attributes":[{"value":"/ Error returned by from the [`send`] function on a [`Sender`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9045000,"byte_end":9045065,"line_start":210,"line_end":210,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9045070,"byte_end":9045073,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ A **send** operation can only fail if there are no active receivers,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9045078,"byte_end":9045150,"line_start":212,"line_end":212,"column_start":5,"column_end":77}},{"value":"/ implying that the message could never be received. The error contains the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9045155,"byte_end":9045232,"line_start":213,"line_end":213,"column_start":5,"column_end":82}},{"value":"/ message being sent as a payload so it can be recovered.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9045237,"byte_end":9045296,"line_start":214,"line_end":214,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9045301,"byte_end":9045304,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ [`send`]: crate::sync::broadcast::Sender::send","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9045309,"byte_end":9045359,"line_start":216,"line_end":216,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9045364,"byte_end":9045410,"line_start":217,"line_end":217,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":6176},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9045460,"byte_end":9045465,"line_start":219,"line_end":219,"column_start":29,"column_end":34},"name":"0","qualname":"::sync::broadcast::error::SendError::0","value":"T","parent":{"krate":0,"index":6173},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6181},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9046062,"byte_end":9046068,"line_start":237,"line_end":237,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::broadcast::error::RecvError::Closed","value":"RecvError::Closed","parent":{"krate":0,"index":6180},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9045957,"byte_end":9046032,"line_start":235,"line_end":235,"column_start":9,"column_end":84}},{"value":"/ be sent.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9046041,"byte_end":9046053,"line_start":236,"line_end":236,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6183},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9046294,"byte_end":9046300,"line_start":243,"line_end":243,"column_start":9,"column_end":15},"name":"Lagged","qualname":"::sync::broadcast::error::RecvError::Lagged","value":"RecvError::Lagged(u64)","parent":{"krate":0,"index":6180},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind. Attempting to receive again will\n return the oldest message still retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind. Attempting to receive again will","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9046079,"byte_end":9046151,"line_start":239,"line_end":239,"column_start":9,"column_end":81}},{"value":"/ return the oldest message still retained by the channel.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9046160,"byte_end":9046220,"line_start":240,"line_end":240,"column_start":9,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9046229,"byte_end":9046232,"line_start":241,"line_end":241,"column_start":9,"column_end":12}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9046241,"byte_end":9046285,"line_start":242,"line_end":242,"column_start":9,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":6180},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9045937,"byte_end":9045946,"line_start":234,"line_end":234,"column_start":14,"column_end":23},"name":"RecvError","qualname":"::sync::broadcast::error::RecvError","value":"pub enum RecvError {\n\n    /// There are no more active senders implying no further messages will ever\n    /// be sent.\n    Closed,\n\n    /// The receiver lagged too far behind. Attempting to receive again will\n    /// return the oldest message still retained by the channel.\n    ///\n    /// Includes the number of skipped messages.\n    Lagged(u64),\n}","parent":null,"children":[{"krate":0,"index":6181},{"krate":0,"index":6183}],"decl_id":null,"docs":" An error returned from the [`recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`recv`] function on a [`Receiver`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9045704,"byte_end":9045771,"line_start":229,"line_end":229,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9045776,"byte_end":9045779,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9045784,"byte_end":9045836,"line_start":231,"line_end":231,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9045841,"byte_end":9045891,"line_start":232,"line_end":232,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6193},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9047140,"byte_end":9047145,"line_start":267,"line_end":267,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::broadcast::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":6192},"children":[],"decl_id":null,"docs":" The channel is currently empty. There are still active\n [`Sender`] handles, so data may yet become available.","sig":null,"attributes":[{"value":"/ The channel is currently empty. There are still active","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9046940,"byte_end":9046998,"line_start":263,"line_end":263,"column_start":9,"column_end":67}},{"value":"/ [`Sender`] handles, so data may yet become available.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9047007,"byte_end":9047064,"line_start":264,"line_end":264,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9047073,"byte_end":9047076,"line_start":265,"line_end":265,"column_start":9,"column_end":12}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9047085,"byte_end":9047131,"line_start":266,"line_end":266,"column_start":9,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6195},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9047261,"byte_end":9047267,"line_start":271,"line_end":271,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::broadcast::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":6192},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9047156,"byte_end":9047231,"line_start":269,"line_end":269,"column_start":9,"column_end":84}},{"value":"/ be sent.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9047240,"byte_end":9047252,"line_start":270,"line_end":270,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6197},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9047540,"byte_end":9047546,"line_start":278,"line_end":278,"column_start":9,"column_end":15},"name":"Lagged","qualname":"::sync::broadcast::error::TryRecvError::Lagged","value":"TryRecvError::Lagged(u64)","parent":{"krate":0,"index":6192},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind and has been forcibly disconnected.\n Attempting to receive again will return the oldest message still\n retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind and has been forcibly disconnected.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9047278,"byte_end":9047352,"line_start":273,"line_end":273,"column_start":9,"column_end":83}},{"value":"/ Attempting to receive again will return the oldest message still","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9047361,"byte_end":9047429,"line_start":274,"line_end":274,"column_start":9,"column_end":77}},{"value":"/ retained by the channel.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9047438,"byte_end":9047466,"line_start":275,"line_end":275,"column_start":9,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9047475,"byte_end":9047478,"line_start":276,"line_end":276,"column_start":9,"column_end":12}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9047487,"byte_end":9047531,"line_start":277,"line_end":277,"column_start":9,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":6192},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9046917,"byte_end":9046929,"line_start":262,"line_end":262,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::broadcast::error::TryRecvError","value":"pub enum TryRecvError {\n\n    /// The channel is currently empty. There are still active\n    /// [`Sender`] handles, so data may yet become available.\n    ///\n    /// [`Sender`]: crate::sync::broadcast::Sender\n    Empty,\n\n    /// There are no more active senders implying no further messages will ever\n    /// be sent.\n    Closed,\n\n    /// The receiver lagged too far behind and has been forcibly disconnected.\n    /// Attempting to receive again will return the oldest message still\n    /// retained by the channel.\n    ///\n    /// Includes the number of skipped messages.\n    Lagged(u64),\n}","parent":null,"children":[{"krate":0,"index":6193},{"krate":0,"index":6195},{"krate":0,"index":6197}],"decl_id":null,"docs":" An error returned from the [`try_recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`try_recv`] function on a [`Receiver`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9046672,"byte_end":9046743,"line_start":257,"line_end":257,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9046748,"byte_end":9046751,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9046756,"byte_end":9046816,"line_start":259,"line_end":259,"column_start":5,"column_end":65}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9046821,"byte_end":9046871,"line_start":260,"line_end":260,"column_start":5,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":5059},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9051741,"byte_end":9051748,"line_start":428,"line_end":428,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::broadcast::channel","value":"pub fn channel<T: Clone>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a bounded, multi-producer, multi-consumer channel where each sent\n value is broadcasted to all active receivers.","sig":null,"attributes":[{"value":"/ Create a bounded, multi-producer, multi-consumer channel where each sent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9050115,"byte_end":9050191,"line_start":383,"line_end":383,"column_start":1,"column_end":77}},{"value":"/ value is broadcasted to all active receivers.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9050192,"byte_end":9050241,"line_start":384,"line_end":384,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9050242,"byte_end":9050245,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ All data sent on [`Sender`] will become available on every active","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9050246,"byte_end":9050315,"line_start":386,"line_end":386,"column_start":1,"column_end":70}},{"value":"/ [`Receiver`] in the same order as it was sent.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9050316,"byte_end":9050366,"line_start":387,"line_end":387,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9050367,"byte_end":9050370,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9050371,"byte_end":9050445,"line_start":389,"line_end":389,"column_start":1,"column_end":75}},{"value":"/ points in the process or it can be used concurrently from an `Arc`. New","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9050446,"byte_end":9050521,"line_start":390,"line_end":390,"column_start":1,"column_end":76}},{"value":"/ `Receiver` handles are created by calling [`Sender::subscribe`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9050522,"byte_end":9050590,"line_start":391,"line_end":391,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9050591,"byte_end":9050594,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/ If all [`Receiver`] handles are dropped, the `send` method will return a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9050595,"byte_end":9050671,"line_start":393,"line_end":393,"column_start":1,"column_end":77}},{"value":"/ [`SendError`]. Similarly, if all [`Sender`] handles are dropped, the [`recv`]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9050672,"byte_end":9050753,"line_start":394,"line_end":394,"column_start":1,"column_end":82}},{"value":"/ method will return a [`RecvError`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9050754,"byte_end":9050793,"line_start":395,"line_end":395,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9050794,"byte_end":9050797,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9050798,"byte_end":9050844,"line_start":397,"line_end":397,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9050845,"byte_end":9050913,"line_start":398,"line_end":398,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9050914,"byte_end":9050964,"line_start":399,"line_end":399,"column_start":1,"column_end":51}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9050965,"byte_end":9051017,"line_start":400,"line_end":400,"column_start":1,"column_end":53}},{"value":"/ [`SendError`]: crate::sync::broadcast::error::SendError","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9051018,"byte_end":9051077,"line_start":401,"line_end":401,"column_start":1,"column_end":60}},{"value":"/ [`RecvError`]: crate::sync::broadcast::error::RecvError","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9051078,"byte_end":9051137,"line_start":402,"line_end":402,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9051138,"byte_end":9051141,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9051142,"byte_end":9051156,"line_start":404,"line_end":404,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9051157,"byte_end":9051160,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9051161,"byte_end":9051168,"line_start":406,"line_end":406,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9051169,"byte_end":9051200,"line_start":407,"line_end":407,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9051201,"byte_end":9051204,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9051205,"byte_end":9051223,"line_start":409,"line_end":409,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9051224,"byte_end":9051245,"line_start":410,"line_end":410,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9051246,"byte_end":9051297,"line_start":411,"line_end":411,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9051298,"byte_end":9051335,"line_start":412,"line_end":412,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9051336,"byte_end":9051339,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9051340,"byte_end":9051373,"line_start":414,"line_end":414,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9051374,"byte_end":9051428,"line_start":415,"line_end":415,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9051429,"byte_end":9051483,"line_start":416,"line_end":416,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9051484,"byte_end":9051495,"line_start":417,"line_end":417,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9051496,"byte_end":9051499,"line_start":418,"line_end":418,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9051500,"byte_end":9051533,"line_start":419,"line_end":419,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9051534,"byte_end":9051588,"line_start":420,"line_end":420,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9051589,"byte_end":9051643,"line_start":421,"line_end":421,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9051644,"byte_end":9051655,"line_start":422,"line_end":422,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9051656,"byte_end":9051659,"line_start":423,"line_end":423,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9051660,"byte_end":9051689,"line_start":424,"line_end":424,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9051690,"byte_end":9051719,"line_start":425,"line_end":425,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9051720,"byte_end":9051725,"line_start":426,"line_end":426,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9051726,"byte_end":9051733,"line_start":427,"line_end":427,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5071},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9054800,"byte_end":9054804,"line_start":525,"line_end":525,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(&Self, T) -> Result<usize, SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value to all active [`Receiver`] handles, returning\n it back if it could not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value to all active [`Receiver`] handles, returning","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9052950,"byte_end":9053024,"line_start":475,"line_end":475,"column_start":5,"column_end":79}},{"value":"/ it back if it could not be sent.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9053029,"byte_end":9053065,"line_start":476,"line_end":476,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9053070,"byte_end":9053073,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when there is at least one active [`Receiver`]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9053078,"byte_end":9053153,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/ handle. An unsuccessful send would be one where all associated","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9053158,"byte_end":9053224,"line_start":479,"line_end":479,"column_start":5,"column_end":71}},{"value":"/ [`Receiver`] handles have already been dropped.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9053229,"byte_end":9053280,"line_start":480,"line_end":480,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9053285,"byte_end":9053288,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9053293,"byte_end":9053305,"line_start":482,"line_end":482,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9053310,"byte_end":9053313,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ On success, the number of subscribed [`Receiver`] handles is returned.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9053318,"byte_end":9053392,"line_start":484,"line_end":484,"column_start":5,"column_end":79}},{"value":"/ This does not mean that this number of receivers will see the message as","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9053397,"byte_end":9053473,"line_start":485,"line_end":485,"column_start":5,"column_end":81}},{"value":"/ a receiver may drop before receiving the message.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9053478,"byte_end":9053531,"line_start":486,"line_end":486,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9053536,"byte_end":9053539,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9053544,"byte_end":9053554,"line_start":488,"line_end":488,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9053559,"byte_end":9053562,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ A return value of `Ok` **does not** mean that the sent value will be","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9053567,"byte_end":9053639,"line_start":490,"line_end":490,"column_start":5,"column_end":77}},{"value":"/ observed by all or any of the active [`Receiver`] handles. [`Receiver`]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9053644,"byte_end":9053719,"line_start":491,"line_end":491,"column_start":5,"column_end":80}},{"value":"/ handles may be dropped before receiving the sent message.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9053724,"byte_end":9053785,"line_start":492,"line_end":492,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9053790,"byte_end":9053793,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ A return value of `Err` **does not** mean that future calls to `send`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9053798,"byte_end":9053871,"line_start":494,"line_end":494,"column_start":5,"column_end":78}},{"value":"/ will fail. New [`Receiver`] handles may be created by calling","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9053876,"byte_end":9053941,"line_start":495,"line_end":495,"column_start":5,"column_end":70}},{"value":"/ [`subscribe`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9053946,"byte_end":9053964,"line_start":496,"line_end":496,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9053969,"byte_end":9053972,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9053977,"byte_end":9054027,"line_start":498,"line_end":498,"column_start":5,"column_end":55}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9054032,"byte_end":9054092,"line_start":499,"line_end":499,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9054097,"byte_end":9054100,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9054105,"byte_end":9054119,"line_start":501,"line_end":501,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9054124,"byte_end":9054127,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9054132,"byte_end":9054139,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9054144,"byte_end":9054175,"line_start":504,"line_end":504,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9054180,"byte_end":9054183,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9054188,"byte_end":9054206,"line_start":506,"line_end":506,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9054211,"byte_end":9054232,"line_start":507,"line_end":507,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9054237,"byte_end":9054288,"line_start":508,"line_end":508,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9054293,"byte_end":9054330,"line_start":509,"line_end":509,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9054335,"byte_end":9054338,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9054343,"byte_end":9054376,"line_start":511,"line_end":511,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9054381,"byte_end":9054435,"line_start":512,"line_end":512,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9054440,"byte_end":9054494,"line_start":513,"line_end":513,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9054499,"byte_end":9054510,"line_start":514,"line_end":514,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9054515,"byte_end":9054518,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9054523,"byte_end":9054556,"line_start":516,"line_end":516,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9054561,"byte_end":9054615,"line_start":517,"line_end":517,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9054620,"byte_end":9054674,"line_start":518,"line_end":518,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9054679,"byte_end":9054690,"line_start":519,"line_end":519,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9054695,"byte_end":9054698,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9054703,"byte_end":9054732,"line_start":521,"line_end":521,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9054737,"byte_end":9054766,"line_start":522,"line_end":522,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9054771,"byte_end":9054776,"line_start":523,"line_end":523,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9054781,"byte_end":9054788,"line_start":524,"line_end":524,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5073},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9055564,"byte_end":9055573,"line_start":553,"line_end":553,"column_start":12,"column_end":21},"name":"subscribe","qualname":"<Sender<T>>::subscribe","value":"pub fn subscribe(&Self) -> Receiver<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Receiver`] handle that will receive values sent **after**\n this call to `subscribe`.","sig":null,"attributes":[{"value":"/ Creates a new [`Receiver`] handle that will receive values sent **after**","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9054969,"byte_end":9055046,"line_start":530,"line_end":530,"column_start":5,"column_end":82}},{"value":"/ this call to `subscribe`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9055051,"byte_end":9055080,"line_start":531,"line_end":531,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9055085,"byte_end":9055088,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9055093,"byte_end":9055107,"line_start":533,"line_end":533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9055112,"byte_end":9055115,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9055120,"byte_end":9055127,"line_start":535,"line_end":535,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9055132,"byte_end":9055163,"line_start":536,"line_end":536,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9055168,"byte_end":9055171,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9055176,"byte_end":9055194,"line_start":538,"line_end":538,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9055199,"byte_end":9055220,"line_start":539,"line_end":539,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9055225,"byte_end":9055272,"line_start":540,"line_end":540,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9055277,"byte_end":9055280,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/     // Will not be seen","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9055285,"byte_end":9055312,"line_start":542,"line_end":542,"column_start":5,"column_end":32}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9055317,"byte_end":9055346,"line_start":543,"line_end":543,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9055351,"byte_end":9055354,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/     let mut rx = tx.subscribe();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9055359,"byte_end":9055395,"line_start":545,"line_end":545,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9055400,"byte_end":9055403,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9055408,"byte_end":9055437,"line_start":547,"line_end":547,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9055442,"byte_end":9055445,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/     let value = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9055450,"byte_end":9055495,"line_start":549,"line_end":549,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(20, value);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9055500,"byte_end":9055530,"line_start":550,"line_end":550,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9055535,"byte_end":9055540,"line_start":551,"line_end":551,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9055545,"byte_end":9055552,"line_start":552,"line_end":552,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5074},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9056832,"byte_end":9056846,"line_start":594,"line_end":594,"column_start":12,"column_end":26},"name":"receiver_count","qualname":"<Sender<T>>::receiver_count","value":"pub fn receiver_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of active receivers","sig":null,"attributes":[{"value":"/ Returns the number of active receivers","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9055680,"byte_end":9055722,"line_start":558,"line_end":558,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9055727,"byte_end":9055730,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ An active receiver is a [`Receiver`] handle returned from [`channel`] or","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9055735,"byte_end":9055811,"line_start":560,"line_end":560,"column_start":5,"column_end":81}},{"value":"/ [`subscribe`]. These are the handles that will receive values sent on","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9055816,"byte_end":9055889,"line_start":561,"line_end":561,"column_start":5,"column_end":78}},{"value":"/ this [`Sender`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9055894,"byte_end":9055914,"line_start":562,"line_end":562,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9055919,"byte_end":9055922,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9055927,"byte_end":9055937,"line_start":564,"line_end":564,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9055942,"byte_end":9055945,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ It is not guaranteed that a sent message will reach this number of","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9055950,"byte_end":9056020,"line_start":566,"line_end":566,"column_start":5,"column_end":75}},{"value":"/ receivers. Active receivers may never call [`recv`] again before","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9056025,"byte_end":9056093,"line_start":567,"line_end":567,"column_start":5,"column_end":73}},{"value":"/ dropping.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9056098,"byte_end":9056111,"line_start":568,"line_end":568,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9056116,"byte_end":9056119,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9056124,"byte_end":9056176,"line_start":570,"line_end":570,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9056181,"byte_end":9056231,"line_start":571,"line_end":571,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9056236,"byte_end":9056282,"line_start":572,"line_end":572,"column_start":5,"column_end":51}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9056287,"byte_end":9056347,"line_start":573,"line_end":573,"column_start":5,"column_end":65}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9056352,"byte_end":9056400,"line_start":574,"line_end":574,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9056405,"byte_end":9056408,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9056413,"byte_end":9056427,"line_start":576,"line_end":576,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9056432,"byte_end":9056435,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9056440,"byte_end":9056447,"line_start":578,"line_end":578,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9056452,"byte_end":9056483,"line_start":579,"line_end":579,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9056488,"byte_end":9056491,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9056496,"byte_end":9056514,"line_start":581,"line_end":581,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9056519,"byte_end":9056540,"line_start":582,"line_end":582,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9056545,"byte_end":9056593,"line_start":583,"line_end":583,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9056598,"byte_end":9056601,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, tx.receiver_count());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9056606,"byte_end":9056649,"line_start":585,"line_end":585,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9056654,"byte_end":9056657,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/     let mut _rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9056662,"byte_end":9056700,"line_start":587,"line_end":587,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9056705,"byte_end":9056708,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(2, tx.receiver_count());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9056713,"byte_end":9056756,"line_start":589,"line_end":589,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9056761,"byte_end":9056764,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9056769,"byte_end":9056798,"line_start":591,"line_end":591,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9056803,"byte_end":9056808,"line_start":592,"line_end":592,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9056813,"byte_end":9056820,"line_start":593,"line_end":593,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5094},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9066409,"byte_end":9066413,"line_start":877,"line_end":877,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9064181,"byte_end":9064227,"line_start":812,"line_end":812,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9064232,"byte_end":9064235,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ Each [`Receiver`] handle will receive a clone of all values sent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9064240,"byte_end":9064308,"line_start":814,"line_end":814,"column_start":5,"column_end":73}},{"value":"/ **after** it has subscribed.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9064313,"byte_end":9064345,"line_start":815,"line_end":815,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9064350,"byte_end":9064353,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ `Err(RecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9064358,"byte_end":9064428,"line_start":817,"line_end":817,"column_start":5,"column_end":75}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9064433,"byte_end":9064507,"line_start":818,"line_end":818,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9064512,"byte_end":9064515,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9064520,"byte_end":9064596,"line_start":820,"line_end":820,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9064601,"byte_end":9064677,"line_start":821,"line_end":821,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(RecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9064682,"byte_end":9064750,"line_start":822,"line_end":822,"column_start":5,"column_end":73}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9064755,"byte_end":9064828,"line_start":823,"line_end":823,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`recv`] will return this value","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9064833,"byte_end":9064902,"line_start":824,"line_end":824,"column_start":5,"column_end":74}},{"value":"/ **unless** it has been since overwritten.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9064907,"byte_end":9064952,"line_start":825,"line_end":825,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9064957,"byte_end":9064960,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9064965,"byte_end":9065015,"line_start":827,"line_end":827,"column_start":5,"column_end":55}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9065020,"byte_end":9065072,"line_start":828,"line_end":828,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9065077,"byte_end":9065080,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9065085,"byte_end":9065099,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9065104,"byte_end":9065107,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9065112,"byte_end":9065119,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9065124,"byte_end":9065155,"line_start":833,"line_end":833,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9065160,"byte_end":9065163,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9065168,"byte_end":9065186,"line_start":835,"line_end":835,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9065191,"byte_end":9065212,"line_start":836,"line_end":836,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9065217,"byte_end":9065268,"line_start":837,"line_end":837,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9065273,"byte_end":9065310,"line_start":838,"line_end":838,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9065315,"byte_end":9065318,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9065323,"byte_end":9065356,"line_start":840,"line_end":840,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9065361,"byte_end":9065415,"line_start":841,"line_end":841,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9065420,"byte_end":9065474,"line_start":842,"line_end":842,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9065479,"byte_end":9065490,"line_start":843,"line_end":843,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9065495,"byte_end":9065498,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9065503,"byte_end":9065536,"line_start":845,"line_end":845,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9065541,"byte_end":9065595,"line_start":846,"line_end":846,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9065600,"byte_end":9065654,"line_start":847,"line_end":847,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9065659,"byte_end":9065670,"line_start":848,"line_end":848,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9065675,"byte_end":9065678,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9065683,"byte_end":9065712,"line_start":850,"line_end":850,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9065717,"byte_end":9065746,"line_start":851,"line_end":851,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9065751,"byte_end":9065756,"line_start":852,"line_end":852,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9065761,"byte_end":9065768,"line_start":853,"line_end":853,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9065773,"byte_end":9065776,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ Handling lag","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9065781,"byte_end":9065797,"line_start":855,"line_end":855,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9065802,"byte_end":9065805,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9065810,"byte_end":9065817,"line_start":857,"line_end":857,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9065822,"byte_end":9065853,"line_start":858,"line_end":858,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9065858,"byte_end":9065861,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9065866,"byte_end":9065884,"line_start":860,"line_end":860,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9065889,"byte_end":9065910,"line_start":861,"line_end":861,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9065915,"byte_end":9065964,"line_start":862,"line_end":862,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9065969,"byte_end":9065972,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9065977,"byte_end":9066006,"line_start":864,"line_end":864,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9066011,"byte_end":9066040,"line_start":865,"line_end":865,"column_start":5,"column_end":34}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9066045,"byte_end":9066074,"line_start":866,"line_end":866,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9066079,"byte_end":9066082,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/     // The receiver lagged behind","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9066087,"byte_end":9066124,"line_start":868,"line_end":868,"column_start":5,"column_end":42}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9066129,"byte_end":9066171,"line_start":869,"line_end":869,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9066176,"byte_end":9066179,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9066184,"byte_end":9066253,"line_start":871,"line_end":871,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9066258,"byte_end":9066261,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9066266,"byte_end":9066315,"line_start":873,"line_end":873,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9066320,"byte_end":9066369,"line_start":874,"line_end":874,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9066374,"byte_end":9066379,"line_start":875,"line_end":875,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9066384,"byte_end":9066391,"line_start":876,"line_end":876,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5097},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9068174,"byte_end":9068182,"line_start":922,"line_end":922,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without awaiting.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without awaiting.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9066515,"byte_end":9066588,"line_start":882,"line_end":882,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9066593,"byte_end":9066596,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9066601,"byte_end":9066673,"line_start":884,"line_end":884,"column_start":5,"column_end":77}},{"value":"/ await on a receiver.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9066678,"byte_end":9066702,"line_start":885,"line_end":885,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9066707,"byte_end":9066710,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ Compared with [`recv`], this function has three failure cases instead of two","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9066715,"byte_end":9066795,"line_start":887,"line_end":887,"column_start":5,"column_end":85}},{"value":"/ (one for closed, one for an empty buffer, one for a lagging receiver).","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9066800,"byte_end":9066874,"line_start":888,"line_end":888,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9066879,"byte_end":9066882,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ `Err(TryRecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9066887,"byte_end":9066960,"line_start":890,"line_end":890,"column_start":5,"column_end":78}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9066965,"byte_end":9067039,"line_start":891,"line_end":891,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9067044,"byte_end":9067047,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9067052,"byte_end":9067128,"line_start":893,"line_end":893,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9067133,"byte_end":9067209,"line_start":894,"line_end":894,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(TryRecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9067214,"byte_end":9067285,"line_start":895,"line_end":895,"column_start":5,"column_end":76}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9067290,"byte_end":9067363,"line_start":896,"line_end":896,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`try_recv`] will return this value","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9067368,"byte_end":9067441,"line_start":897,"line_end":897,"column_start":5,"column_end":78}},{"value":"/ **unless** it has been since overwritten. If there are no values to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9067446,"byte_end":9067517,"line_start":898,"line_end":898,"column_start":5,"column_end":76}},{"value":"/ receive, `Err(TryRecvError::Empty)` is returned.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9067522,"byte_end":9067574,"line_start":899,"line_end":899,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9067579,"byte_end":9067582,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9067587,"byte_end":9067639,"line_start":901,"line_end":901,"column_start":5,"column_end":57}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9067644,"byte_end":9067704,"line_start":902,"line_end":902,"column_start":5,"column_end":65}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9067709,"byte_end":9067759,"line_start":903,"line_end":903,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9067764,"byte_end":9067767,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9067772,"byte_end":9067786,"line_start":905,"line_end":905,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9067791,"byte_end":9067794,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9067799,"byte_end":9067806,"line_start":907,"line_end":907,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9067811,"byte_end":9067842,"line_start":908,"line_end":908,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9067847,"byte_end":9067850,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9067855,"byte_end":9067873,"line_start":910,"line_end":910,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9067878,"byte_end":9067899,"line_start":911,"line_end":911,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9067904,"byte_end":9067954,"line_start":912,"line_end":912,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9067959,"byte_end":9067962,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.try_recv().is_err());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9067967,"byte_end":9068007,"line_start":914,"line_end":914,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9068012,"byte_end":9068015,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9068020,"byte_end":9068049,"line_start":916,"line_end":916,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9068054,"byte_end":9068057,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/     let value = rx.try_recv().unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9068062,"byte_end":9068105,"line_start":918,"line_end":918,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(10, value);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9068110,"byte_end":9068140,"line_start":919,"line_end":919,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9068145,"byte_end":9068150,"line_start":920,"line_end":920,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9068155,"byte_end":9068162,"line_start":921,"line_end":921,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":5141},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::sync::mpsc","value":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","parent":null,"children":[{"krate":0,"index":5142},{"krate":0,"index":5216},{"krate":0,"index":5293},{"krate":0,"index":5294},{"krate":0,"index":5295},{"krate":0,"index":5296},{"krate":0,"index":5297},{"krate":0,"index":5298},{"krate":0,"index":5428},{"krate":0,"index":5473},{"krate":0,"index":5523},{"krate":0,"index":5524},{"krate":0,"index":5525},{"krate":0,"index":5526},{"krate":0,"index":5527},{"krate":0,"index":5546}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values between\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23078,"byte_end":23102,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, single-consumer queue for sending values between","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9072455,"byte_end":9072525,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ asynchronous tasks.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9072526,"byte_end":9072549,"line_start":4,"line_end":4,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9072550,"byte_end":9072553,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module provides two variants of the channel: bounded and unbounded. The","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9072554,"byte_end":9072634,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ bounded variant has a limit on the number of messages that the channel can","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9072635,"byte_end":9072713,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ store, and if this limit is reached, trying to send another message will","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9072714,"byte_end":9072790,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ wait until a message is received from the channel. An unbounded channel has","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9072791,"byte_end":9072870,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ an infinite capacity, so the `send` method will always complete immediately.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9072871,"byte_end":9072951,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ This makes the [`UnboundedSender`] usable from both synchronous and","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9072952,"byte_end":9073023,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ asynchronous code.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9073024,"byte_end":9073046,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9073047,"byte_end":9073050,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Similar to the `mpsc` channels provided by `std`, the channel constructor","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9073051,"byte_end":9073128,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ functions provide separate send and receive handles, [`Sender`] and","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9073129,"byte_end":9073200,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ [`Receiver`] for the bounded channel, [`UnboundedSender`] and","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9073201,"byte_end":9073266,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/ [`UnboundedReceiver`] for the unbounded channel. If there is no message to read,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9073267,"byte_end":9073351,"line_start":17,"line_end":17,"column_start":1,"column_end":85}},{"value":"/ the current task will be notified when a new value is sent. [`Sender`] and","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9073352,"byte_end":9073430,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ [`UnboundedSender`] allow sending values into the channel. If the bounded","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9073431,"byte_end":9073508,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ channel is at capacity, the send is rejected and the task will be notified","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9073509,"byte_end":9073587,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ when additional capacity is available. In other words, the channel provides","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9073588,"byte_end":9073667,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ backpressure.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9073668,"byte_end":9073685,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9073686,"byte_end":9073689,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9073690,"byte_end":9073693,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Disconnection","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9073694,"byte_end":9073713,"line_start":25,"line_end":25,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9073714,"byte_end":9073717,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9073718,"byte_end":9073784,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/ possible to send values into the channel. This is considered the termination","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9073785,"byte_end":9073865,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ event of the stream. As such, `Receiver::poll` returns `Ok(Ready(None))`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9073866,"byte_end":9073943,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9073944,"byte_end":9073947,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9073948,"byte_end":9074018,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9074019,"byte_end":9074098,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ result in an error.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9074099,"byte_end":9074122,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9074123,"byte_end":9074126,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Clean Shutdown","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9074127,"byte_end":9074147,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9074148,"byte_end":9074151,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ When the [`Receiver`] is dropped, it is possible for unprocessed messages to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9074152,"byte_end":9074232,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ remain in the channel. Instead, it is usually desirable to perform a \"clean\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9074233,"byte_end":9074313,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ shutdown. To do this, the receiver first calls `close`, which will prevent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9074314,"byte_end":9074392,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ any further messages to be sent into the channel. Then, the receiver","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9074393,"byte_end":9074465,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/ consumes the channel to completion, at which point the receiver can be","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9074466,"byte_end":9074540,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9074541,"byte_end":9074553,"line_start":42,"line_end":42,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9074554,"byte_end":9074557,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Communicating between sync and async code","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9074558,"byte_end":9074605,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9074606,"byte_end":9074609,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ When you want to communicate between synchronous and asynchronous code, there","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9074610,"byte_end":9074691,"line_start":46,"line_end":46,"column_start":1,"column_end":82}},{"value":"/ are two situations to consider:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9074692,"byte_end":9074727,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9074728,"byte_end":9074731,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ **Bounded channel**: If you need a bounded channel, you should use a bounded","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9074732,"byte_end":9074812,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/ Tokio `mpsc` channel for both directions of communication. Instead of calling","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9074813,"byte_end":9074894,"line_start":50,"line_end":50,"column_start":1,"column_end":82}},{"value":"/ the async [`send`][bounded-send] or [`recv`][bounded-recv] methods, in","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9074895,"byte_end":9074969,"line_start":51,"line_end":51,"column_start":1,"column_end":75}},{"value":"/ synchronous code you will need to use the [`blocking_send`][blocking-send] or","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9074970,"byte_end":9075051,"line_start":52,"line_end":52,"column_start":1,"column_end":82}},{"value":"/ [`blocking_recv`][blocking-recv] methods.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9075052,"byte_end":9075097,"line_start":53,"line_end":53,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9075098,"byte_end":9075101,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ **Unbounded channel**: You should use the kind of channel that matches where","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9075102,"byte_end":9075182,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"/ the receiver is. So for sending a message _from async to sync_, you should","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9075183,"byte_end":9075261,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ use [the standard library unbounded channel][std-unbounded] or","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9075262,"byte_end":9075328,"line_start":57,"line_end":57,"column_start":1,"column_end":67}},{"value":"/ [crossbeam][crossbeam-unbounded].  Similarly, for sending a message _from sync","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9075329,"byte_end":9075411,"line_start":58,"line_end":58,"column_start":1,"column_end":83}},{"value":"/ to async_, you should use an unbounded Tokio `mpsc` channel.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9075412,"byte_end":9075476,"line_start":59,"line_end":59,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9075477,"byte_end":9075480,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::mpsc::Sender","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9075481,"byte_end":9075522,"line_start":61,"line_end":61,"column_start":1,"column_end":42}},{"value":"/ [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9075523,"byte_end":9075568,"line_start":62,"line_end":62,"column_start":1,"column_end":46}},{"value":"/ [bounded-send]: crate::sync::mpsc::Sender::send()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9075569,"byte_end":9075622,"line_start":63,"line_end":63,"column_start":1,"column_end":54}},{"value":"/ [bounded-recv]: crate::sync::mpsc::Receiver::recv()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9075623,"byte_end":9075678,"line_start":64,"line_end":64,"column_start":1,"column_end":56}},{"value":"/ [blocking-send]: crate::sync::mpsc::Sender::blocking_send()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9075679,"byte_end":9075742,"line_start":65,"line_end":65,"column_start":1,"column_end":64}},{"value":"/ [blocking-recv]: crate::sync::mpsc::Receiver::blocking_recv()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9075743,"byte_end":9075808,"line_start":66,"line_end":66,"column_start":1,"column_end":66}},{"value":"/ [`UnboundedSender`]: crate::sync::mpsc::UnboundedSender","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9075809,"byte_end":9075868,"line_start":67,"line_end":67,"column_start":1,"column_end":60}},{"value":"/ [`UnboundedReceiver`]: crate::sync::mpsc::UnboundedReceiver","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9075869,"byte_end":9075932,"line_start":68,"line_end":68,"column_start":1,"column_end":64}},{"value":"/ [`Handle::block_on`]: crate::runtime::Handle::block_on()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9075933,"byte_end":9075993,"line_start":69,"line_end":69,"column_start":1,"column_end":61}},{"value":"/ [std-unbounded]: std::sync::mpsc::channel","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9075994,"byte_end":9076039,"line_start":70,"line_end":70,"column_start":1,"column_end":46}},{"value":"/ [crossbeam-unbounded]: https://docs.rs/crossbeam/*/crossbeam/channel/fn.unbounded.html","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9076040,"byte_end":9076130,"line_start":71,"line_end":71,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":5228},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9090250,"byte_end":9090256,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::mpsc::bounded::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":5230}],"decl_id":null,"docs":" Send values to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `Receiver`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9090125,"byte_end":9090170,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9090171,"byte_end":9090174,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9090175,"byte_end":9090238,"line_start":18,"line_end":18,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":5231},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9090631,"byte_end":9090637,"line_start":30,"line_end":30,"column_start":12,"column_end":18},"name":"Permit","qualname":"::sync::mpsc::bounded::Permit","value":"Permit {  }","parent":null,"children":[{"krate":0,"index":5234}],"decl_id":null,"docs":" Permit to send one value into the channel.","sig":null,"attributes":[{"value":"/ Permit to send one value into the channel.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9090299,"byte_end":9090345,"line_start":23,"line_end":23,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9090346,"byte_end":9090349,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ `Permit` values are returned by [`Sender::reserve()`] and [`Sender::try_reserve()`]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9090350,"byte_end":9090437,"line_start":25,"line_end":25,"column_start":1,"column_end":88}},{"value":"/ and are used to guarantee channel capacity before generating a message to send.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9090438,"byte_end":9090521,"line_start":26,"line_end":26,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9090522,"byte_end":9090525,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`Sender::reserve()`]: Sender::reserve","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9090526,"byte_end":9090568,"line_start":28,"line_end":28,"column_start":1,"column_end":43}},{"value":"/ [`Sender::try_reserve()`]: Sender::try_reserve","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9090569,"byte_end":9090619,"line_start":29,"line_end":29,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":5235},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9091004,"byte_end":9091012,"line_start":41,"line_end":41,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::mpsc::bounded::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":5237}],"decl_id":null,"docs":" Receive values from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `Sender`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9090688,"byte_end":9090736,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9090737,"byte_end":9090740,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9090741,"byte_end":9090804,"line_start":36,"line_end":36,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9090805,"byte_end":9090808,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ This receiver can be turned into a `Stream` using [`ReceiverStream`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9090809,"byte_end":9090882,"line_start":38,"line_end":38,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9090883,"byte_end":9090886,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`ReceiverStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.ReceiverStream.html","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9090887,"byte_end":9090992,"line_start":40,"line_end":40,"column_start":1,"column_end":106}}]},{"kind":"Function","id":{"krate":0,"index":5238},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9092470,"byte_end":9092477,"line_start":90,"line_end":90,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::mpsc::bounded::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks\n with backpressure.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9091084,"byte_end":9091163,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ with backpressure.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9091164,"byte_end":9091186,"line_start":47,"line_end":47,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9091187,"byte_end":9091190,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The channel will buffer up to the provided number of messages.  Once the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9091191,"byte_end":9091267,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/ buffer is full, attempts to `send` new messages will wait until a message is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9091268,"byte_end":9091348,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/ received from the channel. The provided buffer capacity must be at least 1.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9091349,"byte_end":9091428,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9091429,"byte_end":9091432,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ All data sent on `Sender` will become available on `Receiver` in the same","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9091433,"byte_end":9091510,"line_start":53,"line_end":53,"column_start":1,"column_end":78}},{"value":"/ order as it was sent.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9091511,"byte_end":9091536,"line_start":54,"line_end":54,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9091537,"byte_end":9091540,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple code","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9091541,"byte_end":9091620,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/ locations. Only one `Receiver` is supported.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9091621,"byte_end":9091669,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9091670,"byte_end":9091673,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ If the `Receiver` is disconnected while trying to `send`, the `send` method","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9091674,"byte_end":9091753,"line_start":59,"line_end":59,"column_start":1,"column_end":80}},{"value":"/ will return a `SendError`. Similarly, if `Sender` is disconnected while","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9091754,"byte_end":9091829,"line_start":60,"line_end":60,"column_start":1,"column_end":76}},{"value":"/ trying to `recv`, the `recv` method will return a `RecvError`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9091830,"byte_end":9091896,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9091897,"byte_end":9091900,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9091901,"byte_end":9091913,"line_start":63,"line_end":63,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9091914,"byte_end":9091917,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Panics if the buffer capacity is 0.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9091918,"byte_end":9091957,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9091958,"byte_end":9091961,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9091962,"byte_end":9091976,"line_start":67,"line_end":67,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9091977,"byte_end":9091980,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9091981,"byte_end":9091992,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9091993,"byte_end":9092019,"line_start":70,"line_end":70,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9092020,"byte_end":9092023,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9092024,"byte_end":9092042,"line_start":72,"line_end":72,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9092043,"byte_end":9092064,"line_start":73,"line_end":73,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9092065,"byte_end":9092111,"line_start":74,"line_end":74,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9092112,"byte_end":9092115,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9092116,"byte_end":9092149,"line_start":76,"line_end":76,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9092150,"byte_end":9092178,"line_start":77,"line_end":77,"column_start":1,"column_end":29}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9092179,"byte_end":9092229,"line_start":78,"line_end":78,"column_start":1,"column_end":51}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9092230,"byte_end":9092279,"line_start":79,"line_end":79,"column_start":1,"column_end":50}},{"value":"/                 return;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9092280,"byte_end":9092307,"line_start":80,"line_end":80,"column_start":1,"column_end":28}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9092308,"byte_end":9092325,"line_start":81,"line_end":81,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9092326,"byte_end":9092339,"line_start":82,"line_end":82,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9092340,"byte_end":9092351,"line_start":83,"line_end":83,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9092352,"byte_end":9092355,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9092356,"byte_end":9092401,"line_start":85,"line_end":85,"column_start":1,"column_end":46}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9092402,"byte_end":9092438,"line_start":86,"line_end":86,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9092439,"byte_end":9092448,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9092449,"byte_end":9092454,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9092455,"byte_end":9092462,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5244},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9094839,"byte_end":9094843,"line_start":162,"line_end":162,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9093077,"byte_end":9093123,"line_start":110,"line_end":110,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9093128,"byte_end":9093131,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ This method returns `None` if the channel has been closed and there are","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9093136,"byte_end":9093211,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/ no remaining messages in the channel's buffer. This indicates that no","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9093216,"byte_end":9093289,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/ further values can ever be received from this `Receiver`. The channel is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9093294,"byte_end":9093370,"line_start":114,"line_end":114,"column_start":5,"column_end":81}},{"value":"/ closed when all senders have been dropped, or when [`close`] is called.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9093375,"byte_end":9093450,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9093455,"byte_end":9093458,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ If there are no messages in the channel's buffer, but the channel has","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9093463,"byte_end":9093536,"line_start":117,"line_end":117,"column_start":5,"column_end":78}},{"value":"/ not yet been closed, this method will sleep until a message is sent or","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9093541,"byte_end":9093615,"line_start":118,"line_end":118,"column_start":5,"column_end":79}},{"value":"/ the channel is closed.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9093620,"byte_end":9093646,"line_start":119,"line_end":119,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9093651,"byte_end":9093654,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ Note that if [`close`] is called, but there are still outstanding","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9093659,"byte_end":9093728,"line_start":121,"line_end":121,"column_start":5,"column_end":74}},{"value":"/ [`Permits`] from before it was closed, the channel is not considered","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9093733,"byte_end":9093805,"line_start":122,"line_end":122,"column_start":5,"column_end":77}},{"value":"/ closed by `recv` until the permits are released.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9093810,"byte_end":9093862,"line_start":123,"line_end":123,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9093867,"byte_end":9093870,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Self::close","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9093875,"byte_end":9093901,"line_start":125,"line_end":125,"column_start":5,"column_end":31}},{"value":"/ [`Permits`]: struct@crate::sync::mpsc::Permit","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9093906,"byte_end":9093955,"line_start":126,"line_end":126,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9093960,"byte_end":9093963,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9093968,"byte_end":9093982,"line_start":128,"line_end":128,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9093987,"byte_end":9093990,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9093995,"byte_end":9094002,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9094007,"byte_end":9094033,"line_start":131,"line_end":131,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9094038,"byte_end":9094041,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9094046,"byte_end":9094064,"line_start":133,"line_end":133,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9094069,"byte_end":9094090,"line_start":134,"line_end":134,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9094095,"byte_end":9094141,"line_start":135,"line_end":135,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9094146,"byte_end":9094149,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9094154,"byte_end":9094187,"line_start":137,"line_end":137,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").await.unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9094192,"byte_end":9094236,"line_start":138,"line_end":138,"column_start":5,"column_end":49}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9094241,"byte_end":9094252,"line_start":139,"line_end":139,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9094257,"byte_end":9094260,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9094265,"byte_end":9094316,"line_start":141,"line_end":141,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9094321,"byte_end":9094363,"line_start":142,"line_end":142,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9094368,"byte_end":9094373,"line_start":143,"line_end":143,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9094378,"byte_end":9094385,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9094390,"byte_end":9094393,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9094398,"byte_end":9094422,"line_start":146,"line_end":146,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9094427,"byte_end":9094430,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9094435,"byte_end":9094442,"line_start":148,"line_end":148,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9094447,"byte_end":9094473,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9094478,"byte_end":9094481,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9094486,"byte_end":9094504,"line_start":151,"line_end":151,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9094509,"byte_end":9094530,"line_start":152,"line_end":152,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9094535,"byte_end":9094581,"line_start":153,"line_end":153,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9094586,"byte_end":9094589,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").await.unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9094594,"byte_end":9094634,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/     tx.send(\"world\").await.unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9094639,"byte_end":9094679,"line_start":156,"line_end":156,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9094684,"byte_end":9094687,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9094692,"byte_end":9094743,"line_start":158,"line_end":158,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9094748,"byte_end":9094799,"line_start":159,"line_end":159,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9094804,"byte_end":9094809,"line_start":160,"line_end":160,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9094814,"byte_end":9094821,"line_start":161,"line_end":161,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5249},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9096907,"byte_end":9096920,"line_start":218,"line_end":218,"column_start":12,"column_end":25},"name":"blocking_recv","qualname":"<Receiver<T>>::blocking_recv","value":"pub fn blocking_recv(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Blocking receive to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking receive to call outside of asynchronous contexts.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9094964,"byte_end":9095026,"line_start":167,"line_end":167,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9095031,"byte_end":9095034,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ This method returns `None` if the channel has been closed and there are","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9095039,"byte_end":9095114,"line_start":169,"line_end":169,"column_start":5,"column_end":80}},{"value":"/ no remaining messages in the channel's buffer. This indicates that no","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9095119,"byte_end":9095192,"line_start":170,"line_end":170,"column_start":5,"column_end":78}},{"value":"/ further values can ever be received from this `Receiver`. The channel is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9095197,"byte_end":9095273,"line_start":171,"line_end":171,"column_start":5,"column_end":81}},{"value":"/ closed when all senders have been dropped, or when [`close`] is called.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9095278,"byte_end":9095353,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9095358,"byte_end":9095361,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ If there are no messages in the channel's buffer, but the channel has","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9095366,"byte_end":9095439,"line_start":174,"line_end":174,"column_start":5,"column_end":78}},{"value":"/ not yet been closed, this method will block until a message is sent or","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9095444,"byte_end":9095518,"line_start":175,"line_end":175,"column_start":5,"column_end":79}},{"value":"/ the channel is closed.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9095523,"byte_end":9095549,"line_start":176,"line_end":176,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9095554,"byte_end":9095557,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use cases where you are sending from","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9095562,"byte_end":9095630,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ asynchronous code to synchronous code, and will work even if the sender","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9095635,"byte_end":9095710,"line_start":179,"line_end":179,"column_start":5,"column_end":80}},{"value":"/ is not using [`blocking_send`] to send the message.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9095715,"byte_end":9095770,"line_start":180,"line_end":180,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9095775,"byte_end":9095778,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Note that if [`close`] is called, but there are still outstanding","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9095783,"byte_end":9095852,"line_start":182,"line_end":182,"column_start":5,"column_end":74}},{"value":"/ [`Permits`] from before it was closed, the channel is not considered","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9095857,"byte_end":9095929,"line_start":183,"line_end":183,"column_start":5,"column_end":77}},{"value":"/ closed by `blocking_recv` until the permits are released.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9095934,"byte_end":9095995,"line_start":184,"line_end":184,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9096000,"byte_end":9096003,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Self::close","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9096008,"byte_end":9096034,"line_start":186,"line_end":186,"column_start":5,"column_end":31}},{"value":"/ [`Permits`]: struct@crate::sync::mpsc::Permit","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9096039,"byte_end":9096088,"line_start":187,"line_end":187,"column_start":5,"column_end":54}},{"value":"/ [`blocking_send`]: fn@crate::sync::mpsc::Sender::blocking_send","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9096093,"byte_end":9096159,"line_start":188,"line_end":188,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9096164,"byte_end":9096167,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9096172,"byte_end":9096184,"line_start":190,"line_end":190,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9096189,"byte_end":9096192,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9096197,"byte_end":9096264,"line_start":192,"line_end":192,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9096269,"byte_end":9096281,"line_start":193,"line_end":193,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9096286,"byte_end":9096289,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9096294,"byte_end":9096308,"line_start":195,"line_end":195,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9096313,"byte_end":9096316,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9096321,"byte_end":9096328,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9096333,"byte_end":9096353,"line_start":198,"line_end":198,"column_start":5,"column_end":25}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9096358,"byte_end":9096390,"line_start":199,"line_end":199,"column_start":5,"column_end":37}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9096395,"byte_end":9096421,"line_start":200,"line_end":200,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9096426,"byte_end":9096429,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9096434,"byte_end":9096449,"line_start":202,"line_end":202,"column_start":5,"column_end":20}},{"value":"/     let (tx, mut rx) = mpsc::channel::<u8>(10);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9096454,"byte_end":9096505,"line_start":203,"line_end":203,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9096510,"byte_end":9096513,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9096518,"byte_end":9096565,"line_start":205,"line_end":205,"column_start":5,"column_end":52}},{"value":"/         assert_eq!(Some(10), rx.blocking_recv());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9096570,"byte_end":9096623,"line_start":206,"line_end":206,"column_start":5,"column_end":58}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9096628,"byte_end":9096639,"line_start":207,"line_end":207,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9096644,"byte_end":9096647,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/     Runtime::new()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9096652,"byte_end":9096674,"line_start":209,"line_end":209,"column_start":5,"column_end":27}},{"value":"/         .unwrap()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9096679,"byte_end":9096700,"line_start":210,"line_end":210,"column_start":5,"column_end":26}},{"value":"/         .block_on(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9096705,"byte_end":9096739,"line_start":211,"line_end":211,"column_start":5,"column_end":39}},{"value":"/             let _ = tx.send(10).await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9096744,"byte_end":9096786,"line_start":212,"line_end":212,"column_start":5,"column_end":47}},{"value":"/         });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9096791,"byte_end":9096806,"line_start":213,"line_end":213,"column_start":5,"column_end":20}},{"value":"/     sync_code.join().unwrap()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9096811,"byte_end":9096844,"line_start":214,"line_end":214,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9096849,"byte_end":9096854,"line_start":215,"line_end":215,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9096859,"byte_end":9096866,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9096871,"byte_end":9096895,"line_start":217,"line_end":217,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5250},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9099008,"byte_end":9099013,"line_start":278,"line_end":278,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel without dropping it.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9097736,"byte_end":9097799,"line_start":239,"line_end":239,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9097804,"byte_end":9097807,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9097812,"byte_end":9097887,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered. Any","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9097892,"byte_end":9097964,"line_start":242,"line_end":242,"column_start":5,"column_end":77}},{"value":"/ outstanding [`Permit`] values will still be able to send messages.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9097969,"byte_end":9098039,"line_start":243,"line_end":243,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9098044,"byte_end":9098047,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ To guarantee that no messages are dropped, after calling `close()`,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9098052,"byte_end":9098123,"line_start":245,"line_end":245,"column_start":5,"column_end":76}},{"value":"/ `recv()` must be called until `None` is returned. If there are","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9098128,"byte_end":9098194,"line_start":246,"line_end":246,"column_start":5,"column_end":71}},{"value":"/ outstanding [`Permit`] values, the `recv` method will not return `None`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9098199,"byte_end":9098274,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/ until those are released.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9098279,"byte_end":9098308,"line_start":248,"line_end":248,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9098313,"byte_end":9098316,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9098321,"byte_end":9098343,"line_start":250,"line_end":250,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9098348,"byte_end":9098351,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9098356,"byte_end":9098370,"line_start":252,"line_end":252,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9098375,"byte_end":9098378,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9098383,"byte_end":9098390,"line_start":254,"line_end":254,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9098395,"byte_end":9098421,"line_start":255,"line_end":255,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9098426,"byte_end":9098429,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9098434,"byte_end":9098452,"line_start":257,"line_end":257,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9098457,"byte_end":9098478,"line_start":258,"line_end":258,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(20);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9098483,"byte_end":9098528,"line_start":259,"line_end":259,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9098533,"byte_end":9098536,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9098541,"byte_end":9098574,"line_start":261,"line_end":261,"column_start":5,"column_end":38}},{"value":"/         let mut i = 0;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9098579,"byte_end":9098605,"line_start":262,"line_end":262,"column_start":5,"column_end":31}},{"value":"/         while let Ok(permit) = tx.reserve().await {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9098610,"byte_end":9098665,"line_start":263,"line_end":263,"column_start":5,"column_end":60}},{"value":"/             permit.send(i);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9098670,"byte_end":9098701,"line_start":264,"line_end":264,"column_start":5,"column_end":36}},{"value":"/             i += 1;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9098706,"byte_end":9098729,"line_start":265,"line_end":265,"column_start":5,"column_end":28}},{"value":"/         }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9098734,"byte_end":9098747,"line_start":266,"line_end":266,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9098752,"byte_end":9098763,"line_start":267,"line_end":267,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9098768,"byte_end":9098771,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9098776,"byte_end":9098795,"line_start":269,"line_end":269,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9098800,"byte_end":9098803,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/     while let Some(msg) = rx.recv().await {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9098808,"byte_end":9098855,"line_start":271,"line_end":271,"column_start":5,"column_end":52}},{"value":"/         println!(\"got {}\", msg);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9098860,"byte_end":9098896,"line_start":272,"line_end":272,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9098901,"byte_end":9098910,"line_start":273,"line_end":273,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9098915,"byte_end":9098918,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/     // Channel closed and no messages are lost.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9098923,"byte_end":9098974,"line_start":275,"line_end":275,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9098979,"byte_end":9098984,"line_start":276,"line_end":276,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9098989,"byte_end":9098996,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5251},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9099854,"byte_end":9099863,"line_start":297,"line_end":297,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next message on this channel.","sig":null,"attributes":[{"value":"/ Polls to receive the next message on this channel.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9099065,"byte_end":9099119,"line_start":282,"line_end":282,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9099124,"byte_end":9099127,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9099132,"byte_end":9099156,"line_start":284,"line_end":284,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9099161,"byte_end":9099164,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if no messages are available but the channel is not","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9099169,"byte_end":9099243,"line_start":286,"line_end":286,"column_start":5,"column_end":79}},{"value":"/    closed.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9099248,"byte_end":9099262,"line_start":287,"line_end":287,"column_start":5,"column_end":19}},{"value":"/  * `Poll::Ready(Some(message))` if a message is available.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9099267,"byte_end":9099329,"line_start":288,"line_end":288,"column_start":5,"column_end":67}},{"value":"/  * `Poll::Ready(None)` if the channel has been closed and all messages","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9099334,"byte_end":9099408,"line_start":289,"line_end":289,"column_start":5,"column_end":79}},{"value":"/    sent before it was closed have been received.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9099413,"byte_end":9099465,"line_start":290,"line_end":290,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9099470,"byte_end":9099473,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9099478,"byte_end":9099550,"line_start":292,"line_end":292,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when a message is sent on any","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9099555,"byte_end":9099631,"line_start":293,"line_end":293,"column_start":5,"column_end":81}},{"value":"/ receiver, or when the channel is closed.  Note that on multiple calls to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9099636,"byte_end":9099712,"line_start":294,"line_end":294,"column_start":5,"column_end":81}},{"value":"/ `poll_recv`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9099717,"byte_end":9099788,"line_start":295,"line_end":295,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9099793,"byte_end":9099842,"line_start":296,"line_end":296,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5260},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9101959,"byte_end":9101963,"line_start":362,"line_end":362,"column_start":18,"column_end":22},"name":"send","qualname":"<Sender<T>>::send","value":"pub async fn send<'_>(&'_ Self, T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9100319,"byte_end":9100370,"line_start":317,"line_end":317,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9100375,"byte_end":9100378,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9100383,"byte_end":9100459,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9100464,"byte_end":9100540,"line_start":320,"line_end":320,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been closed. Note that a return","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9100545,"byte_end":9100619,"line_start":321,"line_end":321,"column_start":5,"column_end":79}},{"value":"/ value of `Err` means that the data will never be received, but a return","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9100624,"byte_end":9100699,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ value of `Ok` does not mean that the data will be received. It is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9100704,"byte_end":9100773,"line_start":323,"line_end":323,"column_start":5,"column_end":74}},{"value":"/ possible for the corresponding receiver to hang up immediately after","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9100778,"byte_end":9100850,"line_start":324,"line_end":324,"column_start":5,"column_end":77}},{"value":"/ this function returns `Ok`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9100855,"byte_end":9100886,"line_start":325,"line_end":325,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9100891,"byte_end":9100894,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9100899,"byte_end":9100911,"line_start":327,"line_end":327,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9100916,"byte_end":9100919,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9100924,"byte_end":9100997,"line_start":329,"line_end":329,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9101002,"byte_end":9101076,"line_start":330,"line_end":330,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9101081,"byte_end":9101141,"line_start":331,"line_end":331,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9101146,"byte_end":9101149,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9101154,"byte_end":9101184,"line_start":333,"line_end":333,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9101189,"byte_end":9101215,"line_start":334,"line_end":334,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9101220,"byte_end":9101223,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9101228,"byte_end":9101242,"line_start":336,"line_end":336,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9101247,"byte_end":9101250,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send` will block until the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9101255,"byte_end":9101325,"line_start":338,"line_end":338,"column_start":5,"column_end":75}},{"value":"/ previously sent value was received.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9101330,"byte_end":9101369,"line_start":339,"line_end":339,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9101374,"byte_end":9101377,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9101382,"byte_end":9101393,"line_start":341,"line_end":341,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9101398,"byte_end":9101424,"line_start":342,"line_end":342,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9101429,"byte_end":9101432,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9101437,"byte_end":9101455,"line_start":344,"line_end":344,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9101460,"byte_end":9101481,"line_start":345,"line_end":345,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9101486,"byte_end":9101530,"line_start":346,"line_end":346,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9101535,"byte_end":9101538,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9101543,"byte_end":9101576,"line_start":348,"line_end":348,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9101581,"byte_end":9101609,"line_start":349,"line_end":349,"column_start":5,"column_end":33}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9101614,"byte_end":9101664,"line_start":350,"line_end":350,"column_start":5,"column_end":55}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9101669,"byte_end":9101718,"line_start":351,"line_end":351,"column_start":5,"column_end":54}},{"value":"/                 return;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9101723,"byte_end":9101750,"line_start":352,"line_end":352,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9101755,"byte_end":9101772,"line_start":353,"line_end":353,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9101777,"byte_end":9101790,"line_start":354,"line_end":354,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9101795,"byte_end":9101806,"line_start":355,"line_end":355,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9101811,"byte_end":9101814,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9101819,"byte_end":9101864,"line_start":357,"line_end":357,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9101869,"byte_end":9101905,"line_start":358,"line_end":358,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9101910,"byte_end":9101919,"line_start":359,"line_end":359,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9101924,"byte_end":9101929,"line_start":360,"line_end":360,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9101934,"byte_end":9101941,"line_start":361,"line_end":361,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5263},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9103096,"byte_end":9103102,"line_start":403,"line_end":403,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the receiver has dropped.","sig":null,"attributes":[{"value":"/ Completes when the receiver has dropped.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9102215,"byte_end":9102259,"line_start":372,"line_end":372,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9102264,"byte_end":9102267,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ This allows the producers to get notified when interest in the produced","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9102272,"byte_end":9102347,"line_start":374,"line_end":374,"column_start":5,"column_end":80}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9102352,"byte_end":9102407,"line_start":375,"line_end":375,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9102412,"byte_end":9102415,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9102420,"byte_end":9102434,"line_start":377,"line_end":377,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9102439,"byte_end":9102442,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9102447,"byte_end":9102454,"line_start":379,"line_end":379,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9102459,"byte_end":9102485,"line_start":380,"line_end":380,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9102490,"byte_end":9102493,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9102498,"byte_end":9102516,"line_start":382,"line_end":382,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9102521,"byte_end":9102542,"line_start":383,"line_end":383,"column_start":5,"column_end":26}},{"value":"/     let (tx1, rx) = mpsc::channel::<()>(1);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9102547,"byte_end":9102594,"line_start":384,"line_end":384,"column_start":5,"column_end":52}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9102599,"byte_end":9102629,"line_start":385,"line_end":385,"column_start":5,"column_end":35}},{"value":"/     let tx3 = tx1.clone();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9102634,"byte_end":9102664,"line_start":386,"line_end":386,"column_start":5,"column_end":35}},{"value":"/     let tx4 = tx1.clone();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9102669,"byte_end":9102699,"line_start":387,"line_end":387,"column_start":5,"column_end":35}},{"value":"/     let tx5 = tx1.clone();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9102704,"byte_end":9102734,"line_start":388,"line_end":388,"column_start":5,"column_end":35}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9102739,"byte_end":9102772,"line_start":389,"line_end":389,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9102777,"byte_end":9102798,"line_start":390,"line_end":390,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9102803,"byte_end":9102814,"line_start":391,"line_end":391,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9102819,"byte_end":9102822,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/     futures::join!(","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9102827,"byte_end":9102850,"line_start":393,"line_end":393,"column_start":5,"column_end":28}},{"value":"/         tx1.closed(),","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9102855,"byte_end":9102880,"line_start":394,"line_end":394,"column_start":5,"column_end":30}},{"value":"/         tx2.closed(),","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9102885,"byte_end":9102910,"line_start":395,"line_end":395,"column_start":5,"column_end":30}},{"value":"/         tx3.closed(),","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9102915,"byte_end":9102940,"line_start":396,"line_end":396,"column_start":5,"column_end":30}},{"value":"/         tx4.closed(),","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9102945,"byte_end":9102970,"line_start":397,"line_end":397,"column_start":5,"column_end":30}},{"value":"/         tx5.closed()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9102975,"byte_end":9102999,"line_start":398,"line_end":398,"column_start":5,"column_end":29}},{"value":"/     );","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9103004,"byte_end":9103014,"line_start":399,"line_end":399,"column_start":5,"column_end":15}},{"value":"/     println!(\"Receiver dropped\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9103019,"byte_end":9103056,"line_start":400,"line_end":400,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9103061,"byte_end":9103066,"line_start":401,"line_end":401,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9103071,"byte_end":9103078,"line_start":402,"line_end":402,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5266},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9105276,"byte_end":9105284,"line_start":465,"line_end":465,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"pub fn try_send(&Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to immediately send a message on this `Sender`","sig":null,"attributes":[{"value":"/ Attempts to immediately send a message on this `Sender`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9103156,"byte_end":9103215,"line_start":407,"line_end":407,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9103220,"byte_end":9103223,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ This method differs from [`send`] by returning immediately if the channel's","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9103228,"byte_end":9103307,"line_start":409,"line_end":409,"column_start":5,"column_end":84}},{"value":"/ buffer is full or no receiver is waiting to acquire some data. Compared","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9103312,"byte_end":9103387,"line_start":410,"line_end":410,"column_start":5,"column_end":80}},{"value":"/ with [`send`], this function has two failure cases instead of one (one for","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9103392,"byte_end":9103470,"line_start":411,"line_end":411,"column_start":5,"column_end":83}},{"value":"/ disconnection, one for a full buffer).","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9103475,"byte_end":9103517,"line_start":412,"line_end":412,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9103522,"byte_end":9103525,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9103530,"byte_end":9103542,"line_start":414,"line_end":414,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9103547,"byte_end":9103550,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ If the channel capacity has been reached, i.e., the channel has `n`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9103555,"byte_end":9103626,"line_start":416,"line_end":416,"column_start":5,"column_end":76}},{"value":"/ buffered values where `n` is the argument passed to [`channel`], then an","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9103631,"byte_end":9103707,"line_start":417,"line_end":417,"column_start":5,"column_end":81}},{"value":"/ error is returned.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9103712,"byte_end":9103734,"line_start":418,"line_end":418,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9103739,"byte_end":9103742,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9103747,"byte_end":9103820,"line_start":420,"line_end":420,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9103825,"byte_end":9103899,"line_start":421,"line_end":421,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9103904,"byte_end":9103964,"line_start":422,"line_end":422,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9103969,"byte_end":9103972,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9103977,"byte_end":9104003,"line_start":424,"line_end":424,"column_start":5,"column_end":31}},{"value":"/ [`channel`]: channel","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9104008,"byte_end":9104032,"line_start":425,"line_end":425,"column_start":5,"column_end":29}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9104037,"byte_end":9104067,"line_start":426,"line_end":426,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9104072,"byte_end":9104075,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9104080,"byte_end":9104094,"line_start":428,"line_end":428,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9104099,"byte_end":9104102,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9104107,"byte_end":9104114,"line_start":430,"line_end":430,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9104119,"byte_end":9104145,"line_start":431,"line_end":431,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9104150,"byte_end":9104153,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9104158,"byte_end":9104176,"line_start":433,"line_end":433,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9104181,"byte_end":9104202,"line_start":434,"line_end":434,"column_start":5,"column_end":26}},{"value":"/     // Create a channel with buffer size 1","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9104207,"byte_end":9104253,"line_start":435,"line_end":435,"column_start":5,"column_end":51}},{"value":"/     let (tx1, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9104258,"byte_end":9104303,"line_start":436,"line_end":436,"column_start":5,"column_end":50}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9104308,"byte_end":9104338,"line_start":437,"line_end":437,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9104343,"byte_end":9104346,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9104351,"byte_end":9104384,"line_start":439,"line_end":439,"column_start":5,"column_end":38}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9104389,"byte_end":9104428,"line_start":440,"line_end":440,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9104433,"byte_end":9104472,"line_start":441,"line_end":441,"column_start":5,"column_end":44}},{"value":"/         // task waits until the receiver receives a value.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9104477,"byte_end":9104539,"line_start":442,"line_end":442,"column_start":5,"column_end":67}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9104544,"byte_end":9104555,"line_start":443,"line_end":443,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9104560,"byte_end":9104563,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9104568,"byte_end":9104601,"line_start":445,"line_end":445,"column_start":5,"column_end":38}},{"value":"/         // This will return an error and send","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9104606,"byte_end":9104655,"line_start":446,"line_end":446,"column_start":5,"column_end":54}},{"value":"/         // no message if the buffer is full","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9104660,"byte_end":9104707,"line_start":447,"line_end":447,"column_start":5,"column_end":52}},{"value":"/         let _ = tx2.try_send(3);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9104712,"byte_end":9104748,"line_start":448,"line_end":448,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9104753,"byte_end":9104764,"line_start":449,"line_end":449,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9104769,"byte_end":9104772,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/     let mut msg;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9104777,"byte_end":9104797,"line_start":451,"line_end":451,"column_start":5,"column_end":25}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9104802,"byte_end":9104841,"line_start":452,"line_end":452,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9104846,"byte_end":9104891,"line_start":453,"line_end":453,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9104896,"byte_end":9104899,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9104904,"byte_end":9104943,"line_start":455,"line_end":455,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9104948,"byte_end":9104993,"line_start":456,"line_end":456,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9104998,"byte_end":9105001,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/     // Third message may have never been sent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9105006,"byte_end":9105055,"line_start":458,"line_end":458,"column_start":5,"column_end":54}},{"value":"/     match rx.recv().await {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9105060,"byte_end":9105091,"line_start":459,"line_end":459,"column_start":5,"column_end":36}},{"value":"/         Some(msg) => println!(\"message {} received\", msg),","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9105096,"byte_end":9105158,"line_start":460,"line_end":460,"column_start":5,"column_end":67}},{"value":"/         None => println!(\"the third message was never sent\"),","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9105163,"byte_end":9105228,"line_start":461,"line_end":461,"column_start":5,"column_end":70}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9105233,"byte_end":9105242,"line_start":462,"line_end":462,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9105247,"byte_end":9105252,"line_start":463,"line_end":463,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9105257,"byte_end":9105264,"line_start":464,"line_end":464,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5267},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9107373,"byte_end":9107385,"line_start":524,"line_end":524,"column_start":18,"column_end":30},"name":"send_timeout","qualname":"<Sender<T>>::send_timeout","value":"pub async fn send_timeout<'_>(&'_ Self, T, Duration) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity, but only for a limited time.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity, but only for a limited time.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9105689,"byte_end":9105769,"line_start":477,"line_end":477,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9105774,"byte_end":9105777,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ Shares the same success and error conditions as [`send`], adding one more","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9105782,"byte_end":9105859,"line_start":479,"line_end":479,"column_start":5,"column_end":82}},{"value":"/ condition for an unsuccessful send, which is when the provided timeout has","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9105864,"byte_end":9105942,"line_start":480,"line_end":480,"column_start":5,"column_end":83}},{"value":"/ elapsed, and there is no capacity available.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9105947,"byte_end":9105995,"line_start":481,"line_end":481,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9106000,"byte_end":9106003,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9106008,"byte_end":9106034,"line_start":483,"line_end":483,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9106039,"byte_end":9106042,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9106047,"byte_end":9106059,"line_start":485,"line_end":485,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9106064,"byte_end":9106067,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9106072,"byte_end":9106145,"line_start":487,"line_end":487,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] having been dropped,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9106150,"byte_end":9106207,"line_start":488,"line_end":488,"column_start":5,"column_end":62}},{"value":"/ the function returns an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9106212,"byte_end":9106293,"line_start":489,"line_end":489,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9106298,"byte_end":9106301,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9106306,"byte_end":9106336,"line_start":491,"line_end":491,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9106341,"byte_end":9106367,"line_start":492,"line_end":492,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9106372,"byte_end":9106375,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9106380,"byte_end":9106394,"line_start":494,"line_end":494,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9106399,"byte_end":9106402,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send_timeout` will block until the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9106407,"byte_end":9106485,"line_start":496,"line_end":496,"column_start":5,"column_end":83}},{"value":"/ previously sent value was received, unless the timeout has elapsed.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9106490,"byte_end":9106561,"line_start":497,"line_end":497,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9106566,"byte_end":9106569,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9106574,"byte_end":9106585,"line_start":499,"line_end":499,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9106590,"byte_end":9106616,"line_start":500,"line_end":500,"column_start":5,"column_end":31}},{"value":"/ use tokio::time::{sleep, Duration};","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9106621,"byte_end":9106660,"line_start":501,"line_end":501,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9106665,"byte_end":9106668,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9106673,"byte_end":9106691,"line_start":503,"line_end":503,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9106696,"byte_end":9106717,"line_start":504,"line_end":504,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9106722,"byte_end":9106766,"line_start":505,"line_end":505,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9106771,"byte_end":9106774,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9106779,"byte_end":9106812,"line_start":507,"line_end":507,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9106817,"byte_end":9106845,"line_start":508,"line_end":508,"column_start":5,"column_end":33}},{"value":"/             if let Err(e) = tx.send_timeout(i, Duration::from_millis(100)).await {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9106850,"byte_end":9106936,"line_start":509,"line_end":509,"column_start":5,"column_end":91}},{"value":"/                 println!(\"send error: #{:?}\", e);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9106941,"byte_end":9106994,"line_start":510,"line_end":510,"column_start":5,"column_end":58}},{"value":"/                 return;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9106999,"byte_end":9107026,"line_start":511,"line_end":511,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9107031,"byte_end":9107048,"line_start":512,"line_end":512,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9107053,"byte_end":9107066,"line_start":513,"line_end":513,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9107071,"byte_end":9107082,"line_start":514,"line_end":514,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9107087,"byte_end":9107090,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9107095,"byte_end":9107140,"line_start":516,"line_end":516,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9107145,"byte_end":9107181,"line_start":517,"line_end":517,"column_start":5,"column_end":41}},{"value":"/         sleep(Duration::from_millis(200)).await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9107186,"byte_end":9107238,"line_start":518,"line_end":518,"column_start":5,"column_end":57}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9107243,"byte_end":9107252,"line_start":519,"line_end":519,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9107257,"byte_end":9107262,"line_start":520,"line_end":520,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9107267,"byte_end":9107274,"line_start":521,"line_end":521,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"time\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9107279,"byte_end":9107303,"line_start":522,"line_end":522,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5270},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9108950,"byte_end":9108963,"line_start":577,"line_end":577,"column_start":12,"column_end":25},"name":"blocking_send","qualname":"<Sender<T>>::blocking_send","value":"pub fn blocking_send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Blocking send to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking send to call outside of asynchronous contexts.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9107878,"byte_end":9107937,"line_start":543,"line_end":543,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9107942,"byte_end":9107945,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use cases where you are sending from","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9107950,"byte_end":9108018,"line_start":545,"line_end":545,"column_start":5,"column_end":73}},{"value":"/ synchronous code to asynchronous code, and will work even if the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9108023,"byte_end":9108091,"line_start":546,"line_end":546,"column_start":5,"column_end":73}},{"value":"/ receiver is not using [`blocking_recv`] to receive the message.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9108096,"byte_end":9108163,"line_start":547,"line_end":547,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9108168,"byte_end":9108171,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ [`blocking_recv`]: fn@crate::sync::mpsc::Receiver::blocking_recv","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9108176,"byte_end":9108244,"line_start":549,"line_end":549,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9108249,"byte_end":9108252,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9108257,"byte_end":9108269,"line_start":551,"line_end":551,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9108274,"byte_end":9108277,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9108282,"byte_end":9108349,"line_start":553,"line_end":553,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9108354,"byte_end":9108366,"line_start":554,"line_end":554,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9108371,"byte_end":9108374,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9108379,"byte_end":9108393,"line_start":556,"line_end":556,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9108398,"byte_end":9108401,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9108406,"byte_end":9108413,"line_start":558,"line_end":558,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9108418,"byte_end":9108438,"line_start":559,"line_end":559,"column_start":5,"column_end":25}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9108443,"byte_end":9108475,"line_start":560,"line_end":560,"column_start":5,"column_end":37}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9108480,"byte_end":9108506,"line_start":561,"line_end":561,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9108511,"byte_end":9108514,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9108519,"byte_end":9108534,"line_start":563,"line_end":563,"column_start":5,"column_end":20}},{"value":"/     let (tx, mut rx) = mpsc::channel::<u8>(1);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9108539,"byte_end":9108589,"line_start":564,"line_end":564,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9108594,"byte_end":9108597,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9108602,"byte_end":9108649,"line_start":566,"line_end":566,"column_start":5,"column_end":52}},{"value":"/         tx.blocking_send(10).unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9108654,"byte_end":9108696,"line_start":567,"line_end":567,"column_start":5,"column_end":47}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9108701,"byte_end":9108712,"line_start":568,"line_end":568,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9108717,"byte_end":9108720,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/     Runtime::new().unwrap().block_on(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9108725,"byte_end":9108778,"line_start":570,"line_end":570,"column_start":5,"column_end":58}},{"value":"/         assert_eq!(Some(10), rx.recv().await);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9108783,"byte_end":9108833,"line_start":571,"line_end":571,"column_start":5,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9108838,"byte_end":9108849,"line_start":572,"line_end":572,"column_start":5,"column_end":16}},{"value":"/     sync_code.join().unwrap()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9108854,"byte_end":9108887,"line_start":573,"line_end":573,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9108892,"byte_end":9108897,"line_start":574,"line_end":574,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9108902,"byte_end":9108909,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9108914,"byte_end":9108938,"line_start":576,"line_end":576,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5271},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9109654,"byte_end":9109663,"line_start":599,"line_end":599,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when the\n [`Receiver`] is dropped, or when the [`Receiver::close`] method is\n called.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9109072,"byte_end":9109136,"line_start":581,"line_end":581,"column_start":5,"column_end":69}},{"value":"/ [`Receiver`] is dropped, or when the [`Receiver::close`] method is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9109141,"byte_end":9109211,"line_start":582,"line_end":582,"column_start":5,"column_end":75}},{"value":"/ called.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9109216,"byte_end":9109227,"line_start":583,"line_end":583,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9109232,"byte_end":9109235,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9109240,"byte_end":9109285,"line_start":585,"line_end":585,"column_start":5,"column_end":50}},{"value":"/ [`Receiver::close`]: crate::sync::mpsc::Receiver::close","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9109290,"byte_end":9109349,"line_start":586,"line_end":586,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9109354,"byte_end":9109357,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9109362,"byte_end":9109369,"line_start":588,"line_end":588,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::channel::<()>(42);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9109374,"byte_end":9109430,"line_start":589,"line_end":589,"column_start":5,"column_end":61}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9109435,"byte_end":9109464,"line_start":590,"line_end":590,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9109469,"byte_end":9109472,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ let tx2 = tx.clone();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9109477,"byte_end":9109502,"line_start":592,"line_end":592,"column_start":5,"column_end":30}},{"value":"/ assert!(!tx2.is_closed());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9109507,"byte_end":9109537,"line_start":593,"line_end":593,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9109542,"byte_end":9109545,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9109550,"byte_end":9109563,"line_start":595,"line_end":595,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9109568,"byte_end":9109596,"line_start":596,"line_end":596,"column_start":5,"column_end":33}},{"value":"/ assert!(tx2.is_closed());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9109601,"byte_end":9109630,"line_start":597,"line_end":597,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9109635,"byte_end":9109642,"line_start":598,"line_end":598,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5272},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9111054,"byte_end":9111061,"line_start":641,"line_end":641,"column_start":18,"column_end":25},"name":"reserve","qualname":"<Sender<T>>::reserve","value":"pub async fn reserve<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for channel capacity. Once capacity to send one message is\n available, it is reserved for the caller.","sig":null,"attributes":[{"value":"/ Wait for channel capacity. Once capacity to send one message is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9109722,"byte_end":9109789,"line_start":603,"line_end":603,"column_start":5,"column_end":72}},{"value":"/ available, it is reserved for the caller.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9109794,"byte_end":9109839,"line_start":604,"line_end":604,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9109844,"byte_end":9109847,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, the function waits for the number of unreceived","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9109852,"byte_end":9109927,"line_start":606,"line_end":606,"column_start":5,"column_end":80}},{"value":"/ messages to become less than the channel capacity. Capacity to send one","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9109932,"byte_end":9110007,"line_start":607,"line_end":607,"column_start":5,"column_end":80}},{"value":"/ message is reserved for the caller. A [`Permit`] is returned to track","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9110012,"byte_end":9110085,"line_start":608,"line_end":608,"column_start":5,"column_end":78}},{"value":"/ the reserved capacity. The [`send`] function on [`Permit`] consumes the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9110090,"byte_end":9110165,"line_start":609,"line_end":609,"column_start":5,"column_end":80}},{"value":"/ reserved capacity.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9110170,"byte_end":9110192,"line_start":610,"line_end":610,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9110197,"byte_end":9110200,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ Dropping [`Permit`] without sending a message releases the capacity back","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9110205,"byte_end":9110281,"line_start":612,"line_end":612,"column_start":5,"column_end":81}},{"value":"/ to the channel.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9110286,"byte_end":9110305,"line_start":613,"line_end":613,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9110310,"byte_end":9110313,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9110318,"byte_end":9110340,"line_start":615,"line_end":615,"column_start":5,"column_end":27}},{"value":"/ [`send`]: Permit::send","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9110345,"byte_end":9110371,"line_start":616,"line_end":616,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9110376,"byte_end":9110379,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9110384,"byte_end":9110398,"line_start":618,"line_end":618,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9110403,"byte_end":9110406,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9110411,"byte_end":9110418,"line_start":620,"line_end":620,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9110423,"byte_end":9110449,"line_start":621,"line_end":621,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9110454,"byte_end":9110457,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9110462,"byte_end":9110480,"line_start":623,"line_end":623,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9110485,"byte_end":9110506,"line_start":624,"line_end":624,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9110511,"byte_end":9110555,"line_start":625,"line_end":625,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9110560,"byte_end":9110563,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9110568,"byte_end":9110595,"line_start":627,"line_end":627,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9110600,"byte_end":9110649,"line_start":628,"line_end":628,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9110654,"byte_end":9110657,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9110662,"byte_end":9110728,"line_start":630,"line_end":630,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9110733,"byte_end":9110763,"line_start":631,"line_end":631,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9110768,"byte_end":9110811,"line_start":632,"line_end":632,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9110816,"byte_end":9110819,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9110824,"byte_end":9110865,"line_start":634,"line_end":634,"column_start":5,"column_end":46}},{"value":"/     permit.send(456);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9110870,"byte_end":9110895,"line_start":635,"line_end":635,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9110900,"byte_end":9110903,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9110908,"byte_end":9110959,"line_start":637,"line_end":637,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9110964,"byte_end":9111014,"line_start":638,"line_end":638,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9111019,"byte_end":9111024,"line_start":639,"line_end":639,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9111029,"byte_end":9111036,"line_start":640,"line_end":640,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5275},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9112824,"byte_end":9112835,"line_start":693,"line_end":693,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<Sender<T>>::try_reserve","value":"pub fn try_reserve(&Self) -> Result<Permit<, T>, TrySendError<()>>","parent":null,"children":[],"decl_id":null,"docs":" Try to acquire a slot in the channel without waiting for the slot to become\n available.","sig":null,"attributes":[{"value":"/ Try to acquire a slot in the channel without waiting for the slot to become","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9111303,"byte_end":9111382,"line_start":650,"line_end":650,"column_start":5,"column_end":84}},{"value":"/ available.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9111387,"byte_end":9111401,"line_start":651,"line_end":651,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9111406,"byte_end":9111409,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ If the channel is full this function will return [`TrySendError`], otherwise","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9111414,"byte_end":9111494,"line_start":653,"line_end":653,"column_start":5,"column_end":85}},{"value":"/ if there is a slot available it will return a [`Permit`] that will then allow you","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9111499,"byte_end":9111584,"line_start":654,"line_end":654,"column_start":5,"column_end":90}},{"value":"/ to [`send`] on the channel with a guaranteed slot. This function is similar to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9111589,"byte_end":9111671,"line_start":655,"line_end":655,"column_start":5,"column_end":87}},{"value":"/ [`reserve`] except it does not await for the slot to become available.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9111676,"byte_end":9111750,"line_start":656,"line_end":656,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9111755,"byte_end":9111758,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ Dropping [`Permit`] without sending a message releases the capacity back","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9111763,"byte_end":9111839,"line_start":658,"line_end":658,"column_start":5,"column_end":81}},{"value":"/ to the channel.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9111844,"byte_end":9111863,"line_start":659,"line_end":659,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9111868,"byte_end":9111871,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9111876,"byte_end":9111898,"line_start":661,"line_end":661,"column_start":5,"column_end":27}},{"value":"/ [`send`]: Permit::send","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9111903,"byte_end":9111929,"line_start":662,"line_end":662,"column_start":5,"column_end":31}},{"value":"/ [`reserve`]: Sender::reserve","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9111934,"byte_end":9111966,"line_start":663,"line_end":663,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9111971,"byte_end":9111974,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9111979,"byte_end":9111993,"line_start":665,"line_end":665,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9111998,"byte_end":9112001,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9112006,"byte_end":9112013,"line_start":667,"line_end":667,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9112018,"byte_end":9112044,"line_start":668,"line_end":668,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9112049,"byte_end":9112052,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9112057,"byte_end":9112075,"line_start":670,"line_end":670,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9112080,"byte_end":9112101,"line_start":671,"line_end":671,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9112106,"byte_end":9112150,"line_start":672,"line_end":672,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9112155,"byte_end":9112158,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9112163,"byte_end":9112190,"line_start":674,"line_end":674,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.try_reserve().unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9112195,"byte_end":9112242,"line_start":675,"line_end":675,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9112247,"byte_end":9112250,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9112255,"byte_end":9112321,"line_start":677,"line_end":677,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9112326,"byte_end":9112356,"line_start":678,"line_end":678,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9112361,"byte_end":9112404,"line_start":679,"line_end":679,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9112409,"byte_end":9112412,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/     // Trying to reserve an additional slot on the `tx` will","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9112417,"byte_end":9112481,"line_start":681,"line_end":681,"column_start":5,"column_end":69}},{"value":"/     // fail because there is no capacity.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9112486,"byte_end":9112531,"line_start":682,"line_end":682,"column_start":5,"column_end":50}},{"value":"/     assert!(tx.try_reserve().is_err());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9112536,"byte_end":9112579,"line_start":683,"line_end":683,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9112584,"byte_end":9112587,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9112592,"byte_end":9112633,"line_start":685,"line_end":685,"column_start":5,"column_end":46}},{"value":"/     permit.send(456);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9112638,"byte_end":9112663,"line_start":686,"line_end":686,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9112668,"byte_end":9112671,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9112676,"byte_end":9112727,"line_start":688,"line_end":688,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9112732,"byte_end":9112782,"line_start":689,"line_end":689,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9112787,"byte_end":9112790,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9112795,"byte_end":9112800,"line_start":691,"line_end":691,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9112805,"byte_end":9112812,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5284},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9114552,"byte_end":9114556,"line_start":754,"line_end":754,"column_start":12,"column_end":16},"name":"send","qualname":"<Permit>::send","value":"pub fn send(Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Sends a value using the reserved capacity.","sig":null,"attributes":[{"value":"/ Sends a value using the reserved capacity.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9113479,"byte_end":9113525,"line_start":722,"line_end":722,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9113530,"byte_end":9113533,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ Capacity for the message has already been reserved. The message is sent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9113538,"byte_end":9113613,"line_start":724,"line_end":724,"column_start":5,"column_end":80}},{"value":"/ to the receiver and the permit is consumed. The operation will succeed","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9113618,"byte_end":9113692,"line_start":725,"line_end":725,"column_start":5,"column_end":79}},{"value":"/ even if the receiver half has been closed. See [`Receiver::close`] for","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9113697,"byte_end":9113771,"line_start":726,"line_end":726,"column_start":5,"column_end":79}},{"value":"/ more details on performing a clean shutdown.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9113776,"byte_end":9113824,"line_start":727,"line_end":727,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9113829,"byte_end":9113832,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ [`Receiver::close`]: Receiver::close","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9113837,"byte_end":9113877,"line_start":729,"line_end":729,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9113882,"byte_end":9113885,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9113890,"byte_end":9113904,"line_start":731,"line_end":731,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9113909,"byte_end":9113912,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9113917,"byte_end":9113924,"line_start":733,"line_end":733,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9113929,"byte_end":9113955,"line_start":734,"line_end":734,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9113960,"byte_end":9113963,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9113968,"byte_end":9113986,"line_start":736,"line_end":736,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9113991,"byte_end":9114012,"line_start":737,"line_end":737,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9114017,"byte_end":9114061,"line_start":738,"line_end":738,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9114066,"byte_end":9114069,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9114074,"byte_end":9114101,"line_start":740,"line_end":740,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9114106,"byte_end":9114155,"line_start":741,"line_end":741,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9114160,"byte_end":9114163,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9114168,"byte_end":9114234,"line_start":743,"line_end":743,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9114239,"byte_end":9114269,"line_start":744,"line_end":744,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9114274,"byte_end":9114317,"line_start":745,"line_end":745,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9114322,"byte_end":9114325,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/     // Send a message on the permit","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9114330,"byte_end":9114369,"line_start":747,"line_end":747,"column_start":5,"column_end":44}},{"value":"/     permit.send(456);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9114374,"byte_end":9114399,"line_start":748,"line_end":748,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9114404,"byte_end":9114407,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9114412,"byte_end":9114463,"line_start":750,"line_end":750,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9114468,"byte_end":9114518,"line_start":751,"line_end":751,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9114523,"byte_end":9114528,"line_start":752,"line_end":752,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9114533,"byte_end":9114540,"line_start":753,"line_end":753,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5481},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9136808,"byte_end":9136823,"line_start":12,"line_end":12,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::sync::mpsc::unbounded::UnboundedSender","value":"UnboundedSender {  }","parent":null,"children":[{"krate":0,"index":5483}],"decl_id":null,"docs":" Send values to the associated `UnboundedReceiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `UnboundedReceiver`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9136650,"byte_end":9136704,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9136705,"byte_end":9136708,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9136709,"byte_end":9136741,"line_start":10,"line_end":10,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9136742,"byte_end":9136796,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":5490},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9137616,"byte_end":9137633,"line_start":40,"line_end":40,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::sync::mpsc::unbounded::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":5492}],"decl_id":null,"docs":" Receive values from the associated `UnboundedSender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `UnboundedSender`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9137240,"byte_end":9137297,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9137298,"byte_end":9137301,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9137302,"byte_end":9137334,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9137335,"byte_end":9137389,"line_start":35,"line_end":35,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9137390,"byte_end":9137393,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ This receiver can be turned into a `Stream` using [`UnboundedReceiverStream`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9137394,"byte_end":9137476,"line_start":37,"line_end":37,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9137477,"byte_end":9137480,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`UnboundedReceiverStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.UnboundedReceiverStream.html","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9137481,"byte_end":9137604,"line_start":39,"line_end":39,"column_start":1,"column_end":124}}]},{"kind":"Function","id":{"krate":0,"index":5496},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9138465,"byte_end":9138482,"line_start":63,"line_end":63,"column_start":8,"column_end":25},"name":"unbounded_channel","qualname":"::sync::mpsc::unbounded::unbounded_channel","value":"pub fn unbounded_channel<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks without backpressure.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9137932,"byte_end":9138008,"line_start":53,"line_end":53,"column_start":1,"column_end":77}},{"value":"/ tasks without backpressure.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9138009,"byte_end":9138040,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9138041,"byte_end":9138044,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9138045,"byte_end":9138125,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9138126,"byte_end":9138205,"line_start":57,"line_end":57,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9138206,"byte_end":9138219,"line_start":58,"line_end":58,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9138220,"byte_end":9138223,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9138224,"byte_end":9138303,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9138304,"byte_end":9138380,"line_start":61,"line_end":61,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9138381,"byte_end":9138457,"line_start":62,"line_end":62,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":5502},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9139961,"byte_end":9139965,"line_start":119,"line_end":119,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnboundedReceiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9138891,"byte_end":9138937,"line_start":80,"line_end":80,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9138942,"byte_end":9138945,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9138950,"byte_end":9139022,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9139027,"byte_end":9139081,"line_start":83,"line_end":83,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9139086,"byte_end":9139089,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9139094,"byte_end":9139108,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9139113,"byte_end":9139116,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9139121,"byte_end":9139128,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9139133,"byte_end":9139159,"line_start":88,"line_end":88,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9139164,"byte_end":9139167,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9139172,"byte_end":9139190,"line_start":90,"line_end":90,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9139195,"byte_end":9139216,"line_start":91,"line_end":91,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9139221,"byte_end":9139274,"line_start":92,"line_end":92,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9139279,"byte_end":9139282,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9139287,"byte_end":9139320,"line_start":94,"line_end":94,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9139325,"byte_end":9139363,"line_start":95,"line_end":95,"column_start":5,"column_end":43}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9139368,"byte_end":9139379,"line_start":96,"line_end":96,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9139384,"byte_end":9139387,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9139392,"byte_end":9139443,"line_start":98,"line_end":98,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9139448,"byte_end":9139490,"line_start":99,"line_end":99,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9139495,"byte_end":9139500,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9139505,"byte_end":9139512,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9139517,"byte_end":9139520,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9139525,"byte_end":9139549,"line_start":103,"line_end":103,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9139554,"byte_end":9139557,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9139562,"byte_end":9139569,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9139574,"byte_end":9139600,"line_start":106,"line_end":106,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9139605,"byte_end":9139608,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9139613,"byte_end":9139631,"line_start":108,"line_end":108,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9139636,"byte_end":9139657,"line_start":109,"line_end":109,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9139662,"byte_end":9139715,"line_start":110,"line_end":110,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9139720,"byte_end":9139723,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9139728,"byte_end":9139762,"line_start":112,"line_end":112,"column_start":5,"column_end":39}},{"value":"/     tx.send(\"world\").unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9139767,"byte_end":9139801,"line_start":113,"line_end":113,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9139806,"byte_end":9139809,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9139814,"byte_end":9139865,"line_start":115,"line_end":115,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9139870,"byte_end":9139921,"line_start":116,"line_end":116,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9139926,"byte_end":9139931,"line_start":117,"line_end":117,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9139936,"byte_end":9139943,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5507},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9140772,"byte_end":9140785,"line_start":151,"line_end":151,"column_start":12,"column_end":25},"name":"blocking_recv","qualname":"<UnboundedReceiver<T>>::blocking_recv","value":"pub fn blocking_recv(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Blocking receive to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking receive to call outside of asynchronous contexts.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9140087,"byte_end":9140149,"line_start":125,"line_end":125,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9140154,"byte_end":9140157,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9140162,"byte_end":9140174,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9140179,"byte_end":9140182,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9140187,"byte_end":9140254,"line_start":129,"line_end":129,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9140259,"byte_end":9140271,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9140276,"byte_end":9140279,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9140284,"byte_end":9140298,"line_start":132,"line_end":132,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9140303,"byte_end":9140306,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9140311,"byte_end":9140318,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9140323,"byte_end":9140343,"line_start":135,"line_end":135,"column_start":5,"column_end":25}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9140348,"byte_end":9140374,"line_start":136,"line_end":136,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9140379,"byte_end":9140382,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9140387,"byte_end":9140405,"line_start":138,"line_end":138,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9140410,"byte_end":9140431,"line_start":139,"line_end":139,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel::<u8>();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9140436,"byte_end":9140495,"line_start":140,"line_end":140,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9140500,"byte_end":9140503,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9140508,"byte_end":9140555,"line_start":142,"line_end":142,"column_start":5,"column_end":52}},{"value":"/         assert_eq!(Some(10), rx.blocking_recv());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9140560,"byte_end":9140613,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9140618,"byte_end":9140629,"line_start":144,"line_end":144,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9140634,"byte_end":9140637,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/     let _ = tx.send(10);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9140642,"byte_end":9140670,"line_start":146,"line_end":146,"column_start":5,"column_end":33}},{"value":"/     sync_code.join().unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9140675,"byte_end":9140709,"line_start":147,"line_end":147,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9140714,"byte_end":9140719,"line_start":148,"line_end":148,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9140724,"byte_end":9140731,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9140736,"byte_end":9140760,"line_start":150,"line_end":150,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5508},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9141105,"byte_end":9141110,"line_start":159,"line_end":159,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9140868,"byte_end":9140932,"line_start":155,"line_end":155,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9140937,"byte_end":9140940,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9140945,"byte_end":9141020,"line_start":157,"line_end":157,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9141025,"byte_end":9141093,"line_start":158,"line_end":158,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":5509},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9141951,"byte_end":9141960,"line_start":178,"line_end":178,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UnboundedReceiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next message on this channel.","sig":null,"attributes":[{"value":"/ Polls to receive the next message on this channel.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9141162,"byte_end":9141216,"line_start":163,"line_end":163,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9141221,"byte_end":9141224,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9141229,"byte_end":9141253,"line_start":165,"line_end":165,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9141258,"byte_end":9141261,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if no messages are available but the channel is not","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9141266,"byte_end":9141340,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/    closed.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9141345,"byte_end":9141359,"line_start":168,"line_end":168,"column_start":5,"column_end":19}},{"value":"/  * `Poll::Ready(Some(message))` if a message is available.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9141364,"byte_end":9141426,"line_start":169,"line_end":169,"column_start":5,"column_end":67}},{"value":"/  * `Poll::Ready(None)` if the channel has been closed and all messages","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9141431,"byte_end":9141505,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/    sent before it was closed have been received.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9141510,"byte_end":9141562,"line_start":171,"line_end":171,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9141567,"byte_end":9141570,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9141575,"byte_end":9141647,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when a message is sent on any","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9141652,"byte_end":9141728,"line_start":174,"line_end":174,"column_start":5,"column_end":81}},{"value":"/ receiver, or when the channel is closed.  Note that on multiple calls to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9141733,"byte_end":9141809,"line_start":175,"line_end":175,"column_start":5,"column_end":81}},{"value":"/ `poll_recv`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9141814,"byte_end":9141885,"line_start":176,"line_end":176,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9141890,"byte_end":9141939,"line_start":177,"line_end":177,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5513},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9142888,"byte_end":9142892,"line_start":200,"line_end":200,"column_start":12,"column_end":16},"name":"send","qualname":"<UnboundedSender<T>>::send","value":"pub fn send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `UnboundedSender` without blocking.","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `UnboundedSender` without blocking.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9142200,"byte_end":9142274,"line_start":188,"line_end":188,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9142279,"byte_end":9142282,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ This method is not marked async because sending a message to an unbounded channel","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9142287,"byte_end":9142372,"line_start":190,"line_end":190,"column_start":5,"column_end":90}},{"value":"/ never requires any form of waiting. Because of this, the `send` method can be","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9142377,"byte_end":9142458,"line_start":191,"line_end":191,"column_start":5,"column_end":86}},{"value":"/ used in both synchronous and asynchronous code without problems.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9142463,"byte_end":9142531,"line_start":192,"line_end":192,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9142536,"byte_end":9142539,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9142544,"byte_end":9142617,"line_start":194,"line_end":194,"column_start":5,"column_end":78}},{"value":"/ being called or the [`UnboundedReceiver`] having been dropped, this","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9142622,"byte_end":9142693,"line_start":195,"line_end":195,"column_start":5,"column_end":76}},{"value":"/ function returns an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9142698,"byte_end":9142775,"line_start":196,"line_end":196,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9142780,"byte_end":9142783,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ [`close`]: UnboundedReceiver::close","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9142788,"byte_end":9142827,"line_start":198,"line_end":198,"column_start":5,"column_end":44}},{"value":"/ [`UnboundedReceiver`]: UnboundedReceiver","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9142832,"byte_end":9142876,"line_start":199,"line_end":199,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5519},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9144821,"byte_end":9144827,"line_start":270,"line_end":270,"column_start":18,"column_end":24},"name":"closed","qualname":"<UnboundedSender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the receiver has dropped.","sig":null,"attributes":[{"value":"/ Completes when the receiver has dropped.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9143930,"byte_end":9143974,"line_start":239,"line_end":239,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9143979,"byte_end":9143982,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ This allows the producers to get notified when interest in the produced","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9143987,"byte_end":9144062,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9144067,"byte_end":9144122,"line_start":242,"line_end":242,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9144127,"byte_end":9144130,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9144135,"byte_end":9144149,"line_start":244,"line_end":244,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9144154,"byte_end":9144157,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9144162,"byte_end":9144169,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9144174,"byte_end":9144200,"line_start":247,"line_end":247,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9144205,"byte_end":9144208,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9144213,"byte_end":9144231,"line_start":249,"line_end":249,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9144236,"byte_end":9144257,"line_start":250,"line_end":250,"column_start":5,"column_end":26}},{"value":"/     let (tx1, rx) = mpsc::unbounded_channel::<()>();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9144262,"byte_end":9144318,"line_start":251,"line_end":251,"column_start":5,"column_end":61}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9144323,"byte_end":9144353,"line_start":252,"line_end":252,"column_start":5,"column_end":35}},{"value":"/     let tx3 = tx1.clone();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9144358,"byte_end":9144388,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/     let tx4 = tx1.clone();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9144393,"byte_end":9144423,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/     let tx5 = tx1.clone();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9144428,"byte_end":9144458,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9144463,"byte_end":9144496,"line_start":256,"line_end":256,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9144501,"byte_end":9144522,"line_start":257,"line_end":257,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9144527,"byte_end":9144538,"line_start":258,"line_end":258,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9144543,"byte_end":9144546,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/     futures::join!(","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9144551,"byte_end":9144574,"line_start":260,"line_end":260,"column_start":5,"column_end":28}},{"value":"/         tx1.closed(),","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9144579,"byte_end":9144604,"line_start":261,"line_end":261,"column_start":5,"column_end":30}},{"value":"/         tx2.closed(),","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9144609,"byte_end":9144634,"line_start":262,"line_end":262,"column_start":5,"column_end":30}},{"value":"/         tx3.closed(),","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9144639,"byte_end":9144664,"line_start":263,"line_end":263,"column_start":5,"column_end":30}},{"value":"/         tx4.closed(),","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9144669,"byte_end":9144694,"line_start":264,"line_end":264,"column_start":5,"column_end":30}},{"value":"/         tx5.closed()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9144699,"byte_end":9144723,"line_start":265,"line_end":265,"column_start":5,"column_end":29}},{"value":"/     );","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9144728,"byte_end":9144738,"line_start":266,"line_end":266,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9144786,"byte_end":9144791,"line_start":268,"line_end":268,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9144796,"byte_end":9144803,"line_start":269,"line_end":269,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5522},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9145524,"byte_end":9145533,"line_start":291,"line_end":291,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<UnboundedSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when the\n [`UnboundedReceiver`] is dropped, or when the\n [`UnboundedReceiver::close`] method is called.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9144880,"byte_end":9144944,"line_start":273,"line_end":273,"column_start":5,"column_end":69}},{"value":"/ [`UnboundedReceiver`] is dropped, or when the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9144949,"byte_end":9144998,"line_start":274,"line_end":274,"column_start":5,"column_end":54}},{"value":"/ [`UnboundedReceiver::close`] method is called.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9145003,"byte_end":9145053,"line_start":275,"line_end":275,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9145058,"byte_end":9145061,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ [`UnboundedReceiver`]: crate::sync::mpsc::UnboundedReceiver","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9145066,"byte_end":9145129,"line_start":277,"line_end":277,"column_start":5,"column_end":68}},{"value":"/ [`UnboundedReceiver::close`]: crate::sync::mpsc::UnboundedReceiver::close","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9145134,"byte_end":9145211,"line_start":278,"line_end":278,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9145216,"byte_end":9145219,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9145224,"byte_end":9145231,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::unbounded_channel::<()>();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9145236,"byte_end":9145300,"line_start":281,"line_end":281,"column_start":5,"column_end":69}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9145305,"byte_end":9145334,"line_start":282,"line_end":282,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9145339,"byte_end":9145342,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ let tx2 = tx.clone();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9145347,"byte_end":9145372,"line_start":284,"line_end":284,"column_start":5,"column_end":30}},{"value":"/ assert!(!tx2.is_closed());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9145377,"byte_end":9145407,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9145412,"byte_end":9145415,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9145420,"byte_end":9145433,"line_start":287,"line_end":287,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9145438,"byte_end":9145466,"line_start":288,"line_end":288,"column_start":5,"column_end":33}},{"value":"/ assert!(tx2.is_closed());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9145471,"byte_end":9145500,"line_start":289,"line_end":289,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9145505,"byte_end":9145512,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":5527},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::sync::mpsc::error","value":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","parent":null,"children":[{"krate":0,"index":5528},{"krate":0,"index":5529},{"krate":0,"index":6210},{"krate":0,"index":6214},{"krate":0,"index":5530},{"krate":0,"index":5533},{"krate":0,"index":6217},{"krate":0,"index":6225},{"krate":0,"index":5535},{"krate":0,"index":5537},{"krate":0,"index":5540},{"krate":0,"index":6228},{"krate":0,"index":6231},{"krate":0,"index":5543},{"krate":0,"index":5545},{"krate":0,"index":6238},{"krate":0,"index":6246},{"krate":0,"index":6233},{"krate":0,"index":6235}],"decl_id":null,"docs":" Channel error types\n","sig":null,"attributes":[{"value":"/ Channel error types","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":9145590,"byte_end":9145613,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6210},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":9145717,"byte_end":9145726,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::mpsc::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Sender`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Sender`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":9145653,"byte_end":9145688,"line_start":6,"line_end":6,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":6213},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":9145730,"byte_end":9145735,"line_start":8,"line_end":8,"column_start":25,"column_end":30},"name":"0","qualname":"::sync::mpsc::error::SendError::0","value":"T","parent":{"krate":0,"index":6210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6219},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":9146279,"byte_end":9146283,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"Full","qualname":"::sync::mpsc::error::TrySendError::Full","value":"TrySendError::Full(T)","parent":{"krate":0,"index":6217},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n currently full and sending would require blocking.\n","sig":null,"attributes":[{"value":"/ The data could not be sent on the channel because the channel is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":9146147,"byte_end":9146215,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/ currently full and sending would require blocking.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":9146220,"byte_end":9146274,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6222},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":9146384,"byte_end":9146390,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TrySendError::Closed","value":"TrySendError::Closed(T)","parent":{"krate":0,"index":6217},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[{"value":"/ The receive half of the channel was explicitly closed or has been","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":9146293,"byte_end":9146362,"line_start":28,"line_end":28,"column_start":5,"column_end":74}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":9146367,"byte_end":9146379,"line_start":29,"line_end":29,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":6217},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":9146125,"byte_end":9146137,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"TrySendError","qualname":"::sync::mpsc::error::TrySendError","value":"pub enum TrySendError<T> {\n\n    /// The data could not be sent on the channel because the channel is\n    /// currently full and sending would require blocking.\n    Full(T),\n\n    /// The receive half of the channel was explicitly closed or has been\n    /// dropped.\n    Closed(T),\n}","parent":null,"children":[{"krate":0,"index":6219},{"krate":0,"index":6222}],"decl_id":null,"docs":" This enumeration is the list of the possible error outcomes for the\n [try_send](super::Sender::try_send) method.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible error outcomes for the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":9145979,"byte_end":9146050,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ [try_send](super::Sender::try_send) method.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":9146051,"byte_end":9146098,"line_start":21,"line_end":21,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":6228},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":9147028,"byte_end":9147037,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"RecvError","qualname":"::sync::mpsc::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Receiver`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":9146966,"byte_end":9146999,"line_start":56,"line_end":56,"column_start":1,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6240},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":9148543,"byte_end":9148550,"line_start":109,"line_end":109,"column_start":9,"column_end":16},"name":"Timeout","qualname":"::sync::mpsc::error::SendTimeoutError::Timeout","value":"SendTimeoutError::Timeout(T)","parent":{"krate":0,"index":6238},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n full, and the timeout to send has elapsed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6243},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":9148663,"byte_end":9148669,"line_start":113,"line_end":113,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::mpsc::error::SendTimeoutError::Closed","value":"SendTimeoutError::Closed(T)","parent":{"krate":0,"index":6238},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6238},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":9148381,"byte_end":9148397,"line_start":106,"line_end":106,"column_start":14,"column_end":30},"name":"SendTimeoutError","qualname":"::sync::mpsc::error::SendTimeoutError","value":"pub enum SendTimeoutError<T> {\n\n    #[doc =\n      r\" The data could not be sent on the channel because the channel is\"]\n    #[doc = r\" full, and the timeout to send has elapsed.\"]\n    Timeout(T),\n\n    #[doc =\n      r\" The receive half of the channel was explicitly closed or has been\"]\n    #[doc = r\" dropped.\"]\n    Closed(T),\n}","parent":null,"children":[{"krate":0,"index":6240},{"krate":0,"index":6243}],"decl_id":null,"docs":" Error returned by [`Sender::send_timeout`](super::Sender::send_timeout)].\n","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":24384,"byte_end":24408,"line_start":311,"line_end":311,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5556},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9153655,"byte_end":9153660,"line_start":120,"line_end":120,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::sync::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":5558},{"krate":0,"index":5559}],"decl_id":null,"docs":" An asynchronous `Mutex`-like type.","sig":null,"attributes":[{"value":"/ An asynchronous `Mutex`-like type.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9149402,"byte_end":9149440,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9149441,"byte_end":9149444,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This type acts similarly to an asynchronous [`std::sync::Mutex`], with one","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9149445,"byte_end":9149523,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ major difference: [`lock`] does not block and the lock guard can be held","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9149524,"byte_end":9149600,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ across await points.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9149601,"byte_end":9149625,"line_start":15,"line_end":15,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9149626,"byte_end":9149629,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Which kind of mutex should you use?","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9149630,"byte_end":9149671,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9149672,"byte_end":9149675,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Contrary to popular belief, it is ok and often preferred to use the ordinary","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9149676,"byte_end":9149756,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ [`Mutex`][std] from the standard library in asynchronous code. This section","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9149757,"byte_end":9149836,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ will help you decide on which kind of mutex you should use.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9149837,"byte_end":9149900,"line_start":21,"line_end":21,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9149901,"byte_end":9149904,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The primary use case of the async mutex is to provide shared mutable access","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9149905,"byte_end":9149984,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ to IO resources such as a database connection. If the data stored behind the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9149985,"byte_end":9150065,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ mutex is just data, it is often better to use a blocking mutex such as the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9150066,"byte_end":9150144,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ one in the standard library or [`parking_lot`]. This is because the feature","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9150145,"byte_end":9150224,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ that the async mutex offers over the blocking mutex is that it is possible","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9150225,"byte_end":9150303,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ to keep the mutex locked across an `.await` point, which is rarely necessary","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9150304,"byte_end":9150384,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ for data.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9150385,"byte_end":9150398,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9150399,"byte_end":9150402,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A common pattern is to wrap the `Arc<Mutex<...>>` in a struct that provides","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9150403,"byte_end":9150482,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ non-async methods for performing operations on the data within, and only","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9150483,"byte_end":9150559,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ lock the mutex inside these methods. The [mini-redis] example provides an","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9150560,"byte_end":9150637,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ illustration of this pattern.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9150638,"byte_end":9150671,"line_start":34,"line_end":34,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9150672,"byte_end":9150675,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Additionally, when you _do_ want shared access to an IO resource, it is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9150676,"byte_end":9150751,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/ often better to spawn a task to manage the IO resource, and to use message","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9150752,"byte_end":9150830,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ passing to communicate with that task.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9150831,"byte_end":9150873,"line_start":38,"line_end":38,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9150874,"byte_end":9150877,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [std]: std::sync::Mutex","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9150878,"byte_end":9150905,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/ [`parking_lot`]: https://docs.rs/parking_lot","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9150906,"byte_end":9150954,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ [mini-redis]: https://github.com/tokio-rs/mini-redis/blob/master/src/db.rs","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9150955,"byte_end":9151033,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151034,"byte_end":9151037,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151038,"byte_end":9151053,"line_start":44,"line_end":44,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151054,"byte_end":9151057,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151058,"byte_end":9151076,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151077,"byte_end":9151104,"line_start":47,"line_end":47,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151105,"byte_end":9151128,"line_start":48,"line_end":48,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151129,"byte_end":9151132,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151133,"byte_end":9151151,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151152,"byte_end":9151173,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/     let data1 = Arc::new(Mutex::new(0));","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151174,"byte_end":9151218,"line_start":52,"line_end":52,"column_start":1,"column_end":45}},{"value":"/     let data2 = Arc::clone(&data1);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151219,"byte_end":9151258,"line_start":53,"line_end":53,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151259,"byte_end":9151262,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151263,"byte_end":9151296,"line_start":55,"line_end":55,"column_start":1,"column_end":34}},{"value":"/         let mut lock = data2.lock().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151297,"byte_end":9151343,"line_start":56,"line_end":56,"column_start":1,"column_end":47}},{"value":"/         *lock += 1;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151344,"byte_end":9151367,"line_start":57,"line_end":57,"column_start":1,"column_end":24}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151368,"byte_end":9151379,"line_start":58,"line_end":58,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151380,"byte_end":9151383,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/     let mut lock = data1.lock().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151384,"byte_end":9151426,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/     *lock += 1;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151427,"byte_end":9151446,"line_start":61,"line_end":61,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151447,"byte_end":9151452,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151453,"byte_end":9151460,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151461,"byte_end":9151464,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151465,"byte_end":9151468,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151469,"byte_end":9151487,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151488,"byte_end":9151515,"line_start":67,"line_end":67,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151516,"byte_end":9151539,"line_start":68,"line_end":68,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151540,"byte_end":9151543,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151544,"byte_end":9151562,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151563,"byte_end":9151584,"line_start":71,"line_end":71,"column_start":1,"column_end":22}},{"value":"/     let count = Arc::new(Mutex::new(0));","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151585,"byte_end":9151629,"line_start":72,"line_end":72,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151630,"byte_end":9151633,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..5 {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151634,"byte_end":9151657,"line_start":74,"line_end":74,"column_start":1,"column_end":24}},{"value":"/         let my_count = Arc::clone(&count);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151658,"byte_end":9151704,"line_start":75,"line_end":75,"column_start":1,"column_end":47}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151705,"byte_end":9151742,"line_start":76,"line_end":76,"column_start":1,"column_end":38}},{"value":"/             for _ in 0..10 {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151743,"byte_end":9151775,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/                 let mut lock = my_count.lock().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151776,"byte_end":9151833,"line_start":78,"line_end":78,"column_start":1,"column_end":58}},{"value":"/                 *lock += 1;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151834,"byte_end":9151865,"line_start":79,"line_end":79,"column_start":1,"column_end":32}},{"value":"/                 println!(\"{}\", lock);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151866,"byte_end":9151907,"line_start":80,"line_end":80,"column_start":1,"column_end":42}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151908,"byte_end":9151925,"line_start":81,"line_end":81,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151926,"byte_end":9151941,"line_start":82,"line_end":82,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151942,"byte_end":9151951,"line_start":83,"line_end":83,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151952,"byte_end":9151955,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151956,"byte_end":9151970,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/         if *count.lock().await >= 50 {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9151971,"byte_end":9152013,"line_start":86,"line_end":86,"column_start":1,"column_end":43}},{"value":"/             break;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9152014,"byte_end":9152036,"line_start":87,"line_end":87,"column_start":1,"column_end":23}},{"value":"/         }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9152037,"byte_end":9152050,"line_start":88,"line_end":88,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9152051,"byte_end":9152060,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/     println!(\"Count hit 50.\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9152061,"byte_end":9152095,"line_start":90,"line_end":90,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9152096,"byte_end":9152101,"line_start":91,"line_end":91,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9152102,"byte_end":9152109,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ There are a few things of note here to pay attention to in this example.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9152110,"byte_end":9152186,"line_start":93,"line_end":93,"column_start":1,"column_end":77}},{"value":"/ 1. The mutex is wrapped in an [`Arc`] to allow it to be shared across","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9152187,"byte_end":9152260,"line_start":94,"line_end":94,"column_start":1,"column_end":74}},{"value":"/    threads.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9152261,"byte_end":9152276,"line_start":95,"line_end":95,"column_start":1,"column_end":16}},{"value":"/ 2. Each spawned task obtains a lock and releases it on every iteration.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9152277,"byte_end":9152352,"line_start":96,"line_end":96,"column_start":1,"column_end":76}},{"value":"/ 3. Mutation of the data protected by the Mutex is done by de-referencing","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9152353,"byte_end":9152429,"line_start":97,"line_end":97,"column_start":1,"column_end":77}},{"value":"/    the obtained lock as seen on lines 12 and 19.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9152430,"byte_end":9152482,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9152483,"byte_end":9152486,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ Tokio's Mutex works in a simple FIFO (first in, first out) style where all","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9152487,"byte_end":9152565,"line_start":100,"line_end":100,"column_start":1,"column_end":79}},{"value":"/ calls to [`lock`] complete in the order they were performed. In that way the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9152566,"byte_end":9152646,"line_start":101,"line_end":101,"column_start":1,"column_end":81}},{"value":"/ Mutex is \"fair\" and predictable in how it distributes the locks to inner","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9152647,"byte_end":9152723,"line_start":102,"line_end":102,"column_start":1,"column_end":77}},{"value":"/ data. This is why the output of the program above is an in-order count to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9152724,"byte_end":9152801,"line_start":103,"line_end":103,"column_start":1,"column_end":78}},{"value":"/ 50. Locks are released and reacquired after every iteration, so basically,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9152802,"byte_end":9152880,"line_start":104,"line_end":104,"column_start":1,"column_end":79}},{"value":"/ each thread goes to the back of the line after it increments the value once.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9152881,"byte_end":9152961,"line_start":105,"line_end":105,"column_start":1,"column_end":81}},{"value":"/ Finally, since there is only a single valid lock at any given time, there is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9152962,"byte_end":9153042,"line_start":106,"line_end":106,"column_start":1,"column_end":81}},{"value":"/ no possibility of a race condition when mutating the inner value.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9153043,"byte_end":9153112,"line_start":107,"line_end":107,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9153113,"byte_end":9153116,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ Note that in contrast to [`std::sync::Mutex`], this implementation does not","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9153117,"byte_end":9153196,"line_start":109,"line_end":109,"column_start":1,"column_end":80}},{"value":"/ poison the mutex when a thread holding the [`MutexGuard`] panics. In such a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9153197,"byte_end":9153276,"line_start":110,"line_end":110,"column_start":1,"column_end":80}},{"value":"/ case, the mutex will be unlocked. If the panic is caught, this might leave","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9153277,"byte_end":9153355,"line_start":111,"line_end":111,"column_start":1,"column_end":79}},{"value":"/ the data protected by the mutex in an inconsistent state.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9153356,"byte_end":9153417,"line_start":112,"line_end":112,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9153418,"byte_end":9153421,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@Mutex","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9153422,"byte_end":9153449,"line_start":114,"line_end":114,"column_start":1,"column_end":28}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9153450,"byte_end":9153487,"line_start":115,"line_end":115,"column_start":1,"column_end":38}},{"value":"/ [`Arc`]: struct@std::sync::Arc","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9153488,"byte_end":9153522,"line_start":116,"line_end":116,"column_start":1,"column_end":35}},{"value":"/ [`std::sync::Mutex`]: struct@std::sync::Mutex","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9153523,"byte_end":9153572,"line_start":117,"line_end":117,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9153573,"byte_end":9153610,"line_start":118,"line_end":118,"column_start":1,"column_end":38}},{"value":"/ [`lock`]: method@Mutex::lock","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9153611,"byte_end":9153643,"line_start":119,"line_end":119,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":5560},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9154089,"byte_end":9154099,"line_start":133,"line_end":133,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::sync::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":5563}],"decl_id":null,"docs":" A handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ A handle to a held `Mutex`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9153728,"byte_end":9153759,"line_start":125,"line_end":125,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9153760,"byte_end":9153763,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9153764,"byte_end":9153843,"line_start":127,"line_end":127,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally borrows the `Mutex`, so the mutex will not be","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9153844,"byte_end":9153919,"line_start":128,"line_end":128,"column_start":1,"column_end":76}},{"value":"/ dropped while a guard exists.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9153920,"byte_end":9153953,"line_start":129,"line_end":129,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9153954,"byte_end":9153957,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9153958,"byte_end":9154036,"line_start":131,"line_end":131,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9154037,"byte_end":9154077,"line_start":132,"line_end":132,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":5564},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9154887,"byte_end":9154902,"line_start":152,"line_end":152,"column_start":12,"column_end":27},"name":"OwnedMutexGuard","qualname":"::sync::mutex::OwnedMutexGuard","value":"OwnedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":5566}],"decl_id":null,"docs":" An owned handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ An owned handle to a held `Mutex`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9154144,"byte_end":9154182,"line_start":137,"line_end":137,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9154183,"byte_end":9154186,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ This guard is only available from a `Mutex` that is wrapped in an [`Arc`]. It","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9154187,"byte_end":9154268,"line_start":139,"line_end":139,"column_start":1,"column_end":82}},{"value":"/ is identical to `MutexGuard`, except that rather than borrowing the `Mutex`,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9154269,"byte_end":9154349,"line_start":140,"line_end":140,"column_start":1,"column_end":81}},{"value":"/ it clones the `Arc`, incrementing the reference count. This means that","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9154350,"byte_end":9154424,"line_start":141,"line_end":141,"column_start":1,"column_end":75}},{"value":"/ unlike `MutexGuard`, it will have the `'static` lifetime.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9154425,"byte_end":9154486,"line_start":142,"line_end":142,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9154487,"byte_end":9154490,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9154491,"byte_end":9154570,"line_start":144,"line_end":144,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally keeps a reference-counted pointer to the original","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9154571,"byte_end":9154650,"line_start":145,"line_end":145,"column_start":1,"column_end":80}},{"value":"/ `Mutex`, so even if the lock goes away, the guard remains valid.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9154651,"byte_end":9154719,"line_start":146,"line_end":146,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9154720,"byte_end":9154723,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9154724,"byte_end":9154802,"line_start":148,"line_end":148,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9154803,"byte_end":9154843,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9154844,"byte_end":9154847,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9154848,"byte_end":9154875,"line_start":151,"line_end":151,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":6249},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9155991,"byte_end":9156003,"line_start":179,"line_end":179,"column_start":12,"column_end":24},"name":"TryLockError","qualname":"::sync::mutex::TryLockError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Mutex::try_lock`], [`RwLock::try_read`] and\n [`RwLock::try_write`] functions.","sig":null,"attributes":[{"value":"/ Error returned from the [`Mutex::try_lock`], [`RwLock::try_read`] and","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9155402,"byte_end":9155475,"line_start":164,"line_end":164,"column_start":1,"column_end":74}},{"value":"/ [`RwLock::try_write`] functions.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9155476,"byte_end":9155512,"line_start":165,"line_end":165,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9155513,"byte_end":9155516,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ `Mutex::try_lock` operation will only fail if the mutex is already locked.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9155517,"byte_end":9155595,"line_start":167,"line_end":167,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9155596,"byte_end":9155599,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ `RwLock::try_read` operation will only fail if the lock is currently held","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9155600,"byte_end":9155677,"line_start":169,"line_end":169,"column_start":1,"column_end":78}},{"value":"/ by an exclusive writer.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9155678,"byte_end":9155705,"line_start":170,"line_end":170,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9155706,"byte_end":9155709,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ `RwLock::try_write` operation will if lock is held by any reader or by an","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9155710,"byte_end":9155787,"line_start":172,"line_end":172,"column_start":1,"column_end":78}},{"value":"/ exclusive writer.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9155788,"byte_end":9155809,"line_start":173,"line_end":173,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9155810,"byte_end":9155813,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ [`Mutex::try_lock`]: Mutex::try_lock","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9155814,"byte_end":9155854,"line_start":175,"line_end":175,"column_start":1,"column_end":41}},{"value":"/ [`RwLock::try_read`]: fn@super::RwLock::try_read","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9155855,"byte_end":9155907,"line_start":176,"line_end":176,"column_start":1,"column_end":53}},{"value":"/ [`RwLock::try_write`]: fn@super::RwLock::try_write","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9155908,"byte_end":9155962,"line_start":177,"line_end":177,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5580},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9157230,"byte_end":9157233,"line_start":223,"line_end":223,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Self where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lock in an unlocked state ready for use.","sig":null,"attributes":[{"value":"/ Creates a new lock in an unlocked state ready for use.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9157027,"byte_end":9157085,"line_start":214,"line_end":214,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9157090,"byte_end":9157093,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9157098,"byte_end":9157112,"line_start":216,"line_end":216,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9157117,"byte_end":9157120,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9157125,"byte_end":9157132,"line_start":218,"line_end":218,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9157137,"byte_end":9157164,"line_start":219,"line_end":219,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9157169,"byte_end":9157172,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ let lock = Mutex::new(5);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9157177,"byte_end":9157206,"line_start":221,"line_end":221,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9157211,"byte_end":9157218,"line_start":222,"line_end":222,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5581},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9158391,"byte_end":9158395,"line_start":271,"line_end":271,"column_start":18,"column_end":22},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub async fn lock<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task\n to yield until the lock has been acquired.\n When the lock has been acquired, function returns a [`MutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9157931,"byte_end":9157977,"line_start":254,"line_end":254,"column_start":5,"column_end":51}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9157982,"byte_end":9158028,"line_start":255,"line_end":255,"column_start":5,"column_end":51}},{"value":"/ When the lock has been acquired, function returns a [`MutexGuard`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9158033,"byte_end":9158104,"line_start":256,"line_end":256,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9158109,"byte_end":9158112,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9158117,"byte_end":9158131,"line_start":258,"line_end":258,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9158136,"byte_end":9158139,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9158144,"byte_end":9158151,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9158156,"byte_end":9158183,"line_start":261,"line_end":261,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9158188,"byte_end":9158191,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9158196,"byte_end":9158214,"line_start":263,"line_end":263,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9158219,"byte_end":9158240,"line_start":264,"line_end":264,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9158245,"byte_end":9158279,"line_start":265,"line_end":265,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9158284,"byte_end":9158287,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.lock().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9158292,"byte_end":9158331,"line_start":267,"line_end":267,"column_start":5,"column_end":44}},{"value":"/     *n = 2;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9158336,"byte_end":9158351,"line_start":268,"line_end":268,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9158356,"byte_end":9158361,"line_start":269,"line_end":269,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9158366,"byte_end":9158373,"line_start":270,"line_end":270,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5584},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9159422,"byte_end":9159432,"line_start":302,"line_end":302,"column_start":18,"column_end":28},"name":"lock_owned","qualname":"<Mutex<T>>::lock_owned","value":"pub async fn lock_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task to yield until the lock has\n been acquired. When the lock has been acquired, this returns an\n [`OwnedMutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task to yield until the lock has","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9158501,"byte_end":9158575,"line_start":276,"line_end":276,"column_start":5,"column_end":79}},{"value":"/ been acquired. When the lock has been acquired, this returns an","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9158580,"byte_end":9158647,"line_start":277,"line_end":277,"column_start":5,"column_end":72}},{"value":"/ [`OwnedMutexGuard`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9158652,"byte_end":9158676,"line_start":278,"line_end":278,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9158681,"byte_end":9158684,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::lock`], except that the returned","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9158689,"byte_end":9158762,"line_start":280,"line_end":280,"column_start":5,"column_end":78}},{"value":"/ guard references the `Mutex` with an [`Arc`] rather than by borrowing","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9158767,"byte_end":9158840,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ it. Therefore, the `Mutex` must be wrapped in an `Arc` to call this","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9158845,"byte_end":9158916,"line_start":282,"line_end":282,"column_start":5,"column_end":76}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9158921,"byte_end":9158996,"line_start":283,"line_end":283,"column_start":5,"column_end":80}},{"value":"/ the `Mutex` alive by holding an `Arc`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9159001,"byte_end":9159043,"line_start":284,"line_end":284,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9159048,"byte_end":9159051,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9159056,"byte_end":9159070,"line_start":286,"line_end":286,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9159075,"byte_end":9159078,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9159083,"byte_end":9159090,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9159095,"byte_end":9159122,"line_start":289,"line_end":289,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9159127,"byte_end":9159150,"line_start":290,"line_end":290,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9159155,"byte_end":9159158,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9159163,"byte_end":9159181,"line_start":292,"line_end":292,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9159186,"byte_end":9159207,"line_start":293,"line_end":293,"column_start":5,"column_end":26}},{"value":"/     let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9159212,"byte_end":9159256,"line_start":294,"line_end":294,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9159261,"byte_end":9159264,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.clone().lock_owned().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9159269,"byte_end":9159322,"line_start":296,"line_end":296,"column_start":5,"column_end":58}},{"value":"/     *n = 2;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9159327,"byte_end":9159342,"line_start":297,"line_end":297,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9159347,"byte_end":9159352,"line_start":298,"line_end":298,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9159357,"byte_end":9159364,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9159369,"byte_end":9159372,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9159377,"byte_end":9159404,"line_start":301,"line_end":301,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5591},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9160309,"byte_end":9160317,"line_start":332,"line_end":332,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Result<MutexGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the\n lock is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9159841,"byte_end":9159910,"line_start":315,"line_end":315,"column_start":5,"column_end":74}},{"value":"/ lock is currently held somewhere else.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9159915,"byte_end":9159957,"line_start":316,"line_end":316,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9159962,"byte_end":9159965,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9159970,"byte_end":9160004,"line_start":318,"line_end":318,"column_start":5,"column_end":39}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9160009,"byte_end":9160023,"line_start":319,"line_end":319,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9160028,"byte_end":9160031,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9160036,"byte_end":9160043,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9160048,"byte_end":9160075,"line_start":322,"line_end":322,"column_start":5,"column_end":32}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9160080,"byte_end":9160143,"line_start":323,"line_end":323,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9160148,"byte_end":9160151,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9160156,"byte_end":9160186,"line_start":325,"line_end":325,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9160191,"byte_end":9160194,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.try_lock()?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9160199,"byte_end":9160229,"line_start":327,"line_end":327,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9160234,"byte_end":9160256,"line_start":328,"line_end":328,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9160261,"byte_end":9160273,"line_start":329,"line_end":329,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9160278,"byte_end":9160285,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9160290,"byte_end":9160297,"line_start":331,"line_end":331,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5592},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9160997,"byte_end":9161004,"line_start":356,"line_end":356,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9160526,"byte_end":9160581,"line_start":339,"line_end":339,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9160586,"byte_end":9160589,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9160594,"byte_end":9160669,"line_start":341,"line_end":341,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9160674,"byte_end":9160748,"line_start":342,"line_end":342,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9160753,"byte_end":9160756,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9160761,"byte_end":9160775,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9160780,"byte_end":9160783,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9160788,"byte_end":9160795,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9160800,"byte_end":9160827,"line_start":347,"line_end":347,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9160832,"byte_end":9160835,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9160840,"byte_end":9160855,"line_start":349,"line_end":349,"column_start":5,"column_end":20}},{"value":"/     let mut mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9160860,"byte_end":9160898,"line_start":350,"line_end":350,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9160903,"byte_end":9160906,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.get_mut();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9160911,"byte_end":9160943,"line_start":352,"line_end":352,"column_start":5,"column_end":37}},{"value":"/     *n = 2;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9160948,"byte_end":9160963,"line_start":353,"line_end":353,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9160968,"byte_end":9160973,"line_start":354,"line_end":354,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9160978,"byte_end":9160985,"line_start":355,"line_end":355,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5593},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9162085,"byte_end":9162099,"line_start":387,"line_end":387,"column_start":12,"column_end":26},"name":"try_lock_owned","qualname":"<Mutex<T>>::try_lock_owned","value":"pub fn try_lock_owned(Arc<Self>) -> Result<OwnedMutexGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the lock\n is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the lock","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9161173,"byte_end":9161247,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ is currently held somewhere else.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9161252,"byte_end":9161289,"line_start":364,"line_end":364,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9161294,"byte_end":9161297,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::try_lock`], except that the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9161302,"byte_end":9161370,"line_start":366,"line_end":366,"column_start":5,"column_end":73}},{"value":"/ returned  guard references the `Mutex` with an [`Arc`] rather than by","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9161375,"byte_end":9161448,"line_start":367,"line_end":367,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `Mutex` must be wrapped in an `Arc` to call","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9161453,"byte_end":9161529,"line_start":368,"line_end":368,"column_start":5,"column_end":81}},{"value":"/ this method, and the guard will live for the `'static` lifetime, as it","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9161534,"byte_end":9161608,"line_start":369,"line_end":369,"column_start":5,"column_end":79}},{"value":"/ keeps the `Mutex` alive by holding an `Arc`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9161613,"byte_end":9161661,"line_start":370,"line_end":370,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9161666,"byte_end":9161669,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9161674,"byte_end":9161708,"line_start":372,"line_end":372,"column_start":5,"column_end":39}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9161713,"byte_end":9161740,"line_start":373,"line_end":373,"column_start":5,"column_end":32}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9161745,"byte_end":9161759,"line_start":374,"line_end":374,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9161764,"byte_end":9161767,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9161772,"byte_end":9161779,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9161784,"byte_end":9161811,"line_start":377,"line_end":377,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9161816,"byte_end":9161839,"line_start":378,"line_end":378,"column_start":5,"column_end":28}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9161844,"byte_end":9161907,"line_start":379,"line_end":379,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9161912,"byte_end":9161915,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9161920,"byte_end":9161960,"line_start":381,"line_end":381,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9161965,"byte_end":9161968,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.clone().try_lock_owned()?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9161973,"byte_end":9162017,"line_start":383,"line_end":383,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9162022,"byte_end":9162044,"line_start":384,"line_end":384,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9162049,"byte_end":9162061,"line_start":385,"line_end":385,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9162066,"byte_end":9162073,"line_start":386,"line_end":386,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5594},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9162657,"byte_end":9162667,"line_start":408,"line_end":408,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the mutex, returning the underlying data.\n # Examples","sig":null,"attributes":[{"value":"/ Consumes the mutex, returning the underlying data.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9162324,"byte_end":9162378,"line_start":394,"line_end":394,"column_start":5,"column_end":59}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9162383,"byte_end":9162397,"line_start":395,"line_end":395,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9162402,"byte_end":9162405,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9162410,"byte_end":9162417,"line_start":397,"line_end":397,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9162422,"byte_end":9162449,"line_start":398,"line_end":398,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9162454,"byte_end":9162457,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9162462,"byte_end":9162480,"line_start":400,"line_end":400,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9162485,"byte_end":9162506,"line_start":401,"line_end":401,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9162511,"byte_end":9162545,"line_start":402,"line_end":402,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9162550,"byte_end":9162553,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.into_inner();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9162558,"byte_end":9162593,"line_start":404,"line_end":404,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9162598,"byte_end":9162623,"line_start":405,"line_end":405,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9162628,"byte_end":9162633,"line_start":406,"line_end":406,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9162638,"byte_end":9162645,"line_start":407,"line_end":407,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6254},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9168571,"byte_end":9168577,"line_start":111,"line_end":111,"column_start":12,"column_end":18},"name":"Notify","qualname":"::sync::notify::Notify","value":"Notify {  }","parent":null,"children":[{"krate":0,"index":6255},{"krate":0,"index":6256}],"decl_id":null,"docs":" Notify a single task to wake up.","sig":null,"attributes":[{"value":"/ Notify a single task to wake up.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9165728,"byte_end":9165764,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9165765,"byte_end":9165768,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ `Notify` provides a basic mechanism to notify a single task of an event.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9165769,"byte_end":9165845,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ `Notify` itself does not carry any data. Instead, it is to be used to signal","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9165846,"byte_end":9165926,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ another task to perform an operation.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9165927,"byte_end":9165968,"line_start":26,"line_end":26,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9165969,"byte_end":9165972,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ `Notify` can be thought of as a [`Semaphore`] starting with 0 permits.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9165973,"byte_end":9166047,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ [`notified().await`] waits for a permit to become available, and [`notify_one()`]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9166048,"byte_end":9166133,"line_start":29,"line_end":29,"column_start":1,"column_end":86}},{"value":"/ sets a permit **if there currently are no available permits**.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9166134,"byte_end":9166200,"line_start":30,"line_end":30,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9166201,"byte_end":9166204,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The synchronization details of `Notify` are similar to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9166205,"byte_end":9166263,"line_start":32,"line_end":32,"column_start":1,"column_end":59}},{"value":"/ [`thread::park`][park] and [`Thread::unpark`][unpark] from std. A [`Notify`]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9166264,"byte_end":9166344,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ value contains a single permit. [`notified().await`] waits for the permit to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9166345,"byte_end":9166425,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ be made available, consumes the permit, and resumes.  [`notify_one()`] sets the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9166426,"byte_end":9166509,"line_start":35,"line_end":35,"column_start":1,"column_end":84}},{"value":"/ permit, waking a pending task if there is one.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9166510,"byte_end":9166560,"line_start":36,"line_end":36,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9166561,"byte_end":9166564,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ If `notify_one()` is called **before** `notified().await`, then the next call to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9166565,"byte_end":9166649,"line_start":38,"line_end":38,"column_start":1,"column_end":85}},{"value":"/ `notified().await` will complete immediately, consuming the permit. Any","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9166650,"byte_end":9166725,"line_start":39,"line_end":39,"column_start":1,"column_end":76}},{"value":"/ subsequent calls to `notified().await` will wait for a new permit.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9166726,"byte_end":9166796,"line_start":40,"line_end":40,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9166797,"byte_end":9166800,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ If `notify_one()` is called **multiple** times before `notified().await`, only a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9166801,"byte_end":9166885,"line_start":42,"line_end":42,"column_start":1,"column_end":85}},{"value":"/ **single** permit is stored. The next call to `notified().await` will","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9166886,"byte_end":9166959,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ complete immediately, but the one after will wait for a new permit.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9166960,"byte_end":9167031,"line_start":44,"line_end":44,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167032,"byte_end":9167035,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167036,"byte_end":9167050,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167051,"byte_end":9167054,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Basic usage.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167055,"byte_end":9167071,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167072,"byte_end":9167075,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167076,"byte_end":9167083,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167084,"byte_end":9167112,"line_start":51,"line_end":51,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167113,"byte_end":9167136,"line_start":52,"line_end":52,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167137,"byte_end":9167140,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167141,"byte_end":9167159,"line_start":54,"line_end":54,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167160,"byte_end":9167181,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167182,"byte_end":9167227,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167228,"byte_end":9167265,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167266,"byte_end":9167269,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167270,"byte_end":9167303,"line_start":59,"line_end":59,"column_start":1,"column_end":34}},{"value":"/         notify2.notified().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167304,"byte_end":9167341,"line_start":60,"line_end":60,"column_start":1,"column_end":38}},{"value":"/         println!(\"received notification\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167342,"byte_end":9167388,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167389,"byte_end":9167400,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167401,"byte_end":9167404,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167405,"byte_end":9167446,"line_start":64,"line_end":64,"column_start":1,"column_end":42}},{"value":"/     notify.notify_one();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167447,"byte_end":9167475,"line_start":65,"line_end":65,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167476,"byte_end":9167481,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167482,"byte_end":9167489,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167490,"byte_end":9167493,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Unbound mpsc channel.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167494,"byte_end":9167519,"line_start":69,"line_end":69,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167520,"byte_end":9167523,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167524,"byte_end":9167531,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167532,"byte_end":9167560,"line_start":72,"line_end":72,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167561,"byte_end":9167564,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ use std::collections::VecDeque;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167565,"byte_end":9167600,"line_start":74,"line_end":74,"column_start":1,"column_end":36}},{"value":"/ use std::sync::Mutex;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167601,"byte_end":9167626,"line_start":75,"line_end":75,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167627,"byte_end":9167630,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ struct Channel<T> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167631,"byte_end":9167654,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/     values: Mutex<VecDeque<T>>,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167655,"byte_end":9167690,"line_start":78,"line_end":78,"column_start":1,"column_end":36}},{"value":"/     notify: Notify,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167691,"byte_end":9167714,"line_start":79,"line_end":79,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167715,"byte_end":9167720,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167721,"byte_end":9167724,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ impl<T> Channel<T> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167725,"byte_end":9167749,"line_start":82,"line_end":82,"column_start":1,"column_end":25}},{"value":"/     pub fn send(&self, value: T) {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167750,"byte_end":9167788,"line_start":83,"line_end":83,"column_start":1,"column_end":39}},{"value":"/         self.values.lock().unwrap()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167789,"byte_end":9167828,"line_start":84,"line_end":84,"column_start":1,"column_end":40}},{"value":"/             .push_back(value);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167829,"byte_end":9167863,"line_start":85,"line_end":85,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167864,"byte_end":9167867,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/         // Notify the consumer a value is available","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167868,"byte_end":9167923,"line_start":87,"line_end":87,"column_start":1,"column_end":56}},{"value":"/         self.notify.notify_one();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167924,"byte_end":9167961,"line_start":88,"line_end":88,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167962,"byte_end":9167971,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167972,"byte_end":9167975,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/     pub async fn recv(&self) -> T {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9167976,"byte_end":9168015,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/         loop {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9168016,"byte_end":9168034,"line_start":92,"line_end":92,"column_start":1,"column_end":19}},{"value":"/             // Drain values","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9168035,"byte_end":9168066,"line_start":93,"line_end":93,"column_start":1,"column_end":32}},{"value":"/             if let Some(value) = self.values.lock().unwrap().pop_front() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9168067,"byte_end":9168145,"line_start":94,"line_end":94,"column_start":1,"column_end":79}},{"value":"/                 return value;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9168146,"byte_end":9168179,"line_start":95,"line_end":95,"column_start":1,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9168180,"byte_end":9168197,"line_start":96,"line_end":96,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9168198,"byte_end":9168201,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/             // Wait for values to be available","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9168202,"byte_end":9168252,"line_start":98,"line_end":98,"column_start":1,"column_end":51}},{"value":"/             self.notify.notified().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9168253,"byte_end":9168298,"line_start":99,"line_end":99,"column_start":1,"column_end":46}},{"value":"/         }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9168299,"byte_end":9168312,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9168313,"byte_end":9168322,"line_start":101,"line_end":101,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9168323,"byte_end":9168328,"line_start":102,"line_end":102,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9168329,"byte_end":9168336,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9168337,"byte_end":9168340,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ [park]: std::thread::park","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9168341,"byte_end":9168370,"line_start":105,"line_end":105,"column_start":1,"column_end":30}},{"value":"/ [unpark]: std::thread::Thread::unpark","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9168371,"byte_end":9168412,"line_start":106,"line_end":106,"column_start":1,"column_end":42}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9168413,"byte_end":9168457,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/ [`notify_one()`]: Notify::notify_one()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9168458,"byte_end":9168500,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/ [`Semaphore`]: crate::sync::Semaphore","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9168501,"byte_end":9168542,"line_start":109,"line_end":109,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":6276},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9169427,"byte_end":9169435,"line_start":145,"line_end":145,"column_start":12,"column_end":20},"name":"Notified","qualname":"::sync::notify::Notified","value":"Notified {  }","parent":null,"children":[{"krate":0,"index":6278},{"krate":0,"index":6279},{"krate":0,"index":6280}],"decl_id":null,"docs":" Future returned from `notified()`\n","sig":null,"attributes":[{"value":"/ Future returned from `notified()`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9169361,"byte_end":9169398,"line_start":143,"line_end":143,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5673},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9170776,"byte_end":9170779,"line_start":205,"line_end":205,"column_start":12,"column_end":15},"name":"new","qualname":"<Notify>::new","value":"pub fn new() -> Notify","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Notify`, initialized without a permit.","sig":null,"attributes":[{"value":"/ Create a new `Notify`, initialized without a permit.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9170572,"byte_end":9170628,"line_start":196,"line_end":196,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9170633,"byte_end":9170636,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9170641,"byte_end":9170655,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9170660,"byte_end":9170663,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9170668,"byte_end":9170675,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9170680,"byte_end":9170708,"line_start":201,"line_end":201,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9170713,"byte_end":9170716,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ let notify = Notify::new();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9170721,"byte_end":9170752,"line_start":203,"line_end":203,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9170757,"byte_end":9170764,"line_start":204,"line_end":204,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5674},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9172480,"byte_end":9172488,"line_start":265,"line_end":265,"column_start":12,"column_end":20},"name":"notified","qualname":"<Notify>::notified","value":"pub fn notified(&Self) -> Notified","parent":null,"children":[],"decl_id":null,"docs":" Wait for a notification.","sig":null,"attributes":[{"value":"/ Wait for a notification.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9171433,"byte_end":9171461,"line_start":230,"line_end":230,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9171466,"byte_end":9171469,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9171474,"byte_end":9171492,"line_start":232,"line_end":232,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9171497,"byte_end":9171500,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9171505,"byte_end":9171518,"line_start":234,"line_end":234,"column_start":5,"column_end":18}},{"value":"/ async fn notified(&self);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9171523,"byte_end":9171552,"line_start":235,"line_end":235,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9171557,"byte_end":9171564,"line_start":236,"line_end":236,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9171569,"byte_end":9171572,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Each `Notify` value holds a single permit. If a permit is available from","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9171577,"byte_end":9171653,"line_start":238,"line_end":238,"column_start":5,"column_end":81}},{"value":"/ an earlier call to [`notify_one()`], then `notified().await` will complete","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9171658,"byte_end":9171736,"line_start":239,"line_end":239,"column_start":5,"column_end":83}},{"value":"/ immediately, consuming that permit. Otherwise, `notified().await` waits","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9171741,"byte_end":9171816,"line_start":240,"line_end":240,"column_start":5,"column_end":80}},{"value":"/ for a permit to be made available by the next call to `notify_one()`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9171821,"byte_end":9171894,"line_start":241,"line_end":241,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9171899,"byte_end":9171902,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ [`notify_one()`]: Notify::notify_one","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9171907,"byte_end":9171947,"line_start":243,"line_end":243,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9171952,"byte_end":9171955,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9171960,"byte_end":9171974,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9171979,"byte_end":9171982,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9171987,"byte_end":9171994,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9171999,"byte_end":9172027,"line_start":248,"line_end":248,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9172032,"byte_end":9172055,"line_start":249,"line_end":249,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9172060,"byte_end":9172063,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9172068,"byte_end":9172086,"line_start":251,"line_end":251,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9172091,"byte_end":9172112,"line_start":252,"line_end":252,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9172117,"byte_end":9172162,"line_start":253,"line_end":253,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9172167,"byte_end":9172204,"line_start":254,"line_end":254,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9172209,"byte_end":9172212,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9172217,"byte_end":9172250,"line_start":256,"line_end":256,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9172255,"byte_end":9172292,"line_start":257,"line_end":257,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9172297,"byte_end":9172343,"line_start":258,"line_end":258,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9172348,"byte_end":9172359,"line_start":259,"line_end":259,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9172364,"byte_end":9172367,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9172372,"byte_end":9172413,"line_start":261,"line_end":261,"column_start":5,"column_end":46}},{"value":"/     notify.notify_one();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9172418,"byte_end":9172446,"line_start":262,"line_end":262,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9172451,"byte_end":9172456,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9172461,"byte_end":9172468,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5675},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9174184,"byte_end":9174194,"line_start":315,"line_end":315,"column_start":12,"column_end":22},"name":"notify_one","qualname":"<Notify>::notify_one","value":"pub fn notify_one(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies a waiting task","sig":null,"attributes":[{"value":"/ Notifies a waiting task","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9173013,"byte_end":9173040,"line_start":281,"line_end":281,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9173045,"byte_end":9173048,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Otherwise, a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9173053,"byte_end":9173124,"line_start":283,"line_end":283,"column_start":5,"column_end":76}},{"value":"/ permit is stored in this `Notify` value and the **next** call to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9173129,"byte_end":9173197,"line_start":284,"line_end":284,"column_start":5,"column_end":73}},{"value":"/ [`notified().await`] will complete immediately consuming the permit made","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9173202,"byte_end":9173278,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ available by this call to `notify_one()`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9173283,"byte_end":9173328,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9173333,"byte_end":9173336,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ At most one permit may be stored by `Notify`. Many sequential calls to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9173341,"byte_end":9173415,"line_start":288,"line_end":288,"column_start":5,"column_end":79}},{"value":"/ `notify_one` will result in a single permit being stored. The next call to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9173420,"byte_end":9173498,"line_start":289,"line_end":289,"column_start":5,"column_end":83}},{"value":"/ `notified().await` will complete immediately, but the one after that","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9173503,"byte_end":9173575,"line_start":290,"line_end":290,"column_start":5,"column_end":77}},{"value":"/ will wait.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9173580,"byte_end":9173594,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9173599,"byte_end":9173602,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9173607,"byte_end":9173651,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9173656,"byte_end":9173659,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9173664,"byte_end":9173678,"line_start":295,"line_end":295,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9173683,"byte_end":9173686,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9173691,"byte_end":9173698,"line_start":297,"line_end":297,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9173703,"byte_end":9173731,"line_start":298,"line_end":298,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9173736,"byte_end":9173759,"line_start":299,"line_end":299,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9173764,"byte_end":9173767,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9173772,"byte_end":9173790,"line_start":301,"line_end":301,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9173795,"byte_end":9173816,"line_start":302,"line_end":302,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9173821,"byte_end":9173866,"line_start":303,"line_end":303,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9173871,"byte_end":9173908,"line_start":304,"line_end":304,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9173913,"byte_end":9173916,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9173921,"byte_end":9173954,"line_start":306,"line_end":306,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9173959,"byte_end":9173996,"line_start":307,"line_end":307,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9174001,"byte_end":9174047,"line_start":308,"line_end":308,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9174052,"byte_end":9174063,"line_start":309,"line_end":309,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9174068,"byte_end":9174071,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9174076,"byte_end":9174117,"line_start":311,"line_end":311,"column_start":5,"column_end":46}},{"value":"/     notify.notify_one();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9174122,"byte_end":9174150,"line_start":312,"line_end":312,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9174155,"byte_end":9174160,"line_start":313,"line_end":313,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9174165,"byte_end":9174172,"line_start":314,"line_end":314,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5676},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9176527,"byte_end":9176541,"line_start":381,"line_end":381,"column_start":12,"column_end":26},"name":"notify_waiters","qualname":"<Notify>::notify_waiters","value":"pub fn notify_waiters(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies all waiting tasks","sig":null,"attributes":[{"value":"/ Notifies all waiting tasks","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9175437,"byte_end":9175467,"line_start":349,"line_end":349,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9175472,"byte_end":9175475,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Unlike with","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9175480,"byte_end":9175550,"line_start":351,"line_end":351,"column_start":5,"column_end":75}},{"value":"/ `notify()`, no permit is stored to be used by the next call to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9175555,"byte_end":9175621,"line_start":352,"line_end":352,"column_start":5,"column_end":71}},{"value":"/ [`notified().await`]. The purpose of this method is to notify all","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9175626,"byte_end":9175695,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ already registered waiters. Registering for notification is done by","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9175700,"byte_end":9175771,"line_start":354,"line_end":354,"column_start":5,"column_end":76}},{"value":"/ acquiring an instance of the `Notified` future via calling `notified()`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9175776,"byte_end":9175852,"line_start":355,"line_end":355,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9175857,"byte_end":9175860,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9175865,"byte_end":9175879,"line_start":357,"line_end":357,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9175884,"byte_end":9175887,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9175892,"byte_end":9175899,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9175904,"byte_end":9175932,"line_start":360,"line_end":360,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9175937,"byte_end":9175960,"line_start":361,"line_end":361,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9175965,"byte_end":9175968,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9175973,"byte_end":9175991,"line_start":363,"line_end":363,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9175996,"byte_end":9176017,"line_start":364,"line_end":364,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9176022,"byte_end":9176067,"line_start":365,"line_end":365,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9176072,"byte_end":9176109,"line_start":366,"line_end":366,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9176114,"byte_end":9176117,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/     let notified1 = notify.notified();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9176122,"byte_end":9176164,"line_start":368,"line_end":368,"column_start":5,"column_end":47}},{"value":"/     let notified2 = notify.notified();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9176169,"byte_end":9176211,"line_start":369,"line_end":369,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9176216,"byte_end":9176219,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/     let handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9176224,"byte_end":9176270,"line_start":371,"line_end":371,"column_start":5,"column_end":51}},{"value":"/         println!(\"sending notifications\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9176275,"byte_end":9176321,"line_start":372,"line_end":372,"column_start":5,"column_end":51}},{"value":"/         notify2.notify_waiters();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9176326,"byte_end":9176363,"line_start":373,"line_end":373,"column_start":5,"column_end":42}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9176368,"byte_end":9176379,"line_start":374,"line_end":374,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9176384,"byte_end":9176387,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/     notified1.await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9176392,"byte_end":9176416,"line_start":376,"line_end":376,"column_start":5,"column_end":29}},{"value":"/     notified2.await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9176421,"byte_end":9176445,"line_start":377,"line_end":377,"column_start":5,"column_end":29}},{"value":"/     println!(\"received notifications\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9176450,"byte_end":9176493,"line_start":378,"line_end":378,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9176498,"byte_end":9176503,"line_start":379,"line_end":379,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9176508,"byte_end":9176515,"line_start":380,"line_end":380,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":5700},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::sync::oneshot","value":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","parent":null,"children":[{"krate":0,"index":5701},{"krate":0,"index":5702},{"krate":0,"index":5703},{"krate":0,"index":5704},{"krate":0,"index":5705},{"krate":0,"index":5706},{"krate":0,"index":5707},{"krate":0,"index":5708},{"krate":0,"index":5709},{"krate":0,"index":5710},{"krate":0,"index":12874},{"krate":0,"index":5711},{"krate":0,"index":12876},{"krate":0,"index":5712},{"krate":0,"index":5713},{"krate":0,"index":12878},{"krate":0,"index":5714},{"krate":0,"index":12880},{"krate":0,"index":5715},{"krate":0,"index":5716},{"krate":0,"index":5717},{"krate":0,"index":5718},{"krate":0,"index":6294},{"krate":0,"index":6297},{"krate":0,"index":6300},{"krate":0,"index":6303},{"krate":0,"index":5719},{"krate":0,"index":5727},{"krate":0,"index":5728},{"krate":0,"index":5734},{"krate":0,"index":5737},{"krate":0,"index":6331},{"krate":0,"index":6335},{"krate":0,"index":6334},{"krate":0,"index":5748},{"krate":0,"index":5750},{"krate":0,"index":5761},{"krate":0,"index":5764},{"krate":0,"index":5768},{"krate":0,"index":5771},{"krate":0,"index":5775},{"krate":0,"index":5782},{"krate":0,"index":5784},{"krate":0,"index":5786},{"krate":0,"index":5788},{"krate":0,"index":5791},{"krate":0,"index":5795},{"krate":0,"index":5796},{"krate":0,"index":5797},{"krate":0,"index":5798},{"krate":0,"index":5799},{"krate":0,"index":5813}],"decl_id":null,"docs":" A channel for sending a single message between asynchronous tasks.\n","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23078,"byte_end":23102,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ A channel for sending a single message between asynchronous tasks.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9190843,"byte_end":9190913,"line_start":3,"line_end":3,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":6294},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9191392,"byte_end":9191398,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":6296}],"decl_id":null,"docs":" Sends a value to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Sends a value to the associated `Receiver`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9191245,"byte_end":9191292,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9191293,"byte_end":9191296,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9191297,"byte_end":9191363,"line_start":19,"line_end":19,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":6300},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9191590,"byte_end":9191598,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":6302}],"decl_id":null,"docs":" Receive a value from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive a value from the associated `Sender`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9191441,"byte_end":9191490,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9191491,"byte_end":9191494,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9191495,"byte_end":9191561,"line_start":27,"line_end":27,"column_start":1,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":5719},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9191649,"byte_end":9191654,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::oneshot::error","value":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","parent":null,"children":[{"krate":0,"index":5720},{"krate":0,"index":6306},{"krate":0,"index":6316},{"krate":0,"index":6313},{"krate":0,"index":6314},{"krate":0,"index":6309},{"krate":0,"index":6310},{"krate":0,"index":6318},{"krate":0,"index":6329},{"krate":0,"index":6326},{"krate":0,"index":6327},{"krate":0,"index":6323},{"krate":0,"index":6324},{"krate":0,"index":5721},{"krate":0,"index":5723},{"krate":0,"index":5724},{"krate":0,"index":5726}],"decl_id":null,"docs":" Oneshot error types\n","sig":null,"attributes":[{"value":"/ Oneshot error types","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9191661,"byte_end":9191684,"line_start":34,"line_end":34,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":6306},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9191826,"byte_end":9191835,"line_start":40,"line_end":40,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::oneshot::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Future` implementation for `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Future` implementation for `Receiver`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9191709,"byte_end":9191774,"line_start":38,"line_end":38,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6319},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9192057,"byte_end":9192062,"line_start":46,"line_end":46,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::oneshot::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":6318},"children":[],"decl_id":null,"docs":" The send half of the channel has not yet sent a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel has not yet sent a value.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9191990,"byte_end":9192048,"line_start":45,"line_end":45,"column_start":9,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6321},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9192151,"byte_end":9192157,"line_start":49,"line_end":49,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::oneshot::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":6318},"children":[],"decl_id":null,"docs":" The send half of the channel was dropped without sending a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel was dropped without sending a value.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9192073,"byte_end":9192142,"line_start":48,"line_end":48,"column_start":9,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":6318},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9191967,"byte_end":9191979,"line_start":44,"line_end":44,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::oneshot::error::TryRecvError","value":"pub enum TryRecvError {\n\n    /// The send half of the channel has not yet sent a value.\n    Empty,\n\n    /// The send half of the channel was dropped without sending a value.\n    Closed,\n}","parent":null,"children":[{"krate":0,"index":6319},{"krate":0,"index":6321}],"decl_id":null,"docs":" Error returned by the `try_recv` function on `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `try_recv` function on `Receiver`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9191857,"byte_end":9191917,"line_start":42,"line_end":42,"column_start":5,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":5748},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9194890,"byte_end":9194897,"line_start":158,"line_end":158,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::oneshot::channel","value":"pub fn channel<T>() -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a new one-shot channel for sending single values across asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Create a new one-shot channel for sending single values across asynchronous","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9194075,"byte_end":9194154,"line_start":128,"line_end":128,"column_start":1,"column_end":80}},{"value":"/ tasks.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9194155,"byte_end":9194165,"line_start":129,"line_end":129,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9194166,"byte_end":9194169,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ The function returns separate \"send\" and \"receive\" handles. The `Sender`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9194170,"byte_end":9194246,"line_start":131,"line_end":131,"column_start":1,"column_end":77}},{"value":"/ handle is used by the producer to send the value. The `Receiver` handle is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9194247,"byte_end":9194325,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"/ used by the consumer to receive the value.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9194326,"byte_end":9194372,"line_start":133,"line_end":133,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9194373,"byte_end":9194376,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ Each handle can be used on separate tasks.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9194377,"byte_end":9194423,"line_start":135,"line_end":135,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9194424,"byte_end":9194427,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9194428,"byte_end":9194442,"line_start":137,"line_end":137,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9194443,"byte_end":9194446,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9194447,"byte_end":9194454,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9194455,"byte_end":9194484,"line_start":140,"line_end":140,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9194485,"byte_end":9194488,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9194489,"byte_end":9194507,"line_start":142,"line_end":142,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9194508,"byte_end":9194529,"line_start":143,"line_end":143,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9194530,"byte_end":9194572,"line_start":144,"line_end":144,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9194573,"byte_end":9194576,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9194577,"byte_end":9194610,"line_start":146,"line_end":146,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9194611,"byte_end":9194651,"line_start":147,"line_end":147,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9194652,"byte_end":9194701,"line_start":148,"line_end":148,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9194702,"byte_end":9194715,"line_start":149,"line_end":149,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9194716,"byte_end":9194727,"line_start":150,"line_end":150,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9194728,"byte_end":9194731,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9194732,"byte_end":9194756,"line_start":152,"line_end":152,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9194757,"byte_end":9194804,"line_start":153,"line_end":153,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9194805,"byte_end":9194858,"line_start":154,"line_end":154,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9194859,"byte_end":9194868,"line_start":155,"line_end":155,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9194869,"byte_end":9194874,"line_start":156,"line_end":156,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9194875,"byte_end":9194882,"line_start":157,"line_end":157,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5752},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9196920,"byte_end":9196924,"line_start":215,"line_end":215,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value on this channel, returning it back if it could\n not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value on this channel, returning it back if it could","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9195349,"byte_end":9195424,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ not be sent.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9195429,"byte_end":9195445,"line_start":176,"line_end":176,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9195450,"byte_end":9195453,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This method consumes `self` as only one value may ever be sent on a oneshot","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9195458,"byte_end":9195537,"line_start":178,"line_end":178,"column_start":5,"column_end":84}},{"value":"/ channel. It is not marked async because sending a message to an oneshot","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9195542,"byte_end":9195617,"line_start":179,"line_end":179,"column_start":5,"column_end":80}},{"value":"/ channel never requires any form of waiting.  Because of this, the `send`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9195622,"byte_end":9195698,"line_start":180,"line_end":180,"column_start":5,"column_end":81}},{"value":"/ method can be used in both synchronous and asynchronous code without","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9195703,"byte_end":9195775,"line_start":181,"line_end":181,"column_start":5,"column_end":77}},{"value":"/ problems.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9195780,"byte_end":9195793,"line_start":182,"line_end":182,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9195798,"byte_end":9195801,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9195806,"byte_end":9195882,"line_start":184,"line_end":184,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9195887,"byte_end":9195963,"line_start":185,"line_end":185,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been deallocated. Note that a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9195968,"byte_end":9196040,"line_start":186,"line_end":186,"column_start":5,"column_end":77}},{"value":"/ return value of `Err` means that the data will never be received, but","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9196045,"byte_end":9196118,"line_start":187,"line_end":187,"column_start":5,"column_end":78}},{"value":"/ a return value of `Ok` does *not* mean that the data will be received.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9196123,"byte_end":9196197,"line_start":188,"line_end":188,"column_start":5,"column_end":79}},{"value":"/ It is possible for the corresponding receiver to hang up immediately","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9196202,"byte_end":9196274,"line_start":189,"line_end":189,"column_start":5,"column_end":77}},{"value":"/ after this function returns `Ok`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9196279,"byte_end":9196316,"line_start":190,"line_end":190,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9196321,"byte_end":9196324,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9196329,"byte_end":9196343,"line_start":192,"line_end":192,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9196348,"byte_end":9196351,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ Send a value to another task","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9196356,"byte_end":9196388,"line_start":194,"line_end":194,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9196393,"byte_end":9196396,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9196401,"byte_end":9196408,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9196413,"byte_end":9196442,"line_start":197,"line_end":197,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9196447,"byte_end":9196450,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9196455,"byte_end":9196473,"line_start":199,"line_end":199,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9196478,"byte_end":9196499,"line_start":200,"line_end":200,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9196504,"byte_end":9196546,"line_start":201,"line_end":201,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9196551,"byte_end":9196554,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9196559,"byte_end":9196592,"line_start":203,"line_end":203,"column_start":5,"column_end":38}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9196597,"byte_end":9196637,"line_start":204,"line_end":204,"column_start":5,"column_end":45}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9196642,"byte_end":9196691,"line_start":205,"line_end":205,"column_start":5,"column_end":54}},{"value":"/         }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9196696,"byte_end":9196709,"line_start":206,"line_end":206,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9196714,"byte_end":9196725,"line_start":207,"line_end":207,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9196730,"byte_end":9196733,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/     match rx.await {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9196738,"byte_end":9196762,"line_start":209,"line_end":209,"column_start":5,"column_end":29}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9196767,"byte_end":9196814,"line_start":210,"line_end":210,"column_start":5,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9196819,"byte_end":9196872,"line_start":211,"line_end":211,"column_start":5,"column_end":58}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9196877,"byte_end":9196886,"line_start":212,"line_end":212,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9196891,"byte_end":9196896,"line_start":213,"line_end":213,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9196901,"byte_end":9196908,"line_start":214,"line_end":214,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5754},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9199262,"byte_end":9199268,"line_start":298,"line_end":298,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the associated [`Receiver`] handle to close.","sig":null,"attributes":[{"value":"/ Waits for the associated [`Receiver`] handle to close.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9197257,"byte_end":9197315,"line_start":231,"line_end":231,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9197320,"byte_end":9197323,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9197328,"byte_end":9197402,"line_start":233,"line_end":233,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9197407,"byte_end":9197441,"line_start":234,"line_end":234,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9197446,"byte_end":9197449,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This function is useful when paired with `select!` to abort a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9197454,"byte_end":9197519,"line_start":236,"line_end":236,"column_start":5,"column_end":70}},{"value":"/ computation when the receiver is no longer interested in the result.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9197524,"byte_end":9197596,"line_start":237,"line_end":237,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9197601,"byte_end":9197604,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9197609,"byte_end":9197621,"line_start":239,"line_end":239,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9197626,"byte_end":9197629,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Returns a `Future` which must be awaited on.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9197634,"byte_end":9197682,"line_start":241,"line_end":241,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9197687,"byte_end":9197690,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9197695,"byte_end":9197721,"line_start":243,"line_end":243,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9197726,"byte_end":9197756,"line_start":244,"line_end":244,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9197761,"byte_end":9197764,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9197769,"byte_end":9197783,"line_start":246,"line_end":246,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9197788,"byte_end":9197791,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9197796,"byte_end":9197811,"line_start":248,"line_end":248,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9197816,"byte_end":9197819,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9197824,"byte_end":9197831,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9197836,"byte_end":9197865,"line_start":251,"line_end":251,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9197870,"byte_end":9197873,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9197878,"byte_end":9197896,"line_start":253,"line_end":253,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9197901,"byte_end":9197922,"line_start":254,"line_end":254,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel::<()>();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9197927,"byte_end":9197979,"line_start":255,"line_end":255,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9197984,"byte_end":9197987,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9197992,"byte_end":9198025,"line_start":257,"line_end":257,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9198030,"byte_end":9198051,"line_start":258,"line_end":258,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9198056,"byte_end":9198067,"line_start":259,"line_end":259,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9198072,"byte_end":9198075,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/     tx.closed().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9198080,"byte_end":9198106,"line_start":261,"line_end":261,"column_start":5,"column_end":31}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9198111,"byte_end":9198152,"line_start":262,"line_end":262,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9198157,"byte_end":9198162,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9198167,"byte_end":9198174,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9198179,"byte_end":9198182,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Paired with select","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9198187,"byte_end":9198209,"line_start":266,"line_end":266,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9198214,"byte_end":9198217,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9198222,"byte_end":9198229,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9198234,"byte_end":9198263,"line_start":269,"line_end":269,"column_start":5,"column_end":34}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9198268,"byte_end":9198306,"line_start":270,"line_end":270,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9198311,"byte_end":9198314,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ async fn compute() -> String {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9198319,"byte_end":9198353,"line_start":272,"line_end":272,"column_start":5,"column_end":39}},{"value":"/     // Complex computation returning a `String`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9198358,"byte_end":9198409,"line_start":273,"line_end":273,"column_start":5,"column_end":56}},{"value":"/ # \"hello\".to_string()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9198414,"byte_end":9198439,"line_start":274,"line_end":274,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9198444,"byte_end":9198449,"line_start":275,"line_end":275,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9198454,"byte_end":9198457,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9198462,"byte_end":9198480,"line_start":277,"line_end":277,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9198485,"byte_end":9198506,"line_start":278,"line_end":278,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9198511,"byte_end":9198557,"line_start":279,"line_end":279,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9198562,"byte_end":9198565,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9198570,"byte_end":9198603,"line_start":281,"line_end":281,"column_start":5,"column_end":38}},{"value":"/         tokio::select! {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9198608,"byte_end":9198636,"line_start":282,"line_end":282,"column_start":5,"column_end":33}},{"value":"/             _ = tx.closed() => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9198641,"byte_end":9198677,"line_start":283,"line_end":283,"column_start":5,"column_end":41}},{"value":"/                 // The receiver dropped, no need to do any further work","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9198682,"byte_end":9198757,"line_start":284,"line_end":284,"column_start":5,"column_end":80}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9198762,"byte_end":9198779,"line_start":285,"line_end":285,"column_start":5,"column_end":22}},{"value":"/             value = compute() => {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9198784,"byte_end":9198822,"line_start":286,"line_end":286,"column_start":5,"column_end":43}},{"value":"/                 // The send can fail if the channel was closed at the exact same","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9198827,"byte_end":9198911,"line_start":287,"line_end":287,"column_start":5,"column_end":89}},{"value":"/                 // time as when compute() finished, so just ignore the failure.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9198916,"byte_end":9198999,"line_start":288,"line_end":288,"column_start":5,"column_end":88}},{"value":"/                 let _ = tx.send(value);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9199004,"byte_end":9199047,"line_start":289,"line_end":289,"column_start":5,"column_end":48}},{"value":"/             }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9199052,"byte_end":9199069,"line_start":290,"line_end":290,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9199074,"byte_end":9199087,"line_start":291,"line_end":291,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9199092,"byte_end":9199103,"line_start":292,"line_end":292,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9199108,"byte_end":9199111,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/     // Wait for up to 10 seconds","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9199116,"byte_end":9199152,"line_start":294,"line_end":294,"column_start":5,"column_end":41}},{"value":"/     let _ = time::timeout(Duration::from_secs(10), rx).await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9199157,"byte_end":9199222,"line_start":295,"line_end":295,"column_start":5,"column_end":70}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9199227,"byte_end":9199232,"line_start":296,"line_end":296,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9199237,"byte_end":9199244,"line_start":297,"line_end":297,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5759},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9200138,"byte_end":9200147,"line_start":331,"line_end":331,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the associated [`Receiver`] handle has been dropped.","sig":null,"attributes":[{"value":"/ Returns `true` if the associated [`Receiver`] handle has been dropped.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9199379,"byte_end":9199453,"line_start":304,"line_end":304,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9199458,"byte_end":9199461,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9199466,"byte_end":9199540,"line_start":306,"line_end":306,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9199545,"byte_end":9199579,"line_start":307,"line_end":307,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9199584,"byte_end":9199587,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ If `true` is returned, a call to `send` will always result in an error.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9199592,"byte_end":9199667,"line_start":309,"line_end":309,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9199672,"byte_end":9199675,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9199680,"byte_end":9199706,"line_start":311,"line_end":311,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9199711,"byte_end":9199741,"line_start":312,"line_end":312,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9199746,"byte_end":9199749,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9199754,"byte_end":9199768,"line_start":314,"line_end":314,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9199773,"byte_end":9199776,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9199781,"byte_end":9199788,"line_start":316,"line_end":316,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9199793,"byte_end":9199822,"line_start":317,"line_end":317,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9199827,"byte_end":9199830,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9199835,"byte_end":9199853,"line_start":319,"line_end":319,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9199858,"byte_end":9199879,"line_start":320,"line_end":320,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9199884,"byte_end":9199926,"line_start":321,"line_end":321,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9199931,"byte_end":9199934,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9199939,"byte_end":9199972,"line_start":323,"line_end":323,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9199977,"byte_end":9199980,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/     drop(rx);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9199985,"byte_end":9200002,"line_start":325,"line_end":325,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9200007,"byte_end":9200010,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9200015,"byte_end":9200047,"line_start":327,"line_end":327,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9200052,"byte_end":9200104,"line_start":328,"line_end":328,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9200109,"byte_end":9200114,"line_start":329,"line_end":329,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9200119,"byte_end":9200126,"line_start":330,"line_end":330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5760},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9201593,"byte_end":9201604,"line_start":378,"line_end":378,"column_start":12,"column_end":23},"name":"poll_closed","qualname":"<Sender<T>>::poll_closed","value":"pub fn poll_closed(&mut Self, &mut Context) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":" Check whether the oneshot channel has been closed, and if not, schedules the\n `Waker` in the provided `Context` to receive a notification when the channel is\n closed.","sig":null,"attributes":[{"value":"/ Check whether the oneshot channel has been closed, and if not, schedules the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9200309,"byte_end":9200389,"line_start":338,"line_end":338,"column_start":5,"column_end":85}},{"value":"/ `Waker` in the provided `Context` to receive a notification when the channel is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9200394,"byte_end":9200477,"line_start":339,"line_end":339,"column_start":5,"column_end":88}},{"value":"/ closed.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9200482,"byte_end":9200493,"line_start":340,"line_end":340,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9200498,"byte_end":9200501,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly, or when the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9200506,"byte_end":9200586,"line_start":342,"line_end":342,"column_start":5,"column_end":85}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9200591,"byte_end":9200625,"line_start":343,"line_end":343,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9200630,"byte_end":9200633,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to poll, only the `Waker` from the `Context` passed","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9200638,"byte_end":9200721,"line_start":345,"line_end":345,"column_start":5,"column_end":88}},{"value":"/ to the most recent call will be scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9200726,"byte_end":9200792,"line_start":346,"line_end":346,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9200797,"byte_end":9200800,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: struct@crate::sync::oneshot::Receiver","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9200805,"byte_end":9200860,"line_start":348,"line_end":348,"column_start":5,"column_end":60}},{"value":"/ [`close`]: fn@crate::sync::oneshot::Receiver::close","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9200865,"byte_end":9200920,"line_start":349,"line_end":349,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9200925,"byte_end":9200928,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9200933,"byte_end":9200951,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9200956,"byte_end":9200959,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This function returns:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9200964,"byte_end":9200990,"line_start":353,"line_end":353,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9200995,"byte_end":9200998,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the channel is still open.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9201003,"byte_end":9201055,"line_start":355,"line_end":355,"column_start":5,"column_end":57}},{"value":"/  * `Poll::Ready(())` if the channel is closed.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9201060,"byte_end":9201110,"line_start":356,"line_end":356,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9201115,"byte_end":9201118,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9201123,"byte_end":9201137,"line_start":358,"line_end":358,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9201142,"byte_end":9201145,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9201150,"byte_end":9201157,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9201162,"byte_end":9201191,"line_start":361,"line_end":361,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9201196,"byte_end":9201199,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9201204,"byte_end":9201237,"line_start":363,"line_end":363,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9201242,"byte_end":9201245,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9201250,"byte_end":9201268,"line_start":365,"line_end":365,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9201273,"byte_end":9201294,"line_start":366,"line_end":366,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9201299,"byte_end":9201355,"line_start":367,"line_end":367,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9201360,"byte_end":9201363,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9201368,"byte_end":9201401,"line_start":369,"line_end":369,"column_start":5,"column_end":38}},{"value":"/         rx.close();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9201406,"byte_end":9201429,"line_start":370,"line_end":370,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9201434,"byte_end":9201445,"line_start":371,"line_end":371,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9201450,"byte_end":9201453,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| tx.poll_closed(cx)).await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9201458,"byte_end":9201505,"line_start":373,"line_end":373,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9201510,"byte_end":9201513,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9201518,"byte_end":9201559,"line_start":375,"line_end":375,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9201564,"byte_end":9201569,"line_start":376,"line_end":376,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9201574,"byte_end":9201581,"line_start":377,"line_end":377,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5766},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9204767,"byte_end":9204772,"line_start":492,"line_end":492,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Prevents the associated [`Sender`] handle from sending a value.","sig":null,"attributes":[{"value":"/ Prevents the associated [`Sender`] handle from sending a value.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9203129,"byte_end":9203196,"line_start":436,"line_end":436,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9203201,"byte_end":9203204,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after calling `close` is guaranteed","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9203209,"byte_end":9203283,"line_start":438,"line_end":438,"column_start":5,"column_end":79}},{"value":"/ to fail. After calling `close`, [`try_recv`] should be called to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9203288,"byte_end":9203356,"line_start":439,"line_end":439,"column_start":5,"column_end":73}},{"value":"/ receive a value if one was sent **before** the call to `close`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9203361,"byte_end":9203427,"line_start":440,"line_end":440,"column_start":5,"column_end":71}},{"value":"/ completed.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9203432,"byte_end":9203446,"line_start":441,"line_end":441,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9203451,"byte_end":9203454,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ This function is useful to perform a graceful shutdown and ensure that a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9203459,"byte_end":9203535,"line_start":443,"line_end":443,"column_start":5,"column_end":81}},{"value":"/ value will not be sent into the channel and never received.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9203540,"byte_end":9203603,"line_start":444,"line_end":444,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9203608,"byte_end":9203611,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: Sender","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9203616,"byte_end":9203638,"line_start":446,"line_end":446,"column_start":5,"column_end":27}},{"value":"/ [`try_recv`]: Receiver::try_recv","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9203643,"byte_end":9203679,"line_start":447,"line_end":447,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9203684,"byte_end":9203687,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9203692,"byte_end":9203706,"line_start":449,"line_end":449,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9203711,"byte_end":9203714,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ Prevent a value from being sent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9203719,"byte_end":9203754,"line_start":451,"line_end":451,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9203759,"byte_end":9203762,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9203767,"byte_end":9203774,"line_start":453,"line_end":453,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9203779,"byte_end":9203808,"line_start":454,"line_end":454,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9203813,"byte_end":9203863,"line_start":455,"line_end":455,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9203868,"byte_end":9203871,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9203876,"byte_end":9203894,"line_start":457,"line_end":457,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9203899,"byte_end":9203920,"line_start":458,"line_end":458,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9203925,"byte_end":9203971,"line_start":459,"line_end":459,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9203976,"byte_end":9203979,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9203984,"byte_end":9204017,"line_start":461,"line_end":461,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9204022,"byte_end":9204025,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9204030,"byte_end":9204049,"line_start":463,"line_end":463,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9204054,"byte_end":9204057,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9204062,"byte_end":9204094,"line_start":465,"line_end":465,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9204099,"byte_end":9204151,"line_start":466,"line_end":466,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9204156,"byte_end":9204159,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9204164,"byte_end":9204193,"line_start":468,"line_end":468,"column_start":5,"column_end":34}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9204198,"byte_end":9204241,"line_start":469,"line_end":469,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9204246,"byte_end":9204278,"line_start":470,"line_end":470,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9204283,"byte_end":9204292,"line_start":471,"line_end":471,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9204297,"byte_end":9204302,"line_start":472,"line_end":472,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9204307,"byte_end":9204314,"line_start":473,"line_end":473,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9204319,"byte_end":9204322,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ Receive a value sent **before** calling `close`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9204327,"byte_end":9204378,"line_start":475,"line_end":475,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9204383,"byte_end":9204386,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9204391,"byte_end":9204398,"line_start":477,"line_end":477,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9204403,"byte_end":9204432,"line_start":478,"line_end":478,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9204437,"byte_end":9204440,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9204445,"byte_end":9204463,"line_start":480,"line_end":480,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9204468,"byte_end":9204489,"line_start":481,"line_end":481,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9204494,"byte_end":9204540,"line_start":482,"line_end":482,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9204545,"byte_end":9204548,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.send(\"will receive\").is_ok());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9204553,"byte_end":9204602,"line_start":484,"line_end":484,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9204607,"byte_end":9204610,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9204615,"byte_end":9204634,"line_start":486,"line_end":486,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9204639,"byte_end":9204642,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/     let msg = rx.try_recv().unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9204647,"byte_end":9204688,"line_start":488,"line_end":488,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(msg, \"will receive\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9204693,"byte_end":9204733,"line_start":489,"line_end":489,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9204738,"byte_end":9204743,"line_start":490,"line_end":490,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9204748,"byte_end":9204755,"line_start":491,"line_end":491,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5767},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9206755,"byte_end":9206763,"line_start":560,"line_end":560,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to receive a value.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9204870,"byte_end":9204902,"line_start":497,"line_end":497,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9204907,"byte_end":9204910,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ If a pending value exists in the channel, it is returned. If no value","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9204915,"byte_end":9204988,"line_start":499,"line_end":499,"column_start":5,"column_end":78}},{"value":"/ has been sent, the current task **will not** be registered for","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9204993,"byte_end":9205059,"line_start":500,"line_end":500,"column_start":5,"column_end":71}},{"value":"/ future notification.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9205064,"byte_end":9205088,"line_start":501,"line_end":501,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9205093,"byte_end":9205096,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ This function is useful to call from outside the context of an","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9205101,"byte_end":9205167,"line_start":503,"line_end":503,"column_start":5,"column_end":71}},{"value":"/ asynchronous task.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9205172,"byte_end":9205194,"line_start":504,"line_end":504,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9205199,"byte_end":9205202,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9205207,"byte_end":9205219,"line_start":506,"line_end":506,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9205224,"byte_end":9205227,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ - `Ok(T)` if a value is pending in the channel.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9205232,"byte_end":9205283,"line_start":508,"line_end":508,"column_start":5,"column_end":56}},{"value":"/ - `Err(TryRecvError::Empty)` if no value has been sent yet.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9205288,"byte_end":9205351,"line_start":509,"line_end":509,"column_start":5,"column_end":68}},{"value":"/ - `Err(TryRecvError::Closed)` if the sender has dropped without sending","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9205356,"byte_end":9205431,"line_start":510,"line_end":510,"column_start":5,"column_end":80}},{"value":"/   a value.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9205436,"byte_end":9205450,"line_start":511,"line_end":511,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9205455,"byte_end":9205458,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9205463,"byte_end":9205477,"line_start":513,"line_end":513,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9205482,"byte_end":9205485,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ `try_recv` before a value is sent, then after.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9205490,"byte_end":9205540,"line_start":515,"line_end":515,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9205545,"byte_end":9205548,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9205553,"byte_end":9205560,"line_start":517,"line_end":517,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9205565,"byte_end":9205594,"line_start":518,"line_end":518,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9205599,"byte_end":9205649,"line_start":519,"line_end":519,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9205654,"byte_end":9205657,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9205662,"byte_end":9205680,"line_start":521,"line_end":521,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9205685,"byte_end":9205706,"line_start":522,"line_end":522,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9205711,"byte_end":9205757,"line_start":523,"line_end":523,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9205762,"byte_end":9205765,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9205770,"byte_end":9205799,"line_start":525,"line_end":525,"column_start":5,"column_end":34}},{"value":"/         // The channel is currently empty","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9205804,"byte_end":9205849,"line_start":526,"line_end":526,"column_start":5,"column_end":50}},{"value":"/         Err(TryRecvError::Empty) => {}","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9205854,"byte_end":9205896,"line_start":527,"line_end":527,"column_start":5,"column_end":47}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9205901,"byte_end":9205933,"line_start":528,"line_end":528,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9205938,"byte_end":9205947,"line_start":529,"line_end":529,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9205952,"byte_end":9205955,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/     // Send a value","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9205960,"byte_end":9205983,"line_start":531,"line_end":531,"column_start":5,"column_end":28}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9205988,"byte_end":9206022,"line_start":532,"line_end":532,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9206027,"byte_end":9206030,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9206035,"byte_end":9206064,"line_start":534,"line_end":534,"column_start":5,"column_end":34}},{"value":"/         Ok(value) => assert_eq!(value, \"hello\"),","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9206069,"byte_end":9206121,"line_start":535,"line_end":535,"column_start":5,"column_end":57}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9206126,"byte_end":9206158,"line_start":536,"line_end":536,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9206163,"byte_end":9206172,"line_start":537,"line_end":537,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9206177,"byte_end":9206182,"line_start":538,"line_end":538,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9206187,"byte_end":9206194,"line_start":539,"line_end":539,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9206199,"byte_end":9206202,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ `try_recv` when the sender dropped before sending a value","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9206207,"byte_end":9206268,"line_start":541,"line_end":541,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9206273,"byte_end":9206276,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9206281,"byte_end":9206288,"line_start":543,"line_end":543,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9206293,"byte_end":9206322,"line_start":544,"line_end":544,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9206327,"byte_end":9206377,"line_start":545,"line_end":545,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9206382,"byte_end":9206385,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9206390,"byte_end":9206408,"line_start":547,"line_end":547,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9206413,"byte_end":9206434,"line_start":548,"line_end":548,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9206439,"byte_end":9206491,"line_start":549,"line_end":549,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9206496,"byte_end":9206499,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/     drop(tx);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9206504,"byte_end":9206521,"line_start":551,"line_end":551,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9206526,"byte_end":9206529,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9206534,"byte_end":9206563,"line_start":553,"line_end":553,"column_start":5,"column_end":34}},{"value":"/         // The channel will never receive a value.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9206568,"byte_end":9206622,"line_start":554,"line_end":554,"column_start":5,"column_end":59}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9206627,"byte_end":9206670,"line_start":555,"line_end":555,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9206675,"byte_end":9206707,"line_start":556,"line_end":556,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9206712,"byte_end":9206721,"line_start":557,"line_end":557,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9206726,"byte_end":9206731,"line_start":558,"line_end":558,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9206736,"byte_end":9206743,"line_start":559,"line_end":559,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6338},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9216337,"byte_end":9216343,"line_start":52,"line_end":52,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::batch_semaphore::TryAcquireError::Closed","value":"TryAcquireError::Closed","parent":{"krate":0,"index":6337},"children":[],"decl_id":null,"docs":" The semaphore has been [closed] and cannot issue new permits.","sig":null,"attributes":[{"value":"/ The semaphore has been [closed] and cannot issue new permits.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9216211,"byte_end":9216276,"line_start":49,"line_end":49,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9216281,"byte_end":9216284,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ [closed]: crate::sync::Semaphore::close","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9216289,"byte_end":9216332,"line_start":51,"line_end":51,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6340},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9216398,"byte_end":9216407,"line_start":55,"line_end":55,"column_start":5,"column_end":14},"name":"NoPermits","qualname":"::sync::batch_semaphore::TryAcquireError::NoPermits","value":"TryAcquireError::NoPermits","parent":{"krate":0,"index":6337},"children":[],"decl_id":null,"docs":" The semaphore has no available permits.\n","sig":null,"attributes":[{"value":"/ The semaphore has no available permits.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9216350,"byte_end":9216393,"line_start":54,"line_end":54,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":6337},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9216189,"byte_end":9216204,"line_start":48,"line_end":48,"column_start":10,"column_end":25},"name":"TryAcquireError","qualname":"::sync::batch_semaphore::TryAcquireError","value":"pub enum TryAcquireError {\n\n    /// The semaphore has been [closed] and cannot issue new permits.\n    ///\n    /// [closed]: crate::sync::Semaphore::close\n    Closed,\n\n    /// The semaphore has no available permits.\n    NoPermits,\n}","parent":null,"children":[{"krate":0,"index":6338},{"krate":0,"index":6340}],"decl_id":null,"docs":" Error returned from the [`Semaphore::try_acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::try_acquire`] function.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9216015,"byte_end":9216079,"line_start":44,"line_end":44,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9216080,"byte_end":9216083,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore::try_acquire`]: crate::sync::Semaphore::try_acquire","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9216084,"byte_end":9216151,"line_start":46,"line_end":46,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6347},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9216693,"byte_end":9216705,"line_start":65,"line_end":65,"column_start":12,"column_end":24},"name":"AcquireError","qualname":"::sync::batch_semaphore::AcquireError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Semaphore::acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::acquire`] function.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9216411,"byte_end":9216471,"line_start":57,"line_end":57,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9216472,"byte_end":9216475,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ An `acquire` operation can only fail if the semaphore has been","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9216476,"byte_end":9216542,"line_start":59,"line_end":59,"column_start":1,"column_end":67}},{"value":"/ [closed].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9216543,"byte_end":9216556,"line_start":60,"line_end":60,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9216557,"byte_end":9216560,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ [closed]: crate::sync::Semaphore::close","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9216561,"byte_end":9216604,"line_start":62,"line_end":62,"column_start":1,"column_end":44}},{"value":"/ [`Semaphore::acquire`]: crate::sync::Semaphore::acquire","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9216605,"byte_end":9216664,"line_start":63,"line_end":63,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6352},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9235952,"byte_end":9235961,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Semaphore","qualname":"::sync::semaphore::Semaphore","value":"Semaphore {  }","parent":null,"children":[{"krate":0,"index":6353}],"decl_id":null,"docs":" Counting semaphore performing asynchronous permit acquisition.","sig":null,"attributes":[{"value":"/ Counting semaphore performing asynchronous permit acquisition.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9235102,"byte_end":9235168,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9235169,"byte_end":9235172,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ A semaphore maintains a set of permits. Permits are used to synchronize","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9235173,"byte_end":9235248,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ access to a shared resource. A semaphore differs from a mutex in that it","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9235249,"byte_end":9235325,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ can allow more than one concurrent caller to access the shared resource at a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9235326,"byte_end":9235406,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ time.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9235407,"byte_end":9235416,"line_start":10,"line_end":10,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9235417,"byte_end":9235420,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ When `acquire` is called and the semaphore has remaining permits, the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9235421,"byte_end":9235494,"line_start":12,"line_end":12,"column_start":1,"column_end":74}},{"value":"/ function immediately returns a permit. However, if no remaining permits are","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9235495,"byte_end":9235574,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ available, `acquire` (asynchronously) waits until an outstanding permit is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9235575,"byte_end":9235653,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ dropped. At this point, the freed permit is assigned to the caller.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9235654,"byte_end":9235725,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9235726,"byte_end":9235729,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ To use the `Semaphore` in a poll function, you can use the [`PollSemaphore`]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9235730,"byte_end":9235810,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ utility.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9235811,"byte_end":9235823,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9235824,"byte_end":9235827,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`PollSemaphore`]: https://docs.rs/tokio-util/0.6/tokio_util/sync/struct.PollSemaphore.html","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9235828,"byte_end":9235923,"line_start":20,"line_end":20,"column_start":1,"column_end":96}}]},{"kind":"Struct","id":{"krate":0,"index":6356},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9236210,"byte_end":9236225,"line_start":34,"line_end":34,"column_start":12,"column_end":27},"name":"SemaphorePermit","qualname":"::sync::semaphore::SemaphorePermit","value":"SemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":6358},{"krate":0,"index":6359}],"decl_id":null,"docs":" A permit from the semaphore.","sig":null,"attributes":[{"value":"/ A permit from the semaphore.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9236026,"byte_end":9236058,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9236059,"byte_end":9236062,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire`] method.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9236063,"byte_end":9236114,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9236115,"byte_end":9236118,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [`acquire`]: crate::sync::Semaphore::acquire()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9236119,"byte_end":9236169,"line_start":31,"line_end":31,"column_start":1,"column_end":51}},{"value":"must_use","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9236170,"byte_end":9236181,"line_start":32,"line_end":32,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6363},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9236486,"byte_end":9236506,"line_start":46,"line_end":46,"column_start":12,"column_end":32},"name":"OwnedSemaphorePermit","qualname":"::sync::semaphore::OwnedSemaphorePermit","value":"OwnedSemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":6364},{"krate":0,"index":6365}],"decl_id":null,"docs":" An owned permit from the semaphore.","sig":null,"attributes":[{"value":"/ An owned permit from the semaphore.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9236277,"byte_end":9236316,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9236317,"byte_end":9236320,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire_owned`] method.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9236321,"byte_end":9236378,"line_start":41,"line_end":41,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9236379,"byte_end":9236382,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ [`acquire_owned`]: crate::sync::Semaphore::acquire_owned()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9236383,"byte_end":9236445,"line_start":43,"line_end":43,"column_start":1,"column_end":63}},{"value":"must_use","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9236446,"byte_end":9236457,"line_start":44,"line_end":44,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5917},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9237102,"byte_end":9237105,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"new","qualname":"<Semaphore>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new semaphore with the initial number of permits.\n","sig":null,"attributes":[{"value":"/ Creates a new semaphore with the initial number of permits.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9237027,"byte_end":9237090,"line_start":67,"line_end":67,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5918},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9237611,"byte_end":9237628,"line_start":84,"line_end":84,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<Semaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.\n","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9237547,"byte_end":9237599,"line_start":83,"line_end":83,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":5919},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9237875,"byte_end":9237886,"line_start":91,"line_end":91,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<Semaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9237698,"byte_end":9237740,"line_start":88,"line_end":88,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9237745,"byte_end":9237748,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function will panic if the limit is exceeded.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9237753,"byte_end":9237863,"line_start":90,"line_end":90,"column_start":5,"column_end":115}}]},{"kind":"Method","id":{"krate":0,"index":5920},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9238306,"byte_end":9238313,"line_start":103,"line_end":103,"column_start":18,"column_end":25},"name":"acquire","qualname":"<Semaphore>::acquire","value":"pub async fn acquire<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires a permit from the semaphore.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9237949,"byte_end":9237990,"line_start":95,"line_end":95,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9237995,"byte_end":9237998,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9238003,"byte_end":9238074,"line_start":97,"line_end":97,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`SemaphorePermit`] representing the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9238079,"byte_end":9238145,"line_start":98,"line_end":98,"column_start":5,"column_end":71}},{"value":"/ acquired permit.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9238150,"byte_end":9238170,"line_start":99,"line_end":99,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9238175,"byte_end":9238178,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9238183,"byte_end":9238230,"line_start":101,"line_end":101,"column_start":5,"column_end":52}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9238235,"byte_end":9238288,"line_start":102,"line_end":102,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5923},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9238867,"byte_end":9238879,"line_start":119,"line_end":119,"column_start":18,"column_end":30},"name":"acquire_many","qualname":"<Semaphore>::acquire_many","value":"pub async fn acquire_many<'_, '_>(&'_ Self, u32) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires `n` permits from the semaphore.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9238506,"byte_end":9238550,"line_start":111,"line_end":111,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9238555,"byte_end":9238558,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9238563,"byte_end":9238634,"line_start":113,"line_end":113,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`SemaphorePermit`] representing the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9238639,"byte_end":9238705,"line_start":114,"line_end":114,"column_start":5,"column_end":71}},{"value":"/ acquired permits.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9238710,"byte_end":9238731,"line_start":115,"line_end":115,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9238736,"byte_end":9238739,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9238744,"byte_end":9238791,"line_start":117,"line_end":117,"column_start":5,"column_end":52}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9238796,"byte_end":9238849,"line_start":118,"line_end":118,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5926},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9239618,"byte_end":9239629,"line_start":136,"line_end":136,"column_start":12,"column_end":23},"name":"try_acquire","qualname":"<Semaphore>::try_acquire","value":"pub fn try_acquire(&Self) -> Result<SemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9239080,"byte_end":9239129,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9239134,"byte_end":9239137,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9239142,"byte_end":9239222,"line_start":129,"line_end":129,"column_start":5,"column_end":85}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left. Otherwise,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9239227,"byte_end":9239308,"line_start":130,"line_end":130,"column_start":5,"column_end":86}},{"value":"/ this returns a [`SemaphorePermit`] representing the acquired permits.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9239313,"byte_end":9239386,"line_start":131,"line_end":131,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9239391,"byte_end":9239394,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9239399,"byte_end":9239468,"line_start":133,"line_end":133,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9239473,"byte_end":9239548,"line_start":134,"line_end":134,"column_start":5,"column_end":80}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9239553,"byte_end":9239606,"line_start":135,"line_end":135,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5927},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9240433,"byte_end":9240449,"line_start":155,"line_end":155,"column_start":12,"column_end":28},"name":"try_acquire_many","qualname":"<Semaphore>::try_acquire_many","value":"pub fn try_acquire_many(&Self, u32)\n-> Result<SemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire n permits from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire n permits from the semaphore.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9239894,"byte_end":9239944,"line_start":146,"line_end":146,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9239949,"byte_end":9239952,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9239957,"byte_end":9240037,"line_start":148,"line_end":148,"column_start":5,"column_end":85}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left. Otherwise,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9240042,"byte_end":9240123,"line_start":149,"line_end":149,"column_start":5,"column_end":86}},{"value":"/ this returns a [`SemaphorePermit`] representing the acquired permits.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9240128,"byte_end":9240201,"line_start":150,"line_end":150,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9240206,"byte_end":9240209,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9240214,"byte_end":9240283,"line_start":152,"line_end":152,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9240288,"byte_end":9240363,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9240368,"byte_end":9240421,"line_start":154,"line_end":154,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5928},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9241199,"byte_end":9241212,"line_start":175,"line_end":175,"column_start":18,"column_end":31},"name":"acquire_owned","qualname":"<Semaphore>::acquire_owned","value":"pub async fn acquire_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires a permit from the semaphore.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9240722,"byte_end":9240763,"line_start":165,"line_end":165,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9240768,"byte_end":9240771,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9240776,"byte_end":9240844,"line_start":167,"line_end":167,"column_start":5,"column_end":73}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9240849,"byte_end":9240920,"line_start":168,"line_end":168,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9240925,"byte_end":9240996,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9241001,"byte_end":9241021,"line_start":170,"line_end":170,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9241026,"byte_end":9241029,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9241034,"byte_end":9241061,"line_start":172,"line_end":172,"column_start":5,"column_end":32}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9241066,"byte_end":9241113,"line_start":173,"line_end":173,"column_start":5,"column_end":52}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9241118,"byte_end":9241181,"line_start":174,"line_end":174,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5931},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9242085,"byte_end":9242102,"line_start":195,"line_end":195,"column_start":12,"column_end":29},"name":"try_acquire_owned","qualname":"<Semaphore>::try_acquire_owned","value":"pub fn try_acquire_owned(Arc<Self>)\n-> Result<OwnedSemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9241420,"byte_end":9241469,"line_start":183,"line_end":183,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9241474,"byte_end":9241477,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method. If","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9241482,"byte_end":9241553,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/ the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9241558,"byte_end":9241635,"line_start":186,"line_end":186,"column_start":5,"column_end":82}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9241640,"byte_end":9241710,"line_start":187,"line_end":187,"column_start":5,"column_end":75}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9241715,"byte_end":9241786,"line_start":188,"line_end":188,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9241791,"byte_end":9241811,"line_start":189,"line_end":189,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9241816,"byte_end":9241819,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9241824,"byte_end":9241851,"line_start":191,"line_end":191,"column_start":5,"column_end":32}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9241856,"byte_end":9241925,"line_start":192,"line_end":192,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9241930,"byte_end":9242005,"line_start":193,"line_end":193,"column_start":5,"column_end":80}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9242010,"byte_end":9242073,"line_start":194,"line_end":194,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5932},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9243296,"byte_end":9243301,"line_start":234,"line_end":234,"column_start":12,"column_end":17},"name":"close","qualname":"<Semaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9242383,"byte_end":9242408,"line_start":205,"line_end":205,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9242413,"byte_end":9242416,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ This prevents the semaphore from issuing new permits and notifies all pending waiters.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9242421,"byte_end":9242511,"line_start":207,"line_end":207,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9242516,"byte_end":9242519,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9242524,"byte_end":9242538,"line_start":209,"line_end":209,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9242543,"byte_end":9242546,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9242551,"byte_end":9242558,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9242563,"byte_end":9242594,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9242599,"byte_end":9242622,"line_start":213,"line_end":213,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::TryAcquireError;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9242627,"byte_end":9242664,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9242669,"byte_end":9242672,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9242677,"byte_end":9242695,"line_start":216,"line_end":216,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9242700,"byte_end":9242721,"line_start":217,"line_end":217,"column_start":5,"column_end":26}},{"value":"/     let semaphore = Arc::new(Semaphore::new(1));","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9242726,"byte_end":9242778,"line_start":218,"line_end":218,"column_start":5,"column_end":57}},{"value":"/     let semaphore2 = semaphore.clone();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9242783,"byte_end":9242826,"line_start":219,"line_end":219,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9242831,"byte_end":9242834,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9242839,"byte_end":9242872,"line_start":221,"line_end":221,"column_start":5,"column_end":38}},{"value":"/         let permit = semaphore.acquire_many(2).await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9242877,"byte_end":9242934,"line_start":222,"line_end":222,"column_start":5,"column_end":62}},{"value":"/         assert!(permit.is_err());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9242939,"byte_end":9242976,"line_start":223,"line_end":223,"column_start":5,"column_end":42}},{"value":"/         println!(\"waiter received error\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9242981,"byte_end":9243027,"line_start":224,"line_end":224,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9243032,"byte_end":9243043,"line_start":225,"line_end":225,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9243048,"byte_end":9243051,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/     println!(\"closing semaphore\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9243056,"byte_end":9243094,"line_start":227,"line_end":227,"column_start":5,"column_end":43}},{"value":"/     semaphore2.close();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9243099,"byte_end":9243126,"line_start":228,"line_end":228,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9243131,"byte_end":9243134,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/     // Cannot obtain more permits","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9243139,"byte_end":9243176,"line_start":230,"line_end":230,"column_start":5,"column_end":42}},{"value":"/     assert_eq!(semaphore2.try_acquire().err(), Some(TryAcquireError::Closed))","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9243181,"byte_end":9243262,"line_start":231,"line_end":231,"column_start":5,"column_end":86}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9243267,"byte_end":9243272,"line_start":232,"line_end":232,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9243277,"byte_end":9243284,"line_start":233,"line_end":233,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5935},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9243559,"byte_end":9243565,"line_start":243,"line_end":243,"column_start":12,"column_end":18},"name":"forget","qualname":"<SemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9243384,"byte_end":9243454,"line_start":240,"line_end":240,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9243459,"byte_end":9243528,"line_start":241,"line_end":241,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9243533,"byte_end":9243547,"line_start":242,"line_end":242,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":5937},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9243820,"byte_end":9243826,"line_start":252,"line_end":252,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedSemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9243645,"byte_end":9243715,"line_start":249,"line_end":249,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9243720,"byte_end":9243789,"line_start":250,"line_end":250,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9243794,"byte_end":9243808,"line_start":251,"line_end":251,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":6368},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9246936,"byte_end":9246942,"line_start":75,"line_end":75,"column_start":12,"column_end":18},"name":"RwLock","qualname":"::sync::rwlock::RwLock","value":"RwLock {  }","parent":null,"children":[{"krate":0,"index":6370},{"krate":0,"index":6371}],"decl_id":null,"docs":" An asynchronous reader-writer lock.","sig":null,"attributes":[{"value":"/ An asynchronous reader-writer lock.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9244405,"byte_end":9244444,"line_start":15,"line_end":15,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9244445,"byte_end":9244448,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This type of lock allows a number of readers or at most one writer at any","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9244449,"byte_end":9244526,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ point in time. The write portion of this lock typically allows modification","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9244527,"byte_end":9244606,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ of the underlying data (exclusive access) and the read portion of this lock","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9244607,"byte_end":9244686,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ typically allows for read-only access (shared access).","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9244687,"byte_end":9244745,"line_start":20,"line_end":20,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9244746,"byte_end":9244749,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In comparison, a [`Mutex`] does not distinguish between readers or writers","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9244750,"byte_end":9244828,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ that acquire the lock, therefore causing any tasks waiting for the lock to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9244829,"byte_end":9244907,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ become available to yield. An `RwLock` will allow any number of readers to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9244908,"byte_end":9244986,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ acquire the lock as long as a writer is not holding the lock.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9244987,"byte_end":9245052,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9245053,"byte_end":9245056,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ The priority policy of Tokio's read-write lock is _fair_ (or","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9245057,"byte_end":9245121,"line_start":27,"line_end":27,"column_start":1,"column_end":65}},{"value":"/ [_write-preferring_]), in order to ensure that readers cannot starve","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9245122,"byte_end":9245194,"line_start":28,"line_end":28,"column_start":1,"column_end":73}},{"value":"/ writers. Fairness is ensured using a first-in, first-out queue for the tasks","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9245195,"byte_end":9245275,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ awaiting the lock; if a task that wishes to acquire the write lock is at the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9245276,"byte_end":9245356,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ head of the queue, read locks will not be given out until the write lock has","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9245357,"byte_end":9245437,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/ been released. This is in contrast to the Rust standard library's","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9245438,"byte_end":9245507,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/ `std::sync::RwLock`, where the priority policy is dependent on the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9245508,"byte_end":9245578,"line_start":33,"line_end":33,"column_start":1,"column_end":71}},{"value":"/ operating system's implementation.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9245579,"byte_end":9245617,"line_start":34,"line_end":34,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9245618,"byte_end":9245621,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ The type parameter `T` represents the data that this lock protects. It is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9245622,"byte_end":9245699,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ required that `T` satisfies [`Send`] to be shared across threads. The RAII guards","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9245700,"byte_end":9245785,"line_start":37,"line_end":37,"column_start":1,"column_end":86}},{"value":"/ returned from the locking methods implement [`Deref`](trait@std::ops::Deref)","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9245786,"byte_end":9245866,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ (and [`DerefMut`](trait@std::ops::DerefMut)","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9245867,"byte_end":9245914,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/ for the `write` methods) to allow access to the content of the lock.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9245915,"byte_end":9245987,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9245988,"byte_end":9245991,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9245992,"byte_end":9246006,"line_start":42,"line_end":42,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9246007,"byte_end":9246010,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9246011,"byte_end":9246018,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9246019,"byte_end":9246047,"line_start":45,"line_end":45,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9246048,"byte_end":9246051,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9246052,"byte_end":9246070,"line_start":47,"line_end":47,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9246071,"byte_end":9246092,"line_start":48,"line_end":48,"column_start":1,"column_end":22}},{"value":"/     let lock = RwLock::new(5);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9246093,"byte_end":9246127,"line_start":49,"line_end":49,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9246128,"byte_end":9246131,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     // many reader locks can be held at once","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9246132,"byte_end":9246180,"line_start":51,"line_end":51,"column_start":1,"column_end":49}},{"value":"/     {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9246181,"byte_end":9246190,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/         let r1 = lock.read().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9246191,"byte_end":9246230,"line_start":53,"line_end":53,"column_start":1,"column_end":40}},{"value":"/         let r2 = lock.read().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9246231,"byte_end":9246270,"line_start":54,"line_end":54,"column_start":1,"column_end":40}},{"value":"/         assert_eq!(*r1, 5);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9246271,"byte_end":9246302,"line_start":55,"line_end":55,"column_start":1,"column_end":32}},{"value":"/         assert_eq!(*r2, 5);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9246303,"byte_end":9246334,"line_start":56,"line_end":56,"column_start":1,"column_end":32}},{"value":"/     } // read locks are dropped at this point","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9246335,"byte_end":9246384,"line_start":57,"line_end":57,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9246385,"byte_end":9246388,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/     // only one write lock may be held, however","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9246389,"byte_end":9246440,"line_start":59,"line_end":59,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9246441,"byte_end":9246450,"line_start":60,"line_end":60,"column_start":1,"column_end":10}},{"value":"/         let mut w = lock.write().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9246451,"byte_end":9246494,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/         *w += 1;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9246495,"byte_end":9246515,"line_start":62,"line_end":62,"column_start":1,"column_end":21}},{"value":"/         assert_eq!(*w, 6);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9246516,"byte_end":9246546,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/     } // write lock is dropped here","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9246547,"byte_end":9246586,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9246587,"byte_end":9246592,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9246593,"byte_end":9246600,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9246601,"byte_end":9246604,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@super::Mutex","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9246605,"byte_end":9246639,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9246640,"byte_end":9246669,"line_start":69,"line_end":69,"column_start":1,"column_end":30}},{"value":"/ [`RwLockReadGuard`]: struct@RwLockReadGuard","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9246670,"byte_end":9246717,"line_start":70,"line_end":70,"column_start":1,"column_end":48}},{"value":"/ [`RwLockWriteGuard`]: struct@RwLockWriteGuard","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9246718,"byte_end":9246767,"line_start":71,"line_end":71,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9246768,"byte_end":9246805,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/ [_write-preferring_]: https://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock#Priority_policies","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9246806,"byte_end":9246907,"line_start":73,"line_end":73,"column_start":1,"column_end":102}}]},{"kind":"Struct","id":{"krate":0,"index":5958},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9247317,"byte_end":9247332,"line_start":91,"line_end":91,"column_start":12,"column_end":27},"name":"RwLockReadGuard","qualname":"::sync::rwlock::RwLockReadGuard","value":"RwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":5961},{"krate":0,"index":5962},{"krate":0,"index":5963}],"decl_id":null,"docs":" RAII structure used to release the shared read access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the shared read access of a lock when","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9247076,"byte_end":9247148,"line_start":83,"line_end":83,"column_start":1,"column_end":73}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9247149,"byte_end":9247161,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9247162,"byte_end":9247165,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`read`] method on","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9247166,"byte_end":9247221,"line_start":86,"line_end":86,"column_start":1,"column_end":56}},{"value":"/ [`RwLock`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9247222,"byte_end":9247237,"line_start":87,"line_end":87,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9247238,"byte_end":9247241,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ [`read`]: method@RwLock::read","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9247242,"byte_end":9247275,"line_start":89,"line_end":89,"column_start":1,"column_end":34}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9247276,"byte_end":9247305,"line_start":90,"line_end":90,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5967},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9248650,"byte_end":9248653,"line_start":132,"line_end":132,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockReadGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockReadGuard where F: FnOnce(&T) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Make a new `RwLockReadGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"/ Make a new `RwLockReadGuard` for a component of the locked data.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9247476,"byte_end":9247544,"line_start":98,"line_end":98,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9247549,"byte_end":9247552,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9247557,"byte_end":9247630,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9247635,"byte_end":9247655,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9247660,"byte_end":9247663,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9247668,"byte_end":9247719,"line_start":103,"line_end":103,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockReadGuard::map(...)`. A method would interfere with","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9247724,"byte_end":9247794,"line_start":104,"line_end":104,"column_start":5,"column_end":75}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9247799,"byte_end":9247863,"line_start":105,"line_end":105,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9247868,"byte_end":9247871,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::map`] from the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9247876,"byte_end":9247948,"line_start":107,"line_end":107,"column_start":5,"column_end":77}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9247953,"byte_end":9247979,"line_start":108,"line_end":108,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9247984,"byte_end":9247987,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.map","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9247992,"byte_end":9248101,"line_start":110,"line_end":110,"column_start":5,"column_end":114}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9248106,"byte_end":9248169,"line_start":111,"line_end":111,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9248174,"byte_end":9248177,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9248182,"byte_end":9248196,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9248201,"byte_end":9248204,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9248209,"byte_end":9248216,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9248221,"byte_end":9248268,"line_start":116,"line_end":116,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9248273,"byte_end":9248276,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9248281,"byte_end":9248329,"line_start":118,"line_end":118,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9248334,"byte_end":9248354,"line_start":119,"line_end":119,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9248359,"byte_end":9248362,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9248367,"byte_end":9248387,"line_start":121,"line_end":121,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9248392,"byte_end":9248415,"line_start":122,"line_end":122,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9248420,"byte_end":9248455,"line_start":123,"line_end":123,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9248460,"byte_end":9248463,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9248468,"byte_end":9248502,"line_start":125,"line_end":125,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::map(guard, |f| &f.0);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9248507,"byte_end":9248561,"line_start":126,"line_end":126,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9248566,"byte_end":9248569,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9248574,"byte_end":9248600,"line_start":128,"line_end":128,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9248605,"byte_end":9248612,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9248617,"byte_end":9248624,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9248629,"byte_end":9248638,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5970},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9250348,"byte_end":9250355,"line_start":183,"line_end":183,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockReadGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockReadGuard, Self> where\nF: FnOnce(&T) -> Option<&U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`RwLockReadGuard`] for a component of the\n locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`RwLockReadGuard`] for a component of the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9249031,"byte_end":9249100,"line_start":147,"line_end":147,"column_start":5,"column_end":74}},{"value":"/ locked data. The original guard is returned if the closure returns","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9249105,"byte_end":9249175,"line_start":148,"line_end":148,"column_start":5,"column_end":75}},{"value":"/ `None`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9249180,"byte_end":9249191,"line_start":149,"line_end":149,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9249196,"byte_end":9249199,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9249204,"byte_end":9249277,"line_start":151,"line_end":151,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9249282,"byte_end":9249302,"line_start":152,"line_end":152,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9249307,"byte_end":9249310,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9249315,"byte_end":9249374,"line_start":154,"line_end":154,"column_start":5,"column_end":64}},{"value":"/ `RwLockReadGuard::try_map(..)`. A method would interfere with methods of the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9249379,"byte_end":9249459,"line_start":155,"line_end":155,"column_start":5,"column_end":85}},{"value":"/ same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9249464,"byte_end":9249513,"line_start":156,"line_end":156,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9249518,"byte_end":9249521,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::try_map`] from the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9249526,"byte_end":9249602,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9249607,"byte_end":9249633,"line_start":159,"line_end":159,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9249638,"byte_end":9249641,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.try_map","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9249646,"byte_end":9249763,"line_start":161,"line_end":161,"column_start":5,"column_end":122}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9249768,"byte_end":9249831,"line_start":162,"line_end":162,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9249836,"byte_end":9249839,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9249844,"byte_end":9249858,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9249863,"byte_end":9249866,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9249871,"byte_end":9249878,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9249883,"byte_end":9249930,"line_start":167,"line_end":167,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9249935,"byte_end":9249938,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9249943,"byte_end":9249991,"line_start":169,"line_end":169,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9249996,"byte_end":9250016,"line_start":170,"line_end":170,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9250021,"byte_end":9250024,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9250029,"byte_end":9250049,"line_start":172,"line_end":172,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9250054,"byte_end":9250077,"line_start":173,"line_end":173,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9250082,"byte_end":9250117,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9250122,"byte_end":9250125,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9250130,"byte_end":9250164,"line_start":176,"line_end":176,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::try_map(guard, |f| Some(&f.0)).expect(\"should not fail\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9250169,"byte_end":9250259,"line_start":177,"line_end":177,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9250264,"byte_end":9250267,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9250272,"byte_end":9250298,"line_start":179,"line_end":179,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9250303,"byte_end":9250310,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9250315,"byte_end":9250322,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9250327,"byte_end":9250336,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":5985},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9251604,"byte_end":9251620,"line_start":234,"line_end":234,"column_start":12,"column_end":28},"name":"RwLockWriteGuard","qualname":"::sync::rwlock::RwLockWriteGuard","value":"RwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":5988},{"krate":0,"index":5989},{"krate":0,"index":5990}],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9251352,"byte_end":9251428,"line_start":226,"line_end":226,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9251429,"byte_end":9251441,"line_start":227,"line_end":227,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9251442,"byte_end":9251445,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`write`] and method","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9251446,"byte_end":9251503,"line_start":229,"line_end":229,"column_start":1,"column_end":58}},{"value":"/ on [`RwLock`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9251504,"byte_end":9251522,"line_start":230,"line_end":230,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9251523,"byte_end":9251526,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ [`write`]: method@RwLock::write","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9251527,"byte_end":9251562,"line_start":232,"line_end":232,"column_start":1,"column_end":36}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9251563,"byte_end":9251592,"line_start":233,"line_end":233,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5994},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9252940,"byte_end":9252949,"line_start":278,"line_end":278,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<RwLockWriteGuard>::downgrade","value":"pub fn downgrade(Self) -> RwLockReadGuard","parent":null,"children":[],"decl_id":null,"docs":" Atomically downgrades a write lock into a read lock without allowing\n any writers to take exclusive access of the lock in the meantime.","sig":null,"attributes":[{"value":"/ Atomically downgrades a write lock into a read lock without allowing","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9251775,"byte_end":9251847,"line_start":241,"line_end":241,"column_start":5,"column_end":77}},{"value":"/ any writers to take exclusive access of the lock in the meantime.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9251852,"byte_end":9251921,"line_start":242,"line_end":242,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9251926,"byte_end":9251929,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ **Note:** This won't *necessarily* allow any additional readers to acquire","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9251934,"byte_end":9252012,"line_start":244,"line_end":244,"column_start":5,"column_end":83}},{"value":"/ locks, since [`RwLock`] is fair and it is possible that a writer is next","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9252017,"byte_end":9252093,"line_start":245,"line_end":245,"column_start":5,"column_end":81}},{"value":"/ in line.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9252098,"byte_end":9252110,"line_start":246,"line_end":246,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9252115,"byte_end":9252118,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9252123,"byte_end":9252197,"line_start":248,"line_end":248,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9252202,"byte_end":9252219,"line_start":249,"line_end":249,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9252224,"byte_end":9252227,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9252232,"byte_end":9252246,"line_start":251,"line_end":251,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9252251,"byte_end":9252254,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9252259,"byte_end":9252266,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"/ # use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9252271,"byte_end":9252301,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9252306,"byte_end":9252331,"line_start":255,"line_end":255,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9252336,"byte_end":9252341,"line_start":256,"line_end":256,"column_start":5,"column_end":10}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9252346,"byte_end":9252366,"line_start":257,"line_end":257,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9252371,"byte_end":9252394,"line_start":258,"line_end":258,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(1));","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9252399,"byte_end":9252439,"line_start":259,"line_end":259,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9252444,"byte_end":9252447,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ let n = lock.write().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9252452,"byte_end":9252483,"line_start":261,"line_end":261,"column_start":5,"column_end":36}},{"value":"/   ","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9252488,"byte_end":9252494,"line_start":262,"line_end":262,"column_start":5,"column_end":11}},{"value":"/ let cloned_lock = lock.clone();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9252499,"byte_end":9252534,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/ let handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9252539,"byte_end":9252581,"line_start":264,"line_end":264,"column_start":5,"column_end":47}},{"value":"/     *cloned_lock.write().await = 2;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9252586,"byte_end":9252625,"line_start":265,"line_end":265,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9252630,"byte_end":9252637,"line_start":266,"line_end":266,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9252642,"byte_end":9252645,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ let n = n.downgrade();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9252650,"byte_end":9252676,"line_start":268,"line_end":268,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*n, 1, \"downgrade is atomic\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9252681,"byte_end":9252726,"line_start":269,"line_end":269,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9252731,"byte_end":9252734,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ drop(n);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9252739,"byte_end":9252751,"line_start":271,"line_end":271,"column_start":5,"column_end":17}},{"value":"/ handle.await.unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9252756,"byte_end":9252782,"line_start":272,"line_end":272,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*lock.read().await, 2, \"second writer obtained write lock\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9252787,"byte_end":9252862,"line_start":273,"line_end":273,"column_start":5,"column_end":80}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9252867,"byte_end":9252874,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9252879,"byte_end":9252886,"line_start":275,"line_end":275,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9252891,"byte_end":9252894,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9252899,"byte_end":9252928,"line_start":277,"line_end":277,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":6021},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9255945,"byte_end":9255948,"line_start":370,"line_end":370,"column_start":12,"column_end":15},"name":"new","qualname":"<RwLock<T>>::new","value":"pub fn new(T) -> RwLock<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9255735,"byte_end":9255798,"line_start":361,"line_end":361,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9255803,"byte_end":9255806,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9255811,"byte_end":9255825,"line_start":363,"line_end":363,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9255830,"byte_end":9255833,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9255838,"byte_end":9255845,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9255850,"byte_end":9255878,"line_start":366,"line_end":366,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9255883,"byte_end":9255886,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9255891,"byte_end":9255921,"line_start":368,"line_end":368,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9255926,"byte_end":9255933,"line_start":369,"line_end":369,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6022},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9258155,"byte_end":9258159,"line_start":441,"line_end":441,"column_start":18,"column_end":22},"name":"read","qualname":"<RwLock<T>>::read","value":"pub async fn read<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with shared read access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with shared read access, causing the current task","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9256677,"byte_end":9256750,"line_start":401,"line_end":401,"column_start":5,"column_end":78}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9256755,"byte_end":9256801,"line_start":402,"line_end":402,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9256806,"byte_end":9256809,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield until there are no writers which hold the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9256814,"byte_end":9256887,"line_start":404,"line_end":404,"column_start":5,"column_end":78}},{"value":"/ lock. There may be other readers inside the lock when the task resumes.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9256892,"byte_end":9256967,"line_start":405,"line_end":405,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9256972,"byte_end":9256975,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Note that under the priority policy of [`RwLock`], read locks are not","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9256980,"byte_end":9257053,"line_start":407,"line_end":407,"column_start":5,"column_end":78}},{"value":"/ granted until prior write locks, to prevent starvation. Therefore","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9257058,"byte_end":9257127,"line_start":408,"line_end":408,"column_start":5,"column_end":74}},{"value":"/ deadlock may occur if a read lock is held by the current task, a write","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9257132,"byte_end":9257206,"line_start":409,"line_end":409,"column_start":5,"column_end":79}},{"value":"/ lock attempt is made, and then a subsequent read lock attempt is made","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9257211,"byte_end":9257284,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ by the current task.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9257289,"byte_end":9257313,"line_start":411,"line_end":411,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9257318,"byte_end":9257321,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9257326,"byte_end":9257400,"line_start":413,"line_end":413,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9257405,"byte_end":9257422,"line_start":414,"line_end":414,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9257427,"byte_end":9257430,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9257435,"byte_end":9257449,"line_start":416,"line_end":416,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9257454,"byte_end":9257457,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9257462,"byte_end":9257469,"line_start":418,"line_end":418,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9257474,"byte_end":9257497,"line_start":419,"line_end":419,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9257502,"byte_end":9257530,"line_start":420,"line_end":420,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9257535,"byte_end":9257538,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9257543,"byte_end":9257561,"line_start":422,"line_end":422,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9257566,"byte_end":9257587,"line_start":423,"line_end":423,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9257592,"byte_end":9257636,"line_start":424,"line_end":424,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9257641,"byte_end":9257675,"line_start":425,"line_end":425,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9257680,"byte_end":9257683,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/     let n = lock.read().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9257688,"byte_end":9257722,"line_start":427,"line_end":427,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9257727,"byte_end":9257753,"line_start":428,"line_end":428,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9257758,"byte_end":9257761,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9257766,"byte_end":9257799,"line_start":430,"line_end":430,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9257804,"byte_end":9257874,"line_start":431,"line_end":431,"column_start":5,"column_end":75}},{"value":"/         let r = c_lock.read().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9257879,"byte_end":9257919,"line_start":432,"line_end":432,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*r, 1);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9257924,"byte_end":9257954,"line_start":433,"line_end":433,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9257959,"byte_end":9258016,"line_start":434,"line_end":434,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9258021,"byte_end":9258024,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard after the spawned task finishes.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9258029,"byte_end":9258087,"line_start":436,"line_end":436,"column_start":5,"column_end":63}},{"value":"/     drop(n);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9258092,"byte_end":9258108,"line_start":437,"line_end":437,"column_start":5,"column_end":21}},{"value":"/}","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9258113,"byte_end":9258117,"line_start":438,"line_end":438,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9258122,"byte_end":9258129,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9258134,"byte_end":9258137,"line_start":440,"line_end":440,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6026},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9259625,"byte_end":9259633,"line_start":486,"line_end":486,"column_start":12,"column_end":20},"name":"try_read","qualname":"<RwLock<T>>::try_read","value":"pub fn try_read(&Self) -> Result<RwLockReadGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with shared read access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with shared read access.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9258606,"byte_end":9258668,"line_start":454,"line_end":454,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9258673,"byte_end":9258676,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9258681,"byte_end":9258758,"line_start":456,"line_end":456,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release read access","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9258763,"byte_end":9258834,"line_start":457,"line_end":457,"column_start":5,"column_end":76}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9258839,"byte_end":9258856,"line_start":458,"line_end":458,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9258861,"byte_end":9258864,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9258869,"byte_end":9258903,"line_start":460,"line_end":460,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9258908,"byte_end":9258911,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9258916,"byte_end":9258930,"line_start":462,"line_end":462,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9258935,"byte_end":9258938,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9258943,"byte_end":9258950,"line_start":464,"line_end":464,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9258955,"byte_end":9258978,"line_start":465,"line_end":465,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9258983,"byte_end":9259011,"line_start":466,"line_end":466,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9259016,"byte_end":9259019,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9259024,"byte_end":9259042,"line_start":468,"line_end":468,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9259047,"byte_end":9259068,"line_start":469,"line_end":469,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9259073,"byte_end":9259117,"line_start":470,"line_end":470,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9259122,"byte_end":9259156,"line_start":471,"line_end":471,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9259161,"byte_end":9259164,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/     let v = lock.try_read().unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9259169,"byte_end":9259210,"line_start":473,"line_end":473,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9259215,"byte_end":9259241,"line_start":474,"line_end":474,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9259246,"byte_end":9259249,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9259254,"byte_end":9259287,"line_start":476,"line_end":476,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9259292,"byte_end":9259362,"line_start":477,"line_end":477,"column_start":5,"column_end":75}},{"value":"/         let n = c_lock.read().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9259367,"byte_end":9259407,"line_start":478,"line_end":478,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9259412,"byte_end":9259442,"line_start":479,"line_end":479,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9259447,"byte_end":9259504,"line_start":480,"line_end":480,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9259509,"byte_end":9259512,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard when spawned task finishes.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9259517,"byte_end":9259570,"line_start":482,"line_end":482,"column_start":5,"column_end":58}},{"value":"/     drop(v);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9259575,"byte_end":9259591,"line_start":483,"line_end":483,"column_start":5,"column_end":21}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9259596,"byte_end":9259601,"line_start":484,"line_end":484,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9259606,"byte_end":9259613,"line_start":485,"line_end":485,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6027},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9260696,"byte_end":9260701,"line_start":522,"line_end":522,"column_start":18,"column_end":23},"name":"write","qualname":"<RwLock<T>>::write","value":"pub async fn write<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with exclusive write access, causing the current\n task to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with exclusive write access, causing the current","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9260059,"byte_end":9260131,"line_start":500,"line_end":500,"column_start":5,"column_end":77}},{"value":"/ task to yield until the lock has been acquired.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9260136,"byte_end":9260187,"line_start":501,"line_end":501,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9260192,"byte_end":9260195,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield while other writers or readers","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9260200,"byte_end":9260262,"line_start":503,"line_end":503,"column_start":5,"column_end":67}},{"value":"/ currently have access to the lock.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9260267,"byte_end":9260305,"line_start":504,"line_end":504,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9260310,"byte_end":9260313,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this `RwLock`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9260318,"byte_end":9260393,"line_start":506,"line_end":506,"column_start":5,"column_end":80}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9260398,"byte_end":9260415,"line_start":507,"line_end":507,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9260420,"byte_end":9260423,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9260428,"byte_end":9260442,"line_start":509,"line_end":509,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9260447,"byte_end":9260450,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9260455,"byte_end":9260462,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9260467,"byte_end":9260495,"line_start":512,"line_end":512,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9260500,"byte_end":9260503,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9260508,"byte_end":9260526,"line_start":514,"line_end":514,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9260531,"byte_end":9260552,"line_start":515,"line_end":515,"column_start":5,"column_end":26}},{"value":"/   let lock = RwLock::new(1);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9260557,"byte_end":9260589,"line_start":516,"line_end":516,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9260594,"byte_end":9260597,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/   let mut n = lock.write().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9260602,"byte_end":9260639,"line_start":518,"line_end":518,"column_start":5,"column_end":42}},{"value":"/   *n = 2;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9260644,"byte_end":9260657,"line_start":519,"line_end":519,"column_start":5,"column_end":18}},{"value":"/}","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9260662,"byte_end":9260666,"line_start":520,"line_end":520,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9260671,"byte_end":9260678,"line_start":521,"line_end":521,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6031},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9261805,"byte_end":9261814,"line_start":558,"line_end":558,"column_start":12,"column_end":21},"name":"try_write","qualname":"<RwLock<T>>::try_write","value":"pub fn try_write(&Self) -> Result<RwLockWriteGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with exclusive write access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with exclusive write access.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9261165,"byte_end":9261231,"line_start":535,"line_end":535,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9261236,"byte_end":9261239,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9261244,"byte_end":9261321,"line_start":537,"line_end":537,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release write access","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9261326,"byte_end":9261398,"line_start":538,"line_end":538,"column_start":5,"column_end":77}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9261403,"byte_end":9261420,"line_start":539,"line_end":539,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9261425,"byte_end":9261428,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9261433,"byte_end":9261467,"line_start":541,"line_end":541,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9261472,"byte_end":9261475,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9261480,"byte_end":9261494,"line_start":543,"line_end":543,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9261499,"byte_end":9261502,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9261507,"byte_end":9261514,"line_start":545,"line_end":545,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9261519,"byte_end":9261547,"line_start":546,"line_end":546,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9261552,"byte_end":9261555,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9261560,"byte_end":9261578,"line_start":548,"line_end":548,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9261583,"byte_end":9261604,"line_start":549,"line_end":549,"column_start":5,"column_end":26}},{"value":"/     let rw = RwLock::new(1);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9261609,"byte_end":9261641,"line_start":550,"line_end":550,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9261646,"byte_end":9261649,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/     let v = rw.read().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9261654,"byte_end":9261686,"line_start":552,"line_end":552,"column_start":5,"column_end":37}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9261691,"byte_end":9261717,"line_start":553,"line_end":553,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9261722,"byte_end":9261725,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/     assert!(rw.try_write().is_err());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9261730,"byte_end":9261771,"line_start":555,"line_end":555,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9261776,"byte_end":9261781,"line_start":556,"line_end":556,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9261786,"byte_end":9261793,"line_start":557,"line_end":557,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6032},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9262729,"byte_end":9262736,"line_start":589,"line_end":589,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RwLock<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9262257,"byte_end":9262312,"line_start":572,"line_end":572,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9262317,"byte_end":9262320,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `RwLock` mutably, no actual locking needs to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9262325,"byte_end":9262401,"line_start":574,"line_end":574,"column_start":5,"column_end":81}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9262406,"byte_end":9262480,"line_start":575,"line_end":575,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9262485,"byte_end":9262488,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9262493,"byte_end":9262507,"line_start":577,"line_end":577,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9262512,"byte_end":9262515,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9262520,"byte_end":9262527,"line_start":579,"line_end":579,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9262532,"byte_end":9262560,"line_start":580,"line_end":580,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9262565,"byte_end":9262568,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9262573,"byte_end":9262588,"line_start":582,"line_end":582,"column_start":5,"column_end":20}},{"value":"/     let mut lock = RwLock::new(1);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9262593,"byte_end":9262631,"line_start":583,"line_end":583,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9262636,"byte_end":9262639,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/     let n = lock.get_mut();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9262644,"byte_end":9262675,"line_start":585,"line_end":585,"column_start":5,"column_end":36}},{"value":"/     *n = 2;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9262680,"byte_end":9262695,"line_start":586,"line_end":586,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9262700,"byte_end":9262705,"line_start":587,"line_end":587,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9262710,"byte_end":9262717,"line_start":588,"line_end":588,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6033},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9262970,"byte_end":9262980,"line_start":597,"line_end":597,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RwLock<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the lock, returning the underlying data.\n","sig":null,"attributes":[{"value":"/ Consumes the lock, returning the underlying data.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9262905,"byte_end":9262958,"line_start":596,"line_end":596,"column_start":5,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":6101},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"watch","qualname":"::sync::watch","value":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","parent":null,"children":[{"krate":0,"index":6102},{"krate":0,"index":6103},{"krate":0,"index":6104},{"krate":0,"index":6105},{"krate":0,"index":12988},{"krate":0,"index":6106},{"krate":0,"index":12990},{"krate":0,"index":6107},{"krate":0,"index":6108},{"krate":0,"index":6109},{"krate":0,"index":6110},{"krate":0,"index":6111},{"krate":0,"index":6375},{"krate":0,"index":6379},{"krate":0,"index":6382},{"krate":0,"index":6385},{"krate":0,"index":6388},{"krate":0,"index":6392},{"krate":0,"index":6396},{"krate":0,"index":6403},{"krate":0,"index":6112},{"krate":0,"index":6122},{"krate":0,"index":6123},{"krate":0,"index":6125},{"krate":0,"index":6131},{"krate":0,"index":6133},{"krate":0,"index":6136},{"krate":0,"index":6139},{"krate":0,"index":6147},{"krate":0,"index":6150}],"decl_id":null,"docs":" A single-producer, multi-consumer channel that only retains the *last* sent\n value.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23078,"byte_end":23102,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ A single-producer, multi-consumer channel that only retains the *last* sent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9276574,"byte_end":9276653,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"/ value.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9276654,"byte_end":9276664,"line_start":2,"line_end":2,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9276665,"byte_end":9276668,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ This channel is useful for watching for changes to a value from multiple","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9276669,"byte_end":9276745,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/ points in the code base, for example, changes to configuration values.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9276746,"byte_end":9276820,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9276821,"byte_end":9276824,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9276825,"byte_end":9276836,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9276837,"byte_end":9276840,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`channel`] returns a [`Sender`] / [`Receiver`] pair. These are the producer","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9276841,"byte_end":9276921,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ and sender halves of the channel. The channel is created with an initial","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9276922,"byte_end":9276998,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ value. The **latest** value stored in the channel is accessed with","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9276999,"byte_end":9277069,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/ [`Receiver::borrow()`]. Awaiting [`Receiver::changed()`] waits for a new","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9277070,"byte_end":9277146,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ value to sent by the [`Sender`] half.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9277147,"byte_end":9277188,"line_start":13,"line_end":13,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9277189,"byte_end":9277192,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9277193,"byte_end":9277207,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9277208,"byte_end":9277211,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9277212,"byte_end":9277219,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9277220,"byte_end":9277247,"line_start":18,"line_end":18,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9277248,"byte_end":9277251,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9277252,"byte_end":9277316,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9277317,"byte_end":9277368,"line_start":21,"line_end":21,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9277369,"byte_end":9277372,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9277373,"byte_end":9277406,"line_start":23,"line_end":23,"column_start":1,"column_end":34}},{"value":"/         while rx.changed().await.is_ok() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9277407,"byte_end":9277453,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/             println!(\"received = {:?}\", *rx.borrow());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9277454,"byte_end":9277512,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9277513,"byte_end":9277526,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9277527,"byte_end":9277538,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9277539,"byte_end":9277542,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     tx.send(\"world\")?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9277543,"byte_end":9277569,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9277570,"byte_end":9277582,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9277583,"byte_end":9277590,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9277591,"byte_end":9277598,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9277599,"byte_end":9277602,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Closing","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9277603,"byte_end":9277616,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9277617,"byte_end":9277620,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [`Sender::is_closed`] and [`Sender::closed`] allow the producer to detect","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9277621,"byte_end":9277698,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ when all [`Receiver`] handles have been dropped. This indicates that there","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9277699,"byte_end":9277777,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ is no further interest in the values being produced and work can be stopped.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9277778,"byte_end":9277858,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9277859,"byte_end":9277862,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Thread safety","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9277863,"byte_end":9277882,"line_start":40,"line_end":40,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9277883,"byte_end":9277886,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Both [`Sender`] and [`Receiver`] are thread safe. They can be moved to other","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9277887,"byte_end":9277967,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ threads and can be used in a concurrent environment. Clones of [`Receiver`]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9277968,"byte_end":9278047,"line_start":43,"line_end":43,"column_start":1,"column_end":80}},{"value":"/ handles may be moved to separate threads and also used concurrently.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9278048,"byte_end":9278120,"line_start":44,"line_end":44,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9278121,"byte_end":9278124,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::watch::Sender","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9278125,"byte_end":9278167,"line_start":46,"line_end":46,"column_start":1,"column_end":43}},{"value":"/ [`Receiver`]: crate::sync::watch::Receiver","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9278168,"byte_end":9278214,"line_start":47,"line_end":47,"column_start":1,"column_end":47}},{"value":"/ [`Receiver::changed()`]: crate::sync::watch::Receiver::changed","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9278215,"byte_end":9278281,"line_start":48,"line_end":48,"column_start":1,"column_end":67}},{"value":"/ [`Receiver::borrow()`]: crate::sync::watch::Receiver::borrow","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9278282,"byte_end":9278346,"line_start":49,"line_end":49,"column_start":1,"column_end":65}},{"value":"/ [`channel`]: crate::sync::watch::channel","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9278347,"byte_end":9278391,"line_start":50,"line_end":50,"column_start":1,"column_end":45}},{"value":"/ [`Sender::is_closed`]: crate::sync::watch::Sender::is_closed","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9278392,"byte_end":9278456,"line_start":51,"line_end":51,"column_start":1,"column_end":65}},{"value":"/ [`Sender::closed`]: crate::sync::watch::Sender::closed","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9278457,"byte_end":9278515,"line_start":52,"line_end":52,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":6375},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9279079,"byte_end":9279087,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::watch::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":6377},{"krate":0,"index":6378}],"decl_id":null,"docs":" Receives values from the associated [`Sender`](struct@Sender).","sig":null,"attributes":[{"value":"/ Receives values from the associated [`Sender`](struct@Sender).","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9278717,"byte_end":9278783,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9278784,"byte_end":9278787,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9278788,"byte_end":9278854,"line_start":63,"line_end":63,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9278855,"byte_end":9278858,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ To turn this receiver into a `Stream`, you can use the [`WatchStream`]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9278859,"byte_end":9278933,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/ wrapper.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9278934,"byte_end":9278946,"line_start":66,"line_end":66,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9278947,"byte_end":9278950,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [`WatchStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.WatchStream.html","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9278951,"byte_end":9279050,"line_start":68,"line_end":68,"column_start":1,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":6382},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9279376,"byte_end":9279382,"line_start":82,"line_end":82,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::watch::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":6384}],"decl_id":null,"docs":" Sends values to the associated [`Receiver`](struct@Receiver).","sig":null,"attributes":[{"value":"/ Sends values to the associated [`Receiver`](struct@Receiver).","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9279211,"byte_end":9279276,"line_start":78,"line_end":78,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9279277,"byte_end":9279280,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9279281,"byte_end":9279347,"line_start":80,"line_end":80,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":6388},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9279702,"byte_end":9279705,"line_start":92,"line_end":92,"column_start":12,"column_end":15},"name":"Ref","qualname":"::sync::watch::Ref","value":"Ref {  }","parent":null,"children":[{"krate":0,"index":6391}],"decl_id":null,"docs":" Returns a reference to the inner value","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9279419,"byte_end":9279461,"line_start":86,"line_end":86,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9279462,"byte_end":9279465,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Outstanding borrows hold a read lock on the inner value. This means that","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9279466,"byte_end":9279542,"line_start":88,"line_end":88,"column_start":1,"column_end":77}},{"value":"/ long lived borrows could cause the produce half to block. It is recommended","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9279543,"byte_end":9279622,"line_start":89,"line_end":89,"column_start":1,"column_end":80}},{"value":"/ to keep the borrow as short lived as possible.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9279623,"byte_end":9279673,"line_start":90,"line_end":90,"column_start":1,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":6112},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9280282,"byte_end":9280287,"line_start":117,"line_end":117,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::watch::error","value":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","parent":null,"children":[{"krate":0,"index":6113},{"krate":0,"index":6406},{"krate":0,"index":6409},{"krate":0,"index":6114},{"krate":0,"index":6117},{"krate":0,"index":6412},{"krate":0,"index":6415},{"krate":0,"index":6119},{"krate":0,"index":6121}],"decl_id":null,"docs":" Watch error types\n","sig":null,"attributes":[{"value":"/ Watch error types","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9280294,"byte_end":9280315,"line_start":118,"line_end":118,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":6406},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9280423,"byte_end":9280432,"line_start":124,"line_end":124,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::watch::error::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":6408}],"decl_id":null,"docs":" Error produced when sending a value fails.\n","sig":null,"attributes":[{"value":"/ Error produced when sending a value fails.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9280340,"byte_end":9280386,"line_start":122,"line_end":122,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":6412},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9280853,"byte_end":9280862,"line_start":140,"line_end":140,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::watch::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error produced when receiving a change notification.\n","sig":null,"attributes":[{"value":"/ Error produced when receiving a change notification.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9280760,"byte_end":9280816,"line_start":138,"line_end":138,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":6123},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9281917,"byte_end":9281924,"line_start":182,"line_end":182,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::watch::channel","value":"pub fn channel<T>(T) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new watch channel, returning the \"send\" and \"receive\" handles.","sig":null,"attributes":[{"value":"/ Creates a new watch channel, returning the \"send\" and \"receive\" handles.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9281154,"byte_end":9281230,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9281231,"byte_end":9281234,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ All values sent by [`Sender`] will become visible to the [`Receiver`] handles.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9281235,"byte_end":9281317,"line_start":157,"line_end":157,"column_start":1,"column_end":83}},{"value":"/ Only the last value sent is made available to the [`Receiver`] half. All","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9281318,"byte_end":9281394,"line_start":158,"line_end":158,"column_start":1,"column_end":77}},{"value":"/ intermediate values are dropped.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9281395,"byte_end":9281431,"line_start":159,"line_end":159,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9281432,"byte_end":9281435,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9281436,"byte_end":9281450,"line_start":161,"line_end":161,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9281451,"byte_end":9281454,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9281455,"byte_end":9281462,"line_start":163,"line_end":163,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9281463,"byte_end":9281490,"line_start":164,"line_end":164,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9281491,"byte_end":9281494,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9281495,"byte_end":9281559,"line_start":166,"line_end":166,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9281560,"byte_end":9281611,"line_start":167,"line_end":167,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9281612,"byte_end":9281615,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9281616,"byte_end":9281649,"line_start":169,"line_end":169,"column_start":1,"column_end":34}},{"value":"/         while rx.changed().await.is_ok() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9281650,"byte_end":9281696,"line_start":170,"line_end":170,"column_start":1,"column_end":47}},{"value":"/             println!(\"received = {:?}\", *rx.borrow());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9281697,"byte_end":9281755,"line_start":171,"line_end":171,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9281756,"byte_end":9281769,"line_start":172,"line_end":172,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9281770,"byte_end":9281781,"line_start":173,"line_end":173,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9281782,"byte_end":9281785,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/     tx.send(\"world\")?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9281786,"byte_end":9281812,"line_start":175,"line_end":175,"column_start":1,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9281813,"byte_end":9281825,"line_start":176,"line_end":176,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9281826,"byte_end":9281833,"line_start":177,"line_end":177,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9281834,"byte_end":9281841,"line_start":178,"line_end":178,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9281842,"byte_end":9281845,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9281846,"byte_end":9281875,"line_start":180,"line_end":180,"column_start":1,"column_end":30}},{"value":"/ [`Receiver`]: struct@Receiver","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9281876,"byte_end":9281909,"line_start":181,"line_end":181,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":6127},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9282807,"byte_end":9282813,"line_start":215,"line_end":215,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Receiver<T>>::borrow","value":"pub fn borrow(&Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9282345,"byte_end":9282400,"line_start":201,"line_end":201,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9282405,"byte_end":9282408,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9282413,"byte_end":9282489,"line_start":203,"line_end":203,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9282494,"byte_end":9282570,"line_start":204,"line_end":204,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9282575,"byte_end":9282606,"line_start":205,"line_end":205,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9282611,"byte_end":9282614,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9282619,"byte_end":9282633,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9282638,"byte_end":9282641,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9282646,"byte_end":9282653,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9282658,"byte_end":9282685,"line_start":210,"line_end":210,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9282690,"byte_end":9282693,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let (_, rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9282698,"byte_end":9282740,"line_start":212,"line_end":212,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*rx.borrow(), \"hello\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9282745,"byte_end":9282783,"line_start":213,"line_end":213,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9282788,"byte_end":9282795,"line_start":214,"line_end":214,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6128},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9283739,"byte_end":9283746,"line_start":248,"line_end":248,"column_start":18,"column_end":25},"name":"changed","qualname":"<Receiver<T>>::changed","value":"pub async fn changed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for a change notification","sig":null,"attributes":[{"value":"/ Wait for a change notification","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9282925,"byte_end":9282959,"line_start":220,"line_end":220,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9282964,"byte_end":9282967,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Returns when a new value has been sent by the [`Sender`] since the last","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9282972,"byte_end":9283047,"line_start":222,"line_end":222,"column_start":5,"column_end":80}},{"value":"/ time `changed()` was called. When the `Sender` half is dropped, `Err` is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9283052,"byte_end":9283128,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9283133,"byte_end":9283146,"line_start":224,"line_end":224,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9283151,"byte_end":9283154,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9283159,"byte_end":9283188,"line_start":226,"line_end":226,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9283193,"byte_end":9283196,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9283201,"byte_end":9283215,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9283220,"byte_end":9283223,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9283228,"byte_end":9283235,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9283240,"byte_end":9283267,"line_start":231,"line_end":231,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9283272,"byte_end":9283275,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9283280,"byte_end":9283298,"line_start":233,"line_end":233,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9283303,"byte_end":9283324,"line_start":234,"line_end":234,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9283329,"byte_end":9283380,"line_start":235,"line_end":235,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9283385,"byte_end":9283388,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9283393,"byte_end":9283426,"line_start":237,"line_end":237,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"goodbye\").unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9283431,"byte_end":9283471,"line_start":238,"line_end":238,"column_start":5,"column_end":45}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9283476,"byte_end":9283487,"line_start":239,"line_end":239,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9283492,"byte_end":9283495,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.changed().await.is_ok());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9283500,"byte_end":9283544,"line_start":241,"line_end":241,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*rx.borrow(), \"goodbye\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9283549,"byte_end":9283593,"line_start":242,"line_end":242,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9283598,"byte_end":9283601,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/     // The `tx` handle has been dropped","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9283606,"byte_end":9283649,"line_start":244,"line_end":244,"column_start":5,"column_end":48}},{"value":"/     assert!(rx.changed().await.is_err());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9283654,"byte_end":9283699,"line_start":245,"line_end":245,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9283704,"byte_end":9283709,"line_start":246,"line_end":246,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9283714,"byte_end":9283721,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6141},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9285683,"byte_end":9285687,"line_start":313,"line_end":313,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(&Self, T) -> Result<(), error::SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a new value via the channel, notifying all receivers.\n","sig":null,"attributes":[{"value":"/ Sends a new value via the channel, notifying all receivers.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9285608,"byte_end":9285671,"line_start":312,"line_end":312,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6142},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9286714,"byte_end":9286720,"line_start":344,"line_end":344,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Sender<T>>::borrow","value":"pub fn borrow(&Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9286252,"byte_end":9286307,"line_start":330,"line_end":330,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9286312,"byte_end":9286315,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9286320,"byte_end":9286396,"line_start":332,"line_end":332,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9286401,"byte_end":9286477,"line_start":333,"line_end":333,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9286482,"byte_end":9286513,"line_start":334,"line_end":334,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9286518,"byte_end":9286521,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9286526,"byte_end":9286540,"line_start":336,"line_end":336,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9286545,"byte_end":9286548,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9286553,"byte_end":9286560,"line_start":338,"line_end":338,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9286565,"byte_end":9286592,"line_start":339,"line_end":339,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9286597,"byte_end":9286600,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ let (tx, _) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9286605,"byte_end":9286647,"line_start":341,"line_end":341,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*tx.borrow(), \"hello\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9286652,"byte_end":9286690,"line_start":342,"line_end":342,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9286695,"byte_end":9286702,"line_start":343,"line_end":343,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6143},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9287148,"byte_end":9287157,"line_start":361,"line_end":361,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when all receivers\n have dropped.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when all receivers","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9286832,"byte_end":9286906,"line_start":349,"line_end":349,"column_start":5,"column_end":79}},{"value":"/ have dropped.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9286911,"byte_end":9286928,"line_start":350,"line_end":350,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9286933,"byte_end":9286936,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9286941,"byte_end":9286955,"line_start":352,"line_end":352,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9286960,"byte_end":9286963,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9286968,"byte_end":9286975,"line_start":354,"line_end":354,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::watch::channel(());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9286980,"byte_end":9287031,"line_start":355,"line_end":355,"column_start":5,"column_end":56}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9287036,"byte_end":9287065,"line_start":356,"line_end":356,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9287070,"byte_end":9287073,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9287078,"byte_end":9287091,"line_start":358,"line_end":358,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9287096,"byte_end":9287124,"line_start":359,"line_end":359,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9287129,"byte_end":9287136,"line_start":360,"line_end":360,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6144},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9287901,"byte_end":9287907,"line_start":389,"line_end":389,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when all receivers have dropped.","sig":null,"attributes":[{"value":"/ Completes when all receivers have dropped.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9287238,"byte_end":9287284,"line_start":365,"line_end":365,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9287289,"byte_end":9287292,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ This allows the producer to get notified when interest in the produced","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9287297,"byte_end":9287371,"line_start":367,"line_end":367,"column_start":5,"column_end":79}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9287376,"byte_end":9287431,"line_start":368,"line_end":368,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9287436,"byte_end":9287439,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9287444,"byte_end":9287458,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9287463,"byte_end":9287466,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9287471,"byte_end":9287478,"line_start":372,"line_end":372,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9287483,"byte_end":9287510,"line_start":373,"line_end":373,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9287515,"byte_end":9287518,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9287523,"byte_end":9287541,"line_start":375,"line_end":375,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9287546,"byte_end":9287567,"line_start":376,"line_end":376,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9287572,"byte_end":9287619,"line_start":377,"line_end":377,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9287624,"byte_end":9287627,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9287632,"byte_end":9287665,"line_start":379,"line_end":379,"column_start":5,"column_end":38}},{"value":"/         // use `rx`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9287670,"byte_end":9287693,"line_start":380,"line_end":380,"column_start":5,"column_end":28}},{"value":"/         drop(rx);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9287698,"byte_end":9287719,"line_start":381,"line_end":381,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9287724,"byte_end":9287735,"line_start":382,"line_end":382,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9287740,"byte_end":9287743,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/     // Waits for `rx` to drop","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9287748,"byte_end":9287781,"line_start":384,"line_end":384,"column_start":5,"column_end":38}},{"value":"/     tx.closed().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9287786,"byte_end":9287812,"line_start":385,"line_end":385,"column_start":5,"column_end":31}},{"value":"/     println!(\"the `rx` handles dropped\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9287817,"byte_end":9287861,"line_start":386,"line_end":386,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9287866,"byte_end":9287871,"line_start":387,"line_end":387,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9287876,"byte_end":9287883,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":634},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","parent":null,"children":[{"krate":0,"index":6417},{"krate":0,"index":6418},{"krate":0,"index":6419},{"krate":0,"index":6420},{"krate":0,"index":6422},{"krate":0,"index":6423},{"krate":0,"index":6428},{"krate":0,"index":6589},{"krate":0,"index":6429},{"krate":0,"index":6435},{"krate":0,"index":6436},{"krate":0,"index":6516},{"krate":0,"index":6517},{"krate":0,"index":6518},{"krate":0,"index":6519},{"krate":0,"index":6580}],"decl_id":null,"docs":" Asynchronous green-threads.","sig":null,"attributes":[{"value":"/ Asynchronous green-threads.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":128806,"byte_end":128837,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":128838,"byte_end":128841,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## What are Tasks?","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":128842,"byte_end":128864,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":128865,"byte_end":128868,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ A _task_ is a light weight, non-blocking unit of execution. A task is similar","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":128869,"byte_end":128950,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/ to an OS thread, but rather than being managed by the OS scheduler, they are","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":128951,"byte_end":129031,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ managed by the [Tokio runtime][rt]. Another name for this general pattern is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129032,"byte_end":129112,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ [green threads]. If you are familiar with [Go's goroutines], [Kotlin's","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129113,"byte_end":129187,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ coroutines], or [Erlang's processes], you can think of Tokio's tasks as","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129188,"byte_end":129263,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ something similar.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129264,"byte_end":129286,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129287,"byte_end":129290,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Key points about tasks include:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129291,"byte_end":129326,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129327,"byte_end":129330,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **light weight**. Because tasks are scheduled by the Tokio","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129331,"byte_end":129405,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/   runtime rather than the operating system, creating new tasks or switching","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129406,"byte_end":129485,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/   between tasks does not require a context switch and has fairly low","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129486,"byte_end":129558,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/   overhead. Creating, running, and destroying large numbers of tasks is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129559,"byte_end":129634,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/   quite cheap, especially compared to OS threads.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129635,"byte_end":129688,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129689,"byte_end":129692,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * Tasks are scheduled **cooperatively**. Most operating systems implement","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129693,"byte_end":129770,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/   _preemptive multitasking_. This is a scheduling technique where the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129771,"byte_end":129844,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   operating system allows each thread to run for a period of time, and then","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129845,"byte_end":129924,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/   _preempts_ it, temporarily pausing that thread and switching to another.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":129925,"byte_end":130003,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/   Tasks, on the other hand, implement _cooperative multitasking_. In","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130004,"byte_end":130076,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/   cooperative multitasking, a task is allowed to run until it _yields_,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130077,"byte_end":130152,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/   indicating to the Tokio runtime's scheduler that it cannot currently","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130153,"byte_end":130227,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/   continue executing. When a task yields, the Tokio runtime switches to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130228,"byte_end":130303,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/   executing the next task.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130304,"byte_end":130334,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130335,"byte_end":130338,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **non-blocking**. Typically, when an OS thread performs I/O or","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130339,"byte_end":130417,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   must synchronize with another thread, it _blocks_, allowing the OS to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130418,"byte_end":130493,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/   schedule another thread. When a task cannot continue executing, it must","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130494,"byte_end":130571,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/   yield instead, allowing the Tokio runtime to schedule another task. Tasks","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130572,"byte_end":130651,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/   should generally not perform system calls or other operations that could","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130652,"byte_end":130730,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/   block a thread, as this would prevent other tasks running on the same","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130731,"byte_end":130806,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/   thread from executing as well. Instead, this module provides APIs for","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130807,"byte_end":130882,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/   running blocking operations in an asynchronous context.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130883,"byte_end":130944,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130945,"byte_end":130948,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [rt]: crate::runtime","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130949,"byte_end":130973,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ [green threads]: https://en.wikipedia.org/wiki/Green_threads","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":130974,"byte_end":131038,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ [Go's goroutines]: https://tour.golang.org/concurrency/1","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131039,"byte_end":131099,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"/ [Kotlin's coroutines]: https://kotlinlang.org/docs/reference/coroutines-overview.html","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131100,"byte_end":131189,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"/ [Erlang's processes]: http://erlang.org/doc/getting_started/conc_prog.html#processes","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131190,"byte_end":131278,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131279,"byte_end":131282,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Working with Tasks","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131283,"byte_end":131308,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131309,"byte_end":131312,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This module provides the following APIs for working with tasks:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131313,"byte_end":131380,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131381,"byte_end":131384,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Spawning","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131385,"byte_end":131401,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131402,"byte_end":131405,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Perhaps the most important function in this module is [`task::spawn`]. This","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131406,"byte_end":131485,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ function can be thought of as an async equivalent to the standard library's","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131486,"byte_end":131565,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ [`thread::spawn`][`std::thread::spawn`]. It takes an `async` block or other","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131566,"byte_end":131645,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ [future], and creates a new task to run that work concurrently:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131646,"byte_end":131713,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131714,"byte_end":131717,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131718,"byte_end":131725,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131726,"byte_end":131746,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131747,"byte_end":131750,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # async fn doc() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131751,"byte_end":131773,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"/ task::spawn(async {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131774,"byte_end":131797,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"/     // perform some work here...","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131798,"byte_end":131834,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131835,"byte_end":131842,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131843,"byte_end":131850,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131851,"byte_end":131858,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131859,"byte_end":131862,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Like [`std::thread::spawn`], `task::spawn` returns a [`JoinHandle`] struct.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131863,"byte_end":131942,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ A `JoinHandle` is itself a future which may be used to await the output of","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":131943,"byte_end":132021,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ the spawned task. For example:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132022,"byte_end":132056,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132057,"byte_end":132060,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132061,"byte_end":132068,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132069,"byte_end":132089,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132090,"byte_end":132093,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132094,"byte_end":132174,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132175,"byte_end":132209,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132210,"byte_end":132224,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"/     \"hello world!\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132225,"byte_end":132247,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/ });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132248,"byte_end":132255,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132256,"byte_end":132259,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ // ...","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132260,"byte_end":132270,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132271,"byte_end":132274,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // Await the result of the spawned task.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132275,"byte_end":132319,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/ let result = join.await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132320,"byte_end":132349,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"hello world!\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132350,"byte_end":132389,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132390,"byte_end":132402,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132403,"byte_end":132410,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132411,"byte_end":132418,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132419,"byte_end":132422,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Again, like `std::thread`'s [`JoinHandle` type][thread_join], if the spawned","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132423,"byte_end":132503,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"/ task panics, awaiting its `JoinHandle` will return a [`JoinError`]`. For","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132504,"byte_end":132580,"line_start":89,"line_end":89,"column_start":1,"column_end":77}},{"value":"/ example:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132581,"byte_end":132593,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132594,"byte_end":132597,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132598,"byte_end":132605,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132606,"byte_end":132626,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132627,"byte_end":132630,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132631,"byte_end":132669,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132670,"byte_end":132704,"line_start":96,"line_end":96,"column_start":1,"column_end":35}},{"value":"/     panic!(\"something bad happened!\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132705,"byte_end":132746,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132747,"byte_end":132754,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132755,"byte_end":132758,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // The returned result indicates that the task failed.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132759,"byte_end":132817,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"/ assert!(join.await.is_err());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132818,"byte_end":132851,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132852,"byte_end":132859,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132860,"byte_end":132867,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132868,"byte_end":132871,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ `spawn`, `JoinHandle`, and `JoinError` are present when the \"rt\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132872,"byte_end":132940,"line_start":105,"line_end":105,"column_start":1,"column_end":69}},{"value":"/ feature flag is enabled.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132941,"byte_end":132969,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132970,"byte_end":132973,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn`]: crate::task::spawn()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":132974,"byte_end":133015,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ [future]: std::future::Future","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133016,"byte_end":133049,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ [`std::thread::spawn`]: std::thread::spawn","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133050,"byte_end":133096,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133097,"byte_end":133140,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ [thread_join]: std::thread::JoinHandle","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133141,"byte_end":133183,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/ [`JoinError`]: crate::task::JoinError","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133184,"byte_end":133225,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133226,"byte_end":133229,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ### Blocking and Yielding","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133230,"byte_end":133259,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133260,"byte_end":133263,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ As we discussed above, code running in asynchronous tasks should not perform","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133264,"byte_end":133344,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"/ operations that can block. A blocking operation performed in a task running","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133345,"byte_end":133424,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"/ on a thread that is also running other tasks would block the entire thread,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133425,"byte_end":133504,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/ preventing other tasks from running.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133505,"byte_end":133545,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133546,"byte_end":133549,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Instead, Tokio provides two APIs for running blocking operations in an","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133550,"byte_end":133624,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"/ asynchronous context: [`task::spawn_blocking`] and [`task::block_in_place`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133625,"byte_end":133705,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133706,"byte_end":133709,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ #### spawn_blocking","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133710,"byte_end":133733,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133734,"byte_end":133737,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ The `task::spawn_blocking` function is similar to the `task::spawn` function","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133738,"byte_end":133818,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/ discussed in the previous section, but rather than spawning an","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133819,"byte_end":133885,"line_start":128,"line_end":128,"column_start":1,"column_end":67}},{"value":"/ _non-blocking_ future on the Tokio runtime, it instead spawns a","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133886,"byte_end":133953,"line_start":129,"line_end":129,"column_start":1,"column_end":68}},{"value":"/ _blocking_ function on a dedicated thread pool for blocking tasks. For","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":133954,"byte_end":134028,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"/ example:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134029,"byte_end":134041,"line_start":131,"line_end":131,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134042,"byte_end":134045,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134046,"byte_end":134053,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134054,"byte_end":134074,"line_start":134,"line_end":134,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134075,"byte_end":134078,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134079,"byte_end":134102,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"/ task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134103,"byte_end":134132,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134133,"byte_end":134195,"line_start":138,"line_end":138,"column_start":1,"column_end":63}},{"value":"/ });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134196,"byte_end":134203,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134204,"byte_end":134211,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134212,"byte_end":134219,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134220,"byte_end":134223,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Just like `task::spawn`, `task::spawn_blocking` returns a `JoinHandle`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134224,"byte_end":134298,"line_start":143,"line_end":143,"column_start":1,"column_end":75}},{"value":"/ which we can use to await the result of the blocking operation:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134299,"byte_end":134366,"line_start":144,"line_end":144,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134367,"byte_end":134370,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134371,"byte_end":134382,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"/ # use tokio::task;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134383,"byte_end":134405,"line_start":147,"line_end":147,"column_start":1,"column_end":23}},{"value":"/ # async fn docs() -> Result<(), Box<dyn std::error::Error>>{","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134406,"byte_end":134470,"line_start":148,"line_end":148,"column_start":1,"column_end":65}},{"value":"/ let join = task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134471,"byte_end":134511,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134512,"byte_end":134574,"line_start":150,"line_end":150,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134575,"byte_end":134603,"line_start":151,"line_end":151,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134604,"byte_end":134611,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134612,"byte_end":134615,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ let result = join.await?;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134616,"byte_end":134645,"line_start":154,"line_end":154,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134646,"byte_end":134691,"line_start":155,"line_end":155,"column_start":1,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134692,"byte_end":134704,"line_start":156,"line_end":156,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134705,"byte_end":134712,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134713,"byte_end":134720,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134721,"byte_end":134724,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ #### block_in_place","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134725,"byte_end":134748,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134749,"byte_end":134752,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ When using the [multi-threaded runtime][rt-multi-thread], the [`task::block_in_place`]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134753,"byte_end":134843,"line_start":162,"line_end":162,"column_start":1,"column_end":91}},{"value":"/ function is also available. Like `task::spawn_blocking`, this function","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134844,"byte_end":134918,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"/ allows running a blocking operation from an asynchronous context. Unlike","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134919,"byte_end":134995,"line_start":164,"line_end":164,"column_start":1,"column_end":77}},{"value":"/ `spawn_blocking`, however, `block_in_place` works by transitioning the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":134996,"byte_end":135070,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"/ _current_ worker thread to a blocking thread, moving other tasks running on","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135071,"byte_end":135150,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"/ that thread to another worker thread. This can improve performance by avoiding","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135151,"byte_end":135233,"line_start":167,"line_end":167,"column_start":1,"column_end":83}},{"value":"/ context switches.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135234,"byte_end":135255,"line_start":168,"line_end":168,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135256,"byte_end":135259,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135260,"byte_end":135276,"line_start":170,"line_end":170,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135277,"byte_end":135280,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135281,"byte_end":135288,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135289,"byte_end":135309,"line_start":173,"line_end":173,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135310,"byte_end":135313,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135314,"byte_end":135337,"line_start":175,"line_end":175,"column_start":1,"column_end":24}},{"value":"/ let result = task::block_in_place(|| {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135338,"byte_end":135380,"line_start":176,"line_end":176,"column_start":1,"column_end":43}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135381,"byte_end":135443,"line_start":177,"line_end":177,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135444,"byte_end":135472,"line_start":178,"line_end":178,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135473,"byte_end":135480,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135481,"byte_end":135484,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135485,"byte_end":135530,"line_start":181,"line_end":181,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135531,"byte_end":135538,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135539,"byte_end":135546,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135547,"byte_end":135550,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ #### yield_now","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135551,"byte_end":135569,"line_start":185,"line_end":185,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135570,"byte_end":135573,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ In addition, this module provides a [`task::yield_now`] async function","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135574,"byte_end":135648,"line_start":187,"line_end":187,"column_start":1,"column_end":75}},{"value":"/ that is analogous to the standard library's [`thread::yield_now`]. Calling","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135649,"byte_end":135727,"line_start":188,"line_end":188,"column_start":1,"column_end":79}},{"value":"/ and `await`ing this function will cause the current task to yield to the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135728,"byte_end":135804,"line_start":189,"line_end":189,"column_start":1,"column_end":77}},{"value":"/ Tokio runtime's scheduler, allowing other tasks to be","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135805,"byte_end":135862,"line_start":190,"line_end":190,"column_start":1,"column_end":58}},{"value":"/ scheduled. Eventually, the yielding task will be polled again, allowing it","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135863,"byte_end":135941,"line_start":191,"line_end":191,"column_start":1,"column_end":79}},{"value":"/ to execute. For example:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135942,"byte_end":135970,"line_start":192,"line_end":192,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135971,"byte_end":135974,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135975,"byte_end":135986,"line_start":194,"line_end":194,"column_start":1,"column_end":12}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":135987,"byte_end":136007,"line_start":195,"line_end":195,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136008,"byte_end":136011,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136012,"byte_end":136050,"line_start":197,"line_end":197,"column_start":1,"column_end":39}},{"value":"/ async {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136051,"byte_end":136062,"line_start":198,"line_end":198,"column_start":1,"column_end":12}},{"value":"/     task::spawn(async {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136063,"byte_end":136090,"line_start":199,"line_end":199,"column_start":1,"column_end":28}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136091,"byte_end":136109,"line_start":200,"line_end":200,"column_start":1,"column_end":19}},{"value":"/         println!(\"spawned task done!\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136110,"byte_end":136152,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136153,"byte_end":136164,"line_start":202,"line_end":202,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136165,"byte_end":136168,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/     // Yield, allowing the newly-spawned task to execute first.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136169,"byte_end":136236,"line_start":204,"line_end":204,"column_start":1,"column_end":68}},{"value":"/     task::yield_now().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136237,"byte_end":136269,"line_start":205,"line_end":205,"column_start":1,"column_end":33}},{"value":"/     println!(\"main task done!\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136270,"byte_end":136306,"line_start":206,"line_end":206,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136307,"byte_end":136312,"line_start":207,"line_end":207,"column_start":1,"column_end":6}},{"value":"/ # .await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136313,"byte_end":136326,"line_start":208,"line_end":208,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136327,"byte_end":136334,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136335,"byte_end":136342,"line_start":210,"line_end":210,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136343,"byte_end":136346,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136347,"byte_end":136404,"line_start":212,"line_end":212,"column_start":1,"column_end":58}},{"value":"/ [`task::block_in_place`]: crate::task::block_in_place","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136405,"byte_end":136462,"line_start":213,"line_end":213,"column_start":1,"column_end":58}},{"value":"/ [rt-multi-thread]: ../runtime/index.html#threaded-scheduler","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136463,"byte_end":136526,"line_start":214,"line_end":214,"column_start":1,"column_end":64}},{"value":"/ [`task::yield_now`]: crate::task::yield_now()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136527,"byte_end":136576,"line_start":215,"line_end":215,"column_start":1,"column_end":50}},{"value":"/ [`thread::yield_now`]: std::thread::yield_now","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\mod.rs","byte_start":136577,"byte_end":136626,"line_start":216,"line_end":216,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":6581},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\blocking.rs","byte_start":9292643,"byte_end":9292657,"line_start":46,"line_end":46,"column_start":12,"column_end":26},"name":"block_in_place","qualname":"::task::blocking::block_in_place","value":"pub fn block_in_place<F, R>(F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided blocking function on the current thread without\n blocking the executor.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-multi-thread\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23697,"byte_end":23732,"line_start":279,"line_end":279,"column_start":13,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":6584},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\blocking.rs","byte_start":9295591,"byte_end":9295605,"line_start":109,"line_end":109,"column_start":12,"column_end":26},"name":"spawn_blocking","qualname":"::task::blocking::spawn_blocking","value":"pub fn spawn_blocking<F, R>(F) -> JoinHandle<R> where F: FnOnce() -> R +\nSend + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided closure on a thread where blocking is acceptable.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23385,"byte_end":23407,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"track_caller","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\blocking.rs","byte_start":9295565,"byte_end":9295577,"line_start":108,"line_end":108,"column_start":36,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":6587},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\spawn.rs","byte_start":9299492,"byte_end":9299497,"line_start":127,"line_end":127,"column_start":12,"column_end":17},"name":"spawn","qualname":"::task::spawn::spawn","value":"pub fn spawn<T>(T) -> JoinHandle<T::Output> where T: Future + Send + 'static,\nT::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new asynchronous task, returning a\n [`JoinHandle`](super::JoinHandle) for it.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23385,"byte_end":23407,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"track_caller","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\spawn.rs","byte_start":9299466,"byte_end":9299478,"line_start":126,"line_end":126,"column_start":36,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":6590},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\yield_now.rs","byte_start":9300471,"byte_end":9300480,"line_start":16,"line_end":16,"column_start":18,"column_end":27},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"pub async fn yield_now() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Yields execution back to the Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23385,"byte_end":23407,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"must_use = \"yield_now does nothing unless polled/`await`-ed\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\yield_now.rs","byte_start":9300390,"byte_end":9300453,"line_start":15,"line_end":15,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6598},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9308586,"byte_end":9308594,"line_start":213,"line_end":213,"column_start":16,"column_end":24},"name":"LocalSet","qualname":"::task::local::LocalSet","value":"LocalSet {  }","parent":null,"children":[{"krate":0,"index":6599},{"krate":0,"index":6600},{"krate":0,"index":6601}],"decl_id":null,"docs":" A set of tasks which are executed on the same thread.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23385,"byte_end":23407,"line_start":263,"line_end":263,"column_start":13,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":6607},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9310688,"byte_end":9310699,"line_start":295,"line_end":295,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"::task::local::spawn_local","value":"pub fn spawn_local<F>(F) -> JoinHandle<F::Output> where F: Future + 'static,\nF::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` future on the local task set.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":23385,"byte_end":23407,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"track_caller","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9310662,"byte_end":9310674,"line_start":294,"line_end":294,"column_start":36,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":6471},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9311596,"byte_end":9311599,"line_start":325,"line_end":325,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalSet>::new","value":"pub fn new() -> LocalSet","parent":null,"children":[],"decl_id":null,"docs":" Returns a new local task set.\n","sig":null,"attributes":[{"value":"/ Returns a new local task set.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9311551,"byte_end":9311584,"line_start":324,"line_end":324,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6472},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9313354,"byte_end":9313365,"line_start":379,"line_end":379,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"<LocalSet>::spawn_local","value":"pub fn spawn_local<F>(&Self, F) -> JoinHandle<F::Output> where F: Future +\n'static, F::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` task onto the local task set.","sig":null,"attributes":[{"value":"/ Spawns a `!Send` task onto the local task set.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9312141,"byte_end":9312191,"line_start":342,"line_end":342,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9312196,"byte_end":9312199,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ This task is guaranteed to be run on the current thread.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9312204,"byte_end":9312264,"line_start":344,"line_end":344,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9312269,"byte_end":9312272,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ Unlike the free function [`spawn_local`], this method may be used to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9312277,"byte_end":9312349,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/ spawn local tasks when the task set is _not_ running. For example:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9312354,"byte_end":9312424,"line_start":347,"line_end":347,"column_start":5,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9312429,"byte_end":9312440,"line_start":348,"line_end":348,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9312445,"byte_end":9312465,"line_start":349,"line_end":349,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9312470,"byte_end":9312473,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9312478,"byte_end":9312496,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9312501,"byte_end":9312522,"line_start":352,"line_end":352,"column_start":5,"column_end":26}},{"value":"/     let local = task::LocalSet::new();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9312527,"byte_end":9312569,"line_start":353,"line_end":353,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9312574,"byte_end":9312577,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/     // Spawn a future on the local set. This future will be run when","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9312582,"byte_end":9312654,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/     // we call `run_until` to drive the task set.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9312659,"byte_end":9312712,"line_start":356,"line_end":356,"column_start":5,"column_end":58}},{"value":"/     local.spawn_local(async {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9312717,"byte_end":9312750,"line_start":357,"line_end":357,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9312755,"byte_end":9312772,"line_start":358,"line_end":358,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9312777,"byte_end":9312788,"line_start":359,"line_end":359,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9312793,"byte_end":9312796,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/     // Run the local task set.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9312801,"byte_end":9312835,"line_start":361,"line_end":361,"column_start":5,"column_end":39}},{"value":"/     local.run_until(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9312840,"byte_end":9312876,"line_start":362,"line_end":362,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9312881,"byte_end":9312899,"line_start":363,"line_end":363,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9312904,"byte_end":9312921,"line_start":364,"line_end":364,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9312926,"byte_end":9312929,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/     // When `run` finishes, we can spawn _more_ futures, which will","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9312934,"byte_end":9313005,"line_start":366,"line_end":366,"column_start":5,"column_end":76}},{"value":"/     // run in subsequent calls to `run_until`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9313010,"byte_end":9313060,"line_start":367,"line_end":367,"column_start":5,"column_end":55}},{"value":"/     local.spawn_local(async {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9313065,"byte_end":9313098,"line_start":368,"line_end":368,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9313103,"byte_end":9313120,"line_start":369,"line_end":369,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9313125,"byte_end":9313136,"line_start":370,"line_end":370,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9313141,"byte_end":9313144,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/     local.run_until(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9313149,"byte_end":9313185,"line_start":372,"line_end":372,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9313190,"byte_end":9313208,"line_start":373,"line_end":373,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9313213,"byte_end":9313230,"line_start":374,"line_end":374,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9313235,"byte_end":9313240,"line_start":375,"line_end":375,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9313245,"byte_end":9313252,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9313257,"byte_end":9313292,"line_start":377,"line_end":377,"column_start":5,"column_end":40}},{"value":"track_caller","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9313328,"byte_end":9313340,"line_start":378,"line_end":378,"column_start":36,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":6474},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9316205,"byte_end":9316213,"line_start":455,"line_end":455,"column_start":12,"column_end":20},"name":"block_on","qualname":"<LocalSet>::block_on","value":"pub fn block_on<F>(&Self, &crate::runtime::Runtime, F) -> F::Output where\nF: Future","parent":null,"children":[],"decl_id":null,"docs":" Runs a future to completion on the provided runtime, driving any local\n futures spawned on this task set on the current thread.","sig":null,"attributes":[{"value":"/ Runs a future to completion on the provided runtime, driving any local","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9313750,"byte_end":9313824,"line_start":391,"line_end":391,"column_start":5,"column_end":79}},{"value":"/ futures spawned on this task set on the current thread.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9313829,"byte_end":9313888,"line_start":392,"line_end":392,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9313893,"byte_end":9313896,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9313901,"byte_end":9313968,"line_start":394,"line_end":394,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9313973,"byte_end":9314046,"line_start":395,"line_end":395,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime. The future","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9314051,"byte_end":9314127,"line_start":396,"line_end":396,"column_start":5,"column_end":81}},{"value":"/ may also call [`spawn_local`] to spawn_local additional local futures on the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9314132,"byte_end":9314212,"line_start":397,"line_end":397,"column_start":5,"column_end":85}},{"value":"/ current thread.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9314217,"byte_end":9314236,"line_start":398,"line_end":398,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9314241,"byte_end":9314244,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ This method should not be called from an asynchronous context.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9314249,"byte_end":9314315,"line_start":400,"line_end":400,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9314320,"byte_end":9314323,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9314328,"byte_end":9314340,"line_start":402,"line_end":402,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9314345,"byte_end":9314348,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ This function panics if the executor is at capacity, if the provided","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9314353,"byte_end":9314425,"line_start":404,"line_end":404,"column_start":5,"column_end":77}},{"value":"/ future panics, or if called within an asynchronous execution context.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9314430,"byte_end":9314503,"line_start":405,"line_end":405,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9314508,"byte_end":9314511,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9314516,"byte_end":9314527,"line_start":407,"line_end":407,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9314532,"byte_end":9314535,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Since this function internally calls [`Runtime::block_on`], and drives","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9314540,"byte_end":9314614,"line_start":409,"line_end":409,"column_start":5,"column_end":79}},{"value":"/ futures in the local task set inside that call to `block_on`, the local","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9314619,"byte_end":9314694,"line_start":410,"line_end":410,"column_start":5,"column_end":80}},{"value":"/ futures may not use [in-place blocking]. If a blocking call needs to be","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9314699,"byte_end":9314774,"line_start":411,"line_end":411,"column_start":5,"column_end":80}},{"value":"/ issued from a local task, the [`spawn_blocking`] API may be used instead.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9314779,"byte_end":9314856,"line_start":412,"line_end":412,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9314861,"byte_end":9314864,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ For example, this will panic:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9314869,"byte_end":9314902,"line_start":414,"line_end":414,"column_start":5,"column_end":38}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9314907,"byte_end":9314926,"line_start":415,"line_end":415,"column_start":5,"column_end":24}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9314931,"byte_end":9314963,"line_start":416,"line_end":416,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9314968,"byte_end":9314988,"line_start":417,"line_end":417,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9314993,"byte_end":9314996,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ let rt  = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9315001,"byte_end":9315039,"line_start":419,"line_end":419,"column_start":5,"column_end":43}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9315044,"byte_end":9315082,"line_start":420,"line_end":420,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&rt, async {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9315087,"byte_end":9315118,"line_start":421,"line_end":421,"column_start":5,"column_end":36}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9315123,"byte_end":9315167,"line_start":422,"line_end":422,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::block_in_place(|| {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9315172,"byte_end":9315231,"line_start":423,"line_end":423,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9315236,"byte_end":9315258,"line_start":424,"line_end":424,"column_start":5,"column_end":27}},{"value":"/         });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9315263,"byte_end":9315278,"line_start":425,"line_end":425,"column_start":5,"column_end":20}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9315283,"byte_end":9315301,"line_start":426,"line_end":426,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9315306,"byte_end":9315317,"line_start":427,"line_end":427,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9315322,"byte_end":9315350,"line_start":428,"line_end":428,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9315355,"byte_end":9315361,"line_start":429,"line_end":429,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9315366,"byte_end":9315373,"line_start":430,"line_end":430,"column_start":5,"column_end":12}},{"value":"/ This, however, will not panic:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9315378,"byte_end":9315412,"line_start":431,"line_end":431,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9315417,"byte_end":9315424,"line_start":432,"line_end":432,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9315429,"byte_end":9315461,"line_start":433,"line_end":433,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9315466,"byte_end":9315486,"line_start":434,"line_end":434,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9315491,"byte_end":9315494,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ let rt  = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9315499,"byte_end":9315537,"line_start":436,"line_end":436,"column_start":5,"column_end":43}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9315542,"byte_end":9315580,"line_start":437,"line_end":437,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&rt, async {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9315585,"byte_end":9315616,"line_start":438,"line_end":438,"column_start":5,"column_end":36}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9315621,"byte_end":9315665,"line_start":439,"line_end":439,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9315670,"byte_end":9315729,"line_start":440,"line_end":440,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9315734,"byte_end":9315756,"line_start":441,"line_end":441,"column_start":5,"column_end":27}},{"value":"/         }).await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9315761,"byte_end":9315782,"line_start":442,"line_end":442,"column_start":5,"column_end":26}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9315787,"byte_end":9315805,"line_start":443,"line_end":443,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9315810,"byte_end":9315821,"line_start":444,"line_end":444,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9315826,"byte_end":9315854,"line_start":445,"line_end":445,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9315859,"byte_end":9315865,"line_start":446,"line_end":446,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9315870,"byte_end":9315877,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9315882,"byte_end":9315885,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9315890,"byte_end":9315925,"line_start":449,"line_end":449,"column_start":5,"column_end":40}},{"value":"/ [`Runtime::block_on`]: method@crate::runtime::Runtime::block_on","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9315930,"byte_end":9315997,"line_start":450,"line_end":450,"column_start":5,"column_end":72}},{"value":"/ [in-place blocking]: fn@crate::task::block_in_place","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9316002,"byte_end":9316057,"line_start":451,"line_end":451,"column_start":5,"column_end":60}},{"value":"/ [`spawn_blocking`]: fn@crate::task::spawn_blocking","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9316062,"byte_end":9316116,"line_start":452,"line_end":452,"column_start":5,"column_end":59}},{"value":"cfg(feature = \"rt\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9316121,"byte_end":9316143,"line_start":453,"line_end":453,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":6476},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9317460,"byte_end":9317469,"line_start":490,"line_end":490,"column_start":18,"column_end":27},"name":"run_until","qualname":"<LocalSet>::run_until","value":"pub async fn run_until<F, '_>(&'_ Self, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the local set, returning its output.","sig":null,"attributes":[{"value":"/ Run a future to completion on the local set, returning its output.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9316368,"byte_end":9316438,"line_start":462,"line_end":462,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9316443,"byte_end":9316446,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ This returns a future that runs the given future with a local set,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9316451,"byte_end":9316521,"line_start":464,"line_end":464,"column_start":5,"column_end":75}},{"value":"/ allowing it to call [`spawn_local`] to spawn additional `!Send` futures.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9316526,"byte_end":9316602,"line_start":465,"line_end":465,"column_start":5,"column_end":81}},{"value":"/ Any local futures spawned on the local set will be driven in the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9316607,"byte_end":9316675,"line_start":466,"line_end":466,"column_start":5,"column_end":73}},{"value":"/ background until the future passed to `run_until` completes. When the future","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9316680,"byte_end":9316760,"line_start":467,"line_end":467,"column_start":5,"column_end":85}},{"value":"/ passed to `run` finishes, any local futures which have not completed","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9316765,"byte_end":9316837,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ will remain on the local set, and will be driven on subsequent calls to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9316842,"byte_end":9316917,"line_start":469,"line_end":469,"column_start":5,"column_end":80}},{"value":"/ `run_until` or when [awaiting the local set] itself.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9316922,"byte_end":9316978,"line_start":470,"line_end":470,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9316983,"byte_end":9316986,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9316991,"byte_end":9317005,"line_start":472,"line_end":472,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9317010,"byte_end":9317013,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9317018,"byte_end":9317029,"line_start":474,"line_end":474,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9317034,"byte_end":9317054,"line_start":475,"line_end":475,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9317059,"byte_end":9317062,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9317067,"byte_end":9317085,"line_start":477,"line_end":477,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9317090,"byte_end":9317111,"line_start":478,"line_end":478,"column_start":5,"column_end":26}},{"value":"/     task::LocalSet::new().run_until(async {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9317116,"byte_end":9317163,"line_start":479,"line_end":479,"column_start":5,"column_end":52}},{"value":"/         task::spawn_local(async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9317168,"byte_end":9317210,"line_start":480,"line_end":480,"column_start":5,"column_end":47}},{"value":"/             // ...","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9317215,"byte_end":9317237,"line_start":481,"line_end":481,"column_start":5,"column_end":27}},{"value":"/         }).await.unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9317242,"byte_end":9317272,"line_start":482,"line_end":482,"column_start":5,"column_end":35}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9317277,"byte_end":9317295,"line_start":483,"line_end":483,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9317300,"byte_end":9317317,"line_start":484,"line_end":484,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9317322,"byte_end":9317327,"line_start":485,"line_end":485,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9317332,"byte_end":9317339,"line_start":486,"line_end":486,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9317344,"byte_end":9317347,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9317352,"byte_end":9317387,"line_start":488,"line_end":488,"column_start":5,"column_end":40}},{"value":"/ [awaiting the local set]: #awaiting-a-localset","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9317392,"byte_end":9317442,"line_start":489,"line_end":489,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":6533},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9326478,"byte_end":9326486,"line_start":95,"line_end":95,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task::task_local::LocalKey","value":"LocalKey { inner }","parent":null,"children":[{"krate":0,"index":6535}],"decl_id":null,"docs":" A key for task-local data.","sig":null,"attributes":[{"value":"/ A key for task-local data.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9325599,"byte_end":9325629,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9325630,"byte_end":9325633,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ This type is generated by the `task_local!` macro.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9325634,"byte_end":9325688,"line_start":65,"line_end":65,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9325689,"byte_end":9325692,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Unlike [`std::thread::LocalKey`], `tokio::task::LocalKey` will","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9325693,"byte_end":9325759,"line_start":67,"line_end":67,"column_start":1,"column_end":67}},{"value":"/ _not_ lazily initialize the value on first access. Instead, the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9325760,"byte_end":9325827,"line_start":68,"line_end":68,"column_start":1,"column_end":68}},{"value":"/ value is first initialized when the future containing","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9325828,"byte_end":9325885,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"/ the task-local is first polled by a futures executor, like Tokio.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9325886,"byte_end":9325955,"line_start":70,"line_end":70,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9325956,"byte_end":9325959,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9325960,"byte_end":9325974,"line_start":72,"line_end":72,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9325975,"byte_end":9325978,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9325979,"byte_end":9325986,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9325987,"byte_end":9326009,"line_start":75,"line_end":75,"column_start":1,"column_end":23}},{"value":"/ tokio::task_local! {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9326010,"byte_end":9326034,"line_start":76,"line_end":76,"column_start":1,"column_end":25}},{"value":"/     static NUMBER: u32;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9326035,"byte_end":9326062,"line_start":77,"line_end":77,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9326063,"byte_end":9326068,"line_start":78,"line_end":78,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9326069,"byte_end":9326072,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9326073,"byte_end":9326105,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 1);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9326106,"byte_end":9326142,"line_start":81,"line_end":81,"column_start":1,"column_end":37}},{"value":"/ }).await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9326143,"byte_end":9326156,"line_start":82,"line_end":82,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9326157,"byte_end":9326160,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(2, async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9326161,"byte_end":9326193,"line_start":84,"line_end":84,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 2);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9326194,"byte_end":9326230,"line_start":85,"line_end":85,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9326231,"byte_end":9326234,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     NUMBER.scope(3, async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9326235,"byte_end":9326271,"line_start":87,"line_end":87,"column_start":1,"column_end":37}},{"value":"/         assert_eq!(NUMBER.get(), 3);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9326272,"byte_end":9326312,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/     }).await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9326313,"byte_end":9326330,"line_start":89,"line_end":89,"column_start":1,"column_end":18}},{"value":"/ }).await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9326331,"byte_end":9326344,"line_start":90,"line_end":90,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9326345,"byte_end":9326352,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9326353,"byte_end":9326360,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ [`std::thread::LocalKey`]: struct@std::thread::LocalKey","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9326361,"byte_end":9326420,"line_start":93,"line_end":93,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":6535},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9326528,"byte_end":9326533,"line_start":97,"line_end":97,"column_start":9,"column_end":14},"name":"inner","qualname":"::task::task_local::LocalKey::inner","value":"std::thread::LocalKey<std::cell::RefCell<std::option::Option<T>>>","parent":{"krate":0,"index":6533},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6538},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9327061,"byte_end":9327066,"line_start":118,"line_end":118,"column_start":18,"column_end":23},"name":"scope","qualname":"<LocalKey<T>>::scope","value":"pub async fn scope<F>(&'static Self, T, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Sets a value `T` as the task-local value for the future `F`.","sig":null,"attributes":[{"value":"/ Sets a value `T` as the task-local value for the future `F`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9326611,"byte_end":9326675,"line_start":101,"line_end":101,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9326680,"byte_end":9326683,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ On completion of `scope`, the task-local will be dropped.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9326688,"byte_end":9326749,"line_start":103,"line_end":103,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9326754,"byte_end":9326757,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ### Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9326762,"byte_end":9326778,"line_start":105,"line_end":105,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9326783,"byte_end":9326786,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9326791,"byte_end":9326798,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9326803,"byte_end":9326825,"line_start":108,"line_end":108,"column_start":5,"column_end":27}},{"value":"/ tokio::task_local! {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9326830,"byte_end":9326854,"line_start":109,"line_end":109,"column_start":5,"column_end":29}},{"value":"/     static NUMBER: u32;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9326859,"byte_end":9326886,"line_start":110,"line_end":110,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9326891,"byte_end":9326896,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9326901,"byte_end":9326904,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9326909,"byte_end":9326941,"line_start":113,"line_end":113,"column_start":5,"column_end":37}},{"value":"/     println!(\"task local value: {}\", NUMBER.get());","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9326946,"byte_end":9327001,"line_start":114,"line_end":114,"column_start":5,"column_end":60}},{"value":"/ }).await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9327006,"byte_end":9327019,"line_start":115,"line_end":115,"column_start":5,"column_end":18}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9327024,"byte_end":9327031,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9327036,"byte_end":9327043,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6542},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9327540,"byte_end":9327544,"line_start":136,"line_end":136,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"pub fn with<F, R>(&'static Self, F) -> R where F: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9327291,"byte_end":9327357,"line_start":130,"line_end":130,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9327362,"byte_end":9327365,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9327370,"byte_end":9327382,"line_start":132,"line_end":132,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9327387,"byte_end":9327390,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9327395,"byte_end":9327456,"line_start":134,"line_end":134,"column_start":5,"column_end":66}},{"value":"/ of a future containing a task-local with the corresponding key.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9327461,"byte_end":9327528,"line_start":135,"line_end":135,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":6545},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9328032,"byte_end":9328040,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"pub fn try_with<F, R>(&'static Self, F) -> Result<R, AccessError> where\nF: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9327785,"byte_end":9327851,"line_start":146,"line_end":146,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9327856,"byte_end":9327859,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ If the task-local with the accociated key is not present, this","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9327864,"byte_end":9327930,"line_start":148,"line_end":148,"column_start":5,"column_end":71}},{"value":"/ method will return an `AccessError`. For a panicking variant,","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9327935,"byte_end":9328000,"line_start":149,"line_end":149,"column_start":5,"column_end":70}},{"value":"/ see `with`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9328005,"byte_end":9328020,"line_start":150,"line_end":150,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6551},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9328500,"byte_end":9328503,"line_start":168,"line_end":168,"column_start":12,"column_end":15},"name":"get","qualname":"<LocalKey<T>>::get","value":"pub fn get(&'static Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the task-local value\n if the task-local value implements `Copy`.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the task-local value","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9328395,"byte_end":9328437,"line_start":166,"line_end":166,"column_start":5,"column_end":47}},{"value":"/ if the task-local value implements `Copy`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9328442,"byte_end":9328488,"line_start":167,"line_end":167,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":6610},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9329992,"byte_end":9330003,"line_start":226,"line_end":226,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::task::task_local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":6611}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).\n","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9329867,"byte_end":9329942,"line_start":224,"line_end":224,"column_start":1,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":6623},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","parent":null,"children":[{"krate":0,"index":6624},{"krate":0,"index":6625},{"krate":0,"index":6626},{"krate":0,"index":6878},{"krate":0,"index":6879},{"krate":0,"index":6880},{"krate":0,"index":6881},{"krate":0,"index":6882},{"krate":0,"index":6906},{"krate":0,"index":6942},{"krate":0,"index":6943},{"krate":0,"index":6963},{"krate":0,"index":6964},{"krate":0,"index":6965},{"krate":0,"index":6966},{"krate":0,"index":6967},{"krate":0,"index":6994},{"krate":0,"index":6995},{"krate":0,"index":6996},{"krate":0,"index":6997},{"krate":0,"index":6998}],"decl_id":null,"docs":" Utilities for tracking time.","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\cfg.rs","byte_start":24384,"byte_end":24408,"line_start":311,"line_end":311,"column_start":13,"column_end":37}},{"value":"/ Utilities for tracking time.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9330376,"byte_end":9330408,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9330409,"byte_end":9330412,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a number of types for executing code after a set period","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9330413,"byte_end":9330493,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ of time.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9330494,"byte_end":9330506,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9330507,"byte_end":9330510,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * `Sleep` is a future that does no work and completes at a specific `Instant`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9330511,"byte_end":9330592,"line_start":6,"line_end":6,"column_start":1,"column_end":82}},{"value":"/   in time.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9330593,"byte_end":9330607,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9330608,"byte_end":9330611,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `Interval` is a stream yielding a value at a fixed period. It is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9330612,"byte_end":9330682,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/   initialized with a `Duration` and repeatedly yields each time the duration","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9330683,"byte_end":9330763,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/   elapses.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9330764,"byte_end":9330778,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9330779,"byte_end":9330782,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * `Timeout`: Wraps a future or stream, setting an upper bound to the amount","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9330783,"byte_end":9330862,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/   of time it is allowed to execute. If the future or stream does not","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9330863,"byte_end":9330935,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/   complete in time, then it is canceled and an error is returned.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9330936,"byte_end":9331005,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331006,"byte_end":9331009,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ These types are sufficient for handling a large number of scenarios","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331010,"byte_end":9331081,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/ involving time.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331082,"byte_end":9331101,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331102,"byte_end":9331105,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ These types must be used from within the context of the `Runtime`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331106,"byte_end":9331176,"line_start":20,"line_end":20,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331177,"byte_end":9331180,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331181,"byte_end":9331195,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331196,"byte_end":9331199,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331200,"byte_end":9331246,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331247,"byte_end":9331250,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331251,"byte_end":9331258,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::sleep;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331259,"byte_end":9331286,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331287,"byte_end":9331290,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331291,"byte_end":9331319,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331320,"byte_end":9331323,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331324,"byte_end":9331327,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331328,"byte_end":9331346,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331347,"byte_end":9331368,"line_start":33,"line_end":33,"column_start":1,"column_end":22}},{"value":"/     sleep(Duration::from_millis(100)).await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331369,"byte_end":9331417,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331418,"byte_end":9331458,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331459,"byte_end":9331464,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331465,"byte_end":9331472,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331473,"byte_end":9331476,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Require that an operation takes no more than 300ms.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331477,"byte_end":9331532,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331533,"byte_end":9331536,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331537,"byte_end":9331544,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{timeout, Duration};","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331545,"byte_end":9331586,"line_start":42,"line_end":42,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331587,"byte_end":9331590,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ async fn long_future() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331591,"byte_end":9331619,"line_start":44,"line_end":44,"column_start":1,"column_end":29}},{"value":"/     // do work here","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331620,"byte_end":9331643,"line_start":45,"line_end":45,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331644,"byte_end":9331649,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331650,"byte_end":9331653,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331654,"byte_end":9331676,"line_start":48,"line_end":48,"column_start":1,"column_end":23}},{"value":"/ let res = timeout(Duration::from_secs(1), long_future()).await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331677,"byte_end":9331744,"line_start":49,"line_end":49,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331745,"byte_end":9331748,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ if res.is_err() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331749,"byte_end":9331770,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/     println!(\"operation timed out\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331771,"byte_end":9331811,"line_start":52,"line_end":52,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331812,"byte_end":9331817,"line_start":53,"line_end":53,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331818,"byte_end":9331825,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331826,"byte_end":9331833,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331834,"byte_end":9331837,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ A simple example using [`interval`] to execute a task every two seconds.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331838,"byte_end":9331914,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331915,"byte_end":9331918,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ The difference between [`interval`] and [`sleep`] is that an","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331919,"byte_end":9331983,"line_start":59,"line_end":59,"column_start":1,"column_end":65}},{"value":"/ [`interval`] measures the time since the last tick, which means that","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9331984,"byte_end":9332056,"line_start":60,"line_end":60,"column_start":1,"column_end":73}},{"value":"/ `.tick().await` may wait for a shorter time than the duration specified","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9332057,"byte_end":9332132,"line_start":61,"line_end":61,"column_start":1,"column_end":76}},{"value":"/ for the interval if some time has passed between calls to `.tick().await`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9332133,"byte_end":9332211,"line_start":62,"line_end":62,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9332212,"byte_end":9332215,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`sleep`], the task","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9332216,"byte_end":9332290,"line_start":64,"line_end":64,"column_start":1,"column_end":75}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9332291,"byte_end":9332361,"line_start":65,"line_end":65,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9332362,"byte_end":9332374,"line_start":66,"line_end":66,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9332375,"byte_end":9332378,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9332379,"byte_end":9332386,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9332387,"byte_end":9332407,"line_start":69,"line_end":69,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9332408,"byte_end":9332411,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9332412,"byte_end":9332453,"line_start":71,"line_end":71,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9332454,"byte_end":9332480,"line_start":72,"line_end":72,"column_start":1,"column_end":27}},{"value":"/     time::sleep(time::Duration::from_secs(1)).await","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9332481,"byte_end":9332536,"line_start":73,"line_end":73,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9332537,"byte_end":9332542,"line_start":74,"line_end":74,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9332543,"byte_end":9332546,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9332547,"byte_end":9332565,"line_start":76,"line_end":76,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9332566,"byte_end":9332587,"line_start":77,"line_end":77,"column_start":1,"column_end":22}},{"value":"/     let interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9332588,"byte_end":9332656,"line_start":78,"line_end":78,"column_start":1,"column_end":69}},{"value":"/     tokio::pin!(interval);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9332657,"byte_end":9332687,"line_start":79,"line_end":79,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9332688,"byte_end":9332691,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     for _i in 0..5 {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9332692,"byte_end":9332716,"line_start":81,"line_end":81,"column_start":1,"column_end":25}},{"value":"/         interval.as_mut().tick().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9332717,"byte_end":9332760,"line_start":82,"line_end":82,"column_start":1,"column_end":44}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9332761,"byte_end":9332806,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9332807,"byte_end":9332816,"line_start":84,"line_end":84,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9332817,"byte_end":9332822,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9332823,"byte_end":9332830,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9332831,"byte_end":9332834,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [`sleep`]: crate::time::sleep()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9332835,"byte_end":9332870,"line_start":88,"line_end":88,"column_start":1,"column_end":36}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9332871,"byte_end":9332912,"line_start":89,"line_end":89,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":6804},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9400555,"byte_end":9400566,"line_start":19,"line_end":19,"column_start":8,"column_end":19},"name":"sleep_until","qualname":"::time::driver::sleep::sleep_until","value":"pub fn sleep_until(Instant) -> Sleep","parent":null,"children":[],"decl_id":null,"docs":" Waits until `deadline` is reached.","sig":null,"attributes":[{"value":"/ Waits until `deadline` is reached.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9400167,"byte_end":9400205,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9400206,"byte_end":9400209,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the sleep future to complete. `Sleep`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9400210,"byte_end":9400290,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9400291,"byte_end":9400368,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9400369,"byte_end":9400404,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9400405,"byte_end":9400408,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9400409,"byte_end":9400427,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9400428,"byte_end":9400431,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Canceling a sleep instance is done by dropping the returned future. No additional","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9400432,"byte_end":9400517,"line_start":17,"line_end":17,"column_start":1,"column_end":86}},{"value":"/ cleanup work is required.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9400518,"byte_end":9400547,"line_start":18,"line_end":18,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":6805},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9401620,"byte_end":9401625,"line_start":56,"line_end":56,"column_start":8,"column_end":13},"name":"sleep","qualname":"::time::driver::sleep::sleep","value":"pub fn sleep(Duration) -> Sleep","parent":null,"children":[],"decl_id":null,"docs":" Waits until `duration` has elapsed.","sig":null,"attributes":[{"value":"/ Waits until `duration` has elapsed.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9400633,"byte_end":9400672,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9400673,"byte_end":9400676,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `sleep_until(Instant::now() + duration)`. An asynchronous","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9400677,"byte_end":9400752,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ analog to `std::thread::sleep`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9400753,"byte_end":9400788,"line_start":26,"line_end":26,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9400789,"byte_end":9400792,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the sleep future to complete. `Sleep`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9400793,"byte_end":9400873,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9400874,"byte_end":9400951,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9400952,"byte_end":9400987,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9400988,"byte_end":9400991,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ To run something regularly on a schedule, see [`interval`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9400992,"byte_end":9401055,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9401056,"byte_end":9401059,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ The maximum duration for a sleep is 68719476734 milliseconds (approximately 2.2 years).","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9401060,"byte_end":9401151,"line_start":34,"line_end":34,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9401152,"byte_end":9401155,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9401156,"byte_end":9401174,"line_start":36,"line_end":36,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9401175,"byte_end":9401178,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Canceling a sleep instance is done by dropping the returned future. No additional","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9401179,"byte_end":9401264,"line_start":38,"line_end":38,"column_start":1,"column_end":86}},{"value":"/ cleanup work is required.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9401265,"byte_end":9401294,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9401295,"byte_end":9401298,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9401299,"byte_end":9401313,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9401314,"byte_end":9401317,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\".","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9401318,"byte_end":9401365,"line_start":43,"line_end":43,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9401366,"byte_end":9401369,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9401370,"byte_end":9401377,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{sleep, Duration};","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9401378,"byte_end":9401417,"line_start":46,"line_end":46,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9401418,"byte_end":9401421,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9401422,"byte_end":9401440,"line_start":48,"line_end":48,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9401441,"byte_end":9401462,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/     sleep(Duration::from_millis(100)).await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9401463,"byte_end":9401511,"line_start":50,"line_end":50,"column_start":1,"column_end":49}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9401512,"byte_end":9401552,"line_start":51,"line_end":51,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9401553,"byte_end":9401558,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9401559,"byte_end":9401566,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9401567,"byte_end":9401570,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9401571,"byte_end":9401612,"line_start":55,"line_end":55,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":7485},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9404581,"byte_end":9404586,"line_start":150,"line_end":150,"column_start":16,"column_end":21},"name":"Sleep","qualname":"::time::driver::sleep::Sleep","value":"Sleep {  }","parent":null,"children":[{"krate":0,"index":7486},{"krate":0,"index":7487}],"decl_id":null,"docs":" Future returned by [`sleep`](sleep) and [`sleep_until`](sleep_until).","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6808},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9405032,"byte_end":9405040,"line_start":168,"line_end":168,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Sleep>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the instant at which the future will complete.\n","sig":null,"attributes":[{"value":"/ Returns the instant at which the future will complete.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9404962,"byte_end":9405020,"line_start":167,"line_end":167,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6809},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9405235,"byte_end":9405245,"line_start":175,"line_end":175,"column_start":12,"column_end":22},"name":"is_elapsed","qualname":"<Sleep>::is_elapsed","value":"pub fn is_elapsed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `Sleep` has elapsed.","sig":null,"attributes":[{"value":"/ Returns `true` if `Sleep` has elapsed.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9405094,"byte_end":9405136,"line_start":172,"line_end":172,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9405141,"byte_end":9405144,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ A `Sleep` instance is elapsed when the requested duration has elapsed.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9405149,"byte_end":9405223,"line_start":174,"line_end":174,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":6810},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9406241,"byte_end":9406246,"line_start":206,"line_end":206,"column_start":12,"column_end":17},"name":"reset","qualname":"<Sleep>::reset","value":"pub fn reset(Pin<&mut Self>, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Resets the `Sleep` instance to a new deadline.","sig":null,"attributes":[{"value":"/ Resets the `Sleep` instance to a new deadline.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9405306,"byte_end":9405356,"line_start":179,"line_end":179,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9405361,"byte_end":9405364,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Calling this function allows changing the instant at which the `Sleep`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9405369,"byte_end":9405443,"line_start":181,"line_end":181,"column_start":5,"column_end":79}},{"value":"/ future completes without having to create new associated state.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9405448,"byte_end":9405515,"line_start":182,"line_end":182,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9405520,"byte_end":9405523,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ This function can be called both before and after the future has","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9405528,"byte_end":9405596,"line_start":184,"line_end":184,"column_start":5,"column_end":73}},{"value":"/ completed.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9405601,"byte_end":9405615,"line_start":185,"line_end":185,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9405620,"byte_end":9405623,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ To call this method, you will usually combine the call with","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9405628,"byte_end":9405691,"line_start":187,"line_end":187,"column_start":5,"column_end":68}},{"value":"/ [`Pin::as_mut`], which lets you call the method with consuming the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9405696,"byte_end":9405766,"line_start":188,"line_end":188,"column_start":5,"column_end":75}},{"value":"/ `Sleep` itself.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9405771,"byte_end":9405790,"line_start":189,"line_end":189,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9405795,"byte_end":9405798,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9405803,"byte_end":9405816,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9405821,"byte_end":9405824,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9405829,"byte_end":9405836,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant};","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9405841,"byte_end":9405882,"line_start":194,"line_end":194,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9405887,"byte_end":9405890,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9405895,"byte_end":9405942,"line_start":196,"line_end":196,"column_start":5,"column_end":52}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9405947,"byte_end":9405970,"line_start":197,"line_end":197,"column_start":5,"column_end":28}},{"value":"/ let sleep = tokio::time::sleep(Duration::from_millis(10));","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9405975,"byte_end":9406037,"line_start":198,"line_end":198,"column_start":5,"column_end":67}},{"value":"/ tokio::pin!(sleep);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9406042,"byte_end":9406065,"line_start":199,"line_end":199,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9406070,"byte_end":9406073,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ sleep.as_mut().reset(Instant::now() + Duration::from_millis(20));","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9406078,"byte_end":9406147,"line_start":201,"line_end":201,"column_start":5,"column_end":74}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9406152,"byte_end":9406159,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9406164,"byte_end":9406171,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9406176,"byte_end":9406179,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ [`Pin::as_mut`]: fn@std::pin::Pin::as_mut","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9406184,"byte_end":9406229,"line_start":205,"line_end":205,"column_start":5,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":6882},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::time::error","value":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","parent":null,"children":[{"krate":0,"index":6883},{"krate":0,"index":6884},{"krate":0,"index":6885},{"krate":0,"index":7075},{"krate":0,"index":7081},{"krate":0,"index":7080},{"krate":0,"index":7078},{"krate":0,"index":7083},{"krate":0,"index":7102},{"krate":0,"index":7100},{"krate":0,"index":7099},{"krate":0,"index":7096},{"krate":0,"index":7097},{"krate":0,"index":7093},{"krate":0,"index":7094},{"krate":0,"index":6886},{"krate":0,"index":7104},{"krate":0,"index":7111},{"krate":0,"index":7107},{"krate":0,"index":7108},{"krate":0,"index":7113},{"krate":0,"index":7116},{"krate":0,"index":6888},{"krate":0,"index":6895},{"krate":0,"index":6896},{"krate":0,"index":6899},{"krate":0,"index":6901},{"krate":0,"index":6903},{"krate":0,"index":6904}],"decl_id":null,"docs":" Time error types.\n","sig":null,"attributes":[{"value":"/ Time error types.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9407535,"byte_end":9407556,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":7075},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9408743,"byte_end":9408748,"line_start":27,"line_end":27,"column_start":12,"column_end":17},"name":"Error","qualname":"::time::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Errors encountered by the timer implementation.","sig":null,"attributes":[{"value":"/ Errors encountered by the timer implementation.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9407608,"byte_end":9407659,"line_start":7,"line_end":7,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9407660,"byte_end":9407663,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Currently, there are two different errors that can occur:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9407664,"byte_end":9407725,"line_start":9,"line_end":9,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9407726,"byte_end":9407729,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * `shutdown` occurs when a timer operation is attempted, but the timer","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9407730,"byte_end":9407804,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/   instance has been dropped. In this case, the operation will never be able","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9407805,"byte_end":9407884,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/   to complete and the `shutdown` error is returned. This is a permanent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9407885,"byte_end":9407960,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/   error, i.e., once this error is observed, timer operations will never","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9407961,"byte_end":9408036,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/   succeed in the future.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9408037,"byte_end":9408065,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9408066,"byte_end":9408069,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * `at_capacity` occurs when a timer operation is attempted, but the timer","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9408070,"byte_end":9408147,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/   instance is currently handling its maximum number of outstanding sleep instances.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9408148,"byte_end":9408235,"line_start":18,"line_end":18,"column_start":1,"column_end":88}},{"value":"/   In this case, the operation is not able to be performed at the current","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9408236,"byte_end":9408312,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/   moment, and `at_capacity` is returned. This is a transient error, i.e., at","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9408313,"byte_end":9408393,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/   some point in the future, if the operation is attempted again, it might","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9408394,"byte_end":9408471,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/   succeed. Callers that observe this error should attempt to [shed load]. One","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9408472,"byte_end":9408553,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/   way to do this would be dropping the future that issued the timer operation.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9408554,"byte_end":9408636,"line_start":23,"line_end":23,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9408637,"byte_end":9408640,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [shed load]: https://en.wikipedia.org/wiki/Load_Shedding","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9408641,"byte_end":9408701,"line_start":25,"line_end":25,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":7104},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9409052,"byte_end":9409059,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"Elapsed","qualname":"::time::error::Elapsed","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Timeout`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Timeout`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9408980,"byte_end":9409012,"line_start":43,"line_end":43,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":6889},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9409236,"byte_end":9409244,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<Error>::shutdown","value":"pub fn shutdown() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a shutdown timer.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a shutdown timer.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9409173,"byte_end":9409224,"line_start":55,"line_end":55,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6890},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9409376,"byte_end":9409387,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"is_shutdown","qualname":"<Error>::is_shutdown","value":"pub fn is_shutdown(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being shutdown.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being shutdown.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9409293,"byte_end":9409364,"line_start":60,"line_end":60,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":6891},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9409523,"byte_end":9409534,"line_start":66,"line_end":66,"column_start":12,"column_end":23},"name":"at_capacity","qualname":"<Error>::at_capacity","value":"pub fn at_capacity() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a timer at capacity.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a timer at capacity.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9409457,"byte_end":9409511,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":6892},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9409671,"byte_end":9409685,"line_start":71,"line_end":71,"column_start":12,"column_end":26},"name":"is_at_capacity","qualname":"<Error>::is_at_capacity","value":"pub fn is_at_capacity(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being at capacity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being at capacity.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9409585,"byte_end":9409659,"line_start":70,"line_end":70,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":6893},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9409824,"byte_end":9409831,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"invalid","qualname":"<Error>::invalid","value":"pub fn invalid() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Create an error representing a misconfigured timer.\n","sig":null,"attributes":[{"value":"/ Create an error representing a misconfigured timer.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9409757,"byte_end":9409812,"line_start":75,"line_end":75,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6894},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9409967,"byte_end":9409977,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"is_invalid","qualname":"<Error>::is_invalid","value":"pub fn is_invalid(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being misconfigured.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being misconfigured.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9409879,"byte_end":9409955,"line_start":80,"line_end":80,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":7118},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9412355,"byte_end":9412362,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"Instant","qualname":"::time::instant::Instant","value":"Instant {  }","parent":null,"children":[{"krate":0,"index":7119}],"decl_id":null,"docs":" A measurement of a monotonically nondecreasing clock.\n Opaque and useful only with `Duration`.","sig":null,"attributes":[{"value":"/ A measurement of a monotonically nondecreasing clock.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9411064,"byte_end":9411121,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/ Opaque and useful only with `Duration`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9411122,"byte_end":9411165,"line_start":8,"line_end":8,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9411166,"byte_end":9411169,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instants are always guaranteed to be no less than any previously measured","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9411170,"byte_end":9411247,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ instant when created, and are often useful for tasks such as measuring","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9411248,"byte_end":9411322,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ benchmarks or timing how long an operation takes.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9411323,"byte_end":9411376,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9411377,"byte_end":9411380,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Note, however, that instants are not guaranteed to be **steady**. In other","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9411381,"byte_end":9411459,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ words, each tick of the underlying clock may not be the same length (e.g.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9411460,"byte_end":9411537,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ some seconds may be longer than others). An instant may jump forwards or","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9411538,"byte_end":9411614,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ experience time dilation (slow down or speed up), but it will never go","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9411615,"byte_end":9411689,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ backwards.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9411690,"byte_end":9411704,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9411705,"byte_end":9411708,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Instants are opaque types that can only be compared to one another. There is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9411709,"byte_end":9411789,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ no method to get \"the number of seconds\" from an instant. Instead, it only","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9411790,"byte_end":9411868,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ allows measuring the duration between two instants (or comparing two","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9411869,"byte_end":9411941,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ instants).","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9411942,"byte_end":9411956,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9411957,"byte_end":9411960,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The size of an `Instant` struct may vary depending on the target operating","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9411961,"byte_end":9412039,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ system.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9412040,"byte_end":9412051,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9412052,"byte_end":9412055,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9412056,"byte_end":9412066,"line_start":28,"line_end":28,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9412067,"byte_end":9412070,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This type wraps the inner `std` variant and is used to align the Tokio","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9412071,"byte_end":9412145,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ clock for uses of `now()`. This can be useful for testing where you can","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9412146,"byte_end":9412221,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ take advantage of `time::pause()` and `time::advance()`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9412222,"byte_end":9412282,"line_start":32,"line_end":32,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":6911},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9412609,"byte_end":9412612,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"pub fn now() -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns an instant corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an instant corresponding to \"now\".","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9412416,"byte_end":9412462,"line_start":39,"line_end":39,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9412467,"byte_end":9412470,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9412475,"byte_end":9412489,"line_start":41,"line_end":41,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9412494,"byte_end":9412497,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9412502,"byte_end":9412509,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::Instant;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9412514,"byte_end":9412543,"line_start":44,"line_end":44,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9412548,"byte_end":9412551,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ let now = Instant::now();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9412556,"byte_end":9412585,"line_start":46,"line_end":46,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9412590,"byte_end":9412597,"line_start":47,"line_end":47,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6912},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9412738,"byte_end":9412746,"line_start":53,"line_end":53,"column_start":12,"column_end":20},"name":"from_std","qualname":"<Instant>::from_std","value":"pub fn from_std(std::time::Instant) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Create a `tokio::time::Instant` from a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Create a `tokio::time::Instant` from a `std::time::Instant`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9412662,"byte_end":9412726,"line_start":52,"line_end":52,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":6913},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9412882,"byte_end":9412890,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"into_std","qualname":"<Instant>::into_std","value":"pub fn into_std(Self) -> std::time::Instant","parent":null,"children":[],"decl_id":null,"docs":" Convert the value into a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Convert the value into a `std::time::Instant`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9412820,"byte_end":9412870,"line_start":57,"line_end":57,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6914},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9413134,"byte_end":9413148,"line_start":67,"line_end":67,"column_start":12,"column_end":26},"name":"duration_since","qualname":"<Instant>::duration_since","value":"pub fn duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9412949,"byte_end":9413021,"line_start":62,"line_end":62,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9413026,"byte_end":9413029,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9413034,"byte_end":9413046,"line_start":64,"line_end":64,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9413051,"byte_end":9413054,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ This function will panic if `earlier` is later than `self`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9413059,"byte_end":9413122,"line_start":66,"line_end":66,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6915},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9413831,"byte_end":9413853,"line_start":88,"line_end":88,"column_start":12,"column_end":34},"name":"checked_duration_since","qualname":"<Instant>::checked_duration_since","value":"pub fn checked_duration_since(&Self, Instant) -> Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n None if that instant is later than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9413244,"byte_end":9413319,"line_start":71,"line_end":71,"column_start":5,"column_end":80}},{"value":"/ None if that instant is later than this one.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9413324,"byte_end":9413372,"line_start":72,"line_end":72,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9413377,"byte_end":9413380,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9413385,"byte_end":9413399,"line_start":74,"line_end":74,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9413404,"byte_end":9413407,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9413412,"byte_end":9413419,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, sleep};","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9413424,"byte_end":9413472,"line_start":77,"line_end":77,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9413477,"byte_end":9413480,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9413485,"byte_end":9413503,"line_start":79,"line_end":79,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9413508,"byte_end":9413529,"line_start":80,"line_end":80,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9413534,"byte_end":9413567,"line_start":81,"line_end":81,"column_start":5,"column_end":38}},{"value":"/     sleep(Duration::new(1, 0)).await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9413572,"byte_end":9413613,"line_start":82,"line_end":82,"column_start":5,"column_end":46}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9413618,"byte_end":9413655,"line_start":83,"line_end":83,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.checked_duration_since(now));","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9413660,"byte_end":9413722,"line_start":84,"line_end":84,"column_start":5,"column_end":67}},{"value":"/     println!(\"{:?}\", now.checked_duration_since(new_now)); // None","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9413727,"byte_end":9413797,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9413802,"byte_end":9413807,"line_start":86,"line_end":86,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9413812,"byte_end":9413819,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6916},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9414568,"byte_end":9414593,"line_start":109,"line_end":109,"column_start":12,"column_end":37},"name":"saturating_duration_since","qualname":"<Instant>::saturating_duration_since","value":"pub fn saturating_duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n zero duration if that instant is earlier than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9413965,"byte_end":9414040,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ zero duration if that instant is earlier than this one.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9414045,"byte_end":9414104,"line_start":93,"line_end":93,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9414109,"byte_end":9414112,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9414117,"byte_end":9414131,"line_start":95,"line_end":95,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9414136,"byte_end":9414139,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9414144,"byte_end":9414151,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, sleep};","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9414156,"byte_end":9414204,"line_start":98,"line_end":98,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9414209,"byte_end":9414212,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9414217,"byte_end":9414235,"line_start":100,"line_end":100,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9414240,"byte_end":9414261,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9414266,"byte_end":9414299,"line_start":102,"line_end":102,"column_start":5,"column_end":38}},{"value":"/     sleep(Duration::new(1, 0)).await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9414304,"byte_end":9414345,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9414350,"byte_end":9414387,"line_start":104,"line_end":104,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.saturating_duration_since(now));","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9414392,"byte_end":9414457,"line_start":105,"line_end":105,"column_start":5,"column_end":70}},{"value":"/     println!(\"{:?}\", now.saturating_duration_since(new_now)); // 0ns","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9414462,"byte_end":9414534,"line_start":106,"line_end":106,"column_start":5,"column_end":77}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9414539,"byte_end":9414544,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9414549,"byte_end":9414556,"line_start":108,"line_end":108,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6917},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9415356,"byte_end":9415363,"line_start":134,"line_end":134,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"pub fn elapsed(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9414700,"byte_end":9414770,"line_start":113,"line_end":113,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9414775,"byte_end":9414778,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9414783,"byte_end":9414795,"line_start":115,"line_end":115,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9414800,"byte_end":9414803,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ This function may panic if the current time is earlier than this","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9414808,"byte_end":9414876,"line_start":117,"line_end":117,"column_start":5,"column_end":73}},{"value":"/ instant, which is something that can happen if an `Instant` is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9414881,"byte_end":9414947,"line_start":118,"line_end":118,"column_start":5,"column_end":71}},{"value":"/ produced synthetically.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9414952,"byte_end":9414979,"line_start":119,"line_end":119,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9414984,"byte_end":9414987,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9414992,"byte_end":9415006,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9415011,"byte_end":9415014,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9415019,"byte_end":9415026,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, sleep};","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9415031,"byte_end":9415079,"line_start":124,"line_end":124,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9415084,"byte_end":9415087,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9415092,"byte_end":9415110,"line_start":126,"line_end":126,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9415115,"byte_end":9415136,"line_start":127,"line_end":127,"column_start":5,"column_end":26}},{"value":"/     let instant = Instant::now();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9415141,"byte_end":9415178,"line_start":128,"line_end":128,"column_start":5,"column_end":42}},{"value":"/     let three_secs = Duration::from_secs(3);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9415183,"byte_end":9415231,"line_start":129,"line_end":129,"column_start":5,"column_end":53}},{"value":"/     sleep(three_secs).await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9415236,"byte_end":9415268,"line_start":130,"line_end":130,"column_start":5,"column_end":37}},{"value":"/     assert!(instant.elapsed() >= three_secs);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9415273,"byte_end":9415322,"line_start":131,"line_end":131,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9415327,"byte_end":9415332,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9415337,"byte_end":9415344,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6918},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9415644,"byte_end":9415655,"line_start":141,"line_end":141,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"pub fn checked_add(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9415427,"byte_end":9415502,"line_start":138,"line_end":138,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9415507,"byte_end":9415578,"line_start":139,"line_end":139,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9415583,"byte_end":9415632,"line_start":140,"line_end":140,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":6919},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9415994,"byte_end":9416005,"line_start":148,"line_end":148,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"pub fn checked_sub(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9415777,"byte_end":9415852,"line_start":145,"line_end":145,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9415857,"byte_end":9415928,"line_start":146,"line_end":146,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9415933,"byte_end":9415982,"line_start":147,"line_end":147,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":6955},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9419449,"byte_end":9419457,"line_start":67,"line_end":67,"column_start":8,"column_end":16},"name":"interval","qualname":"::time::interval::interval","value":"pub fn interval(Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `duration`. The first\n tick completes immediately.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `duration`. The first","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9417727,"byte_end":9417804,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ tick completes immediately.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9417805,"byte_end":9417836,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9417837,"byte_end":9417840,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9417841,"byte_end":9417921,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9417922,"byte_end":9417961,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9417962,"byte_end":9417965,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is equivalent to `interval_at(Instant::now(), period)`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9417966,"byte_end":9418039,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9418040,"byte_end":9418043,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9418044,"byte_end":9418056,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9418057,"byte_end":9418060,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9418061,"byte_end":9418106,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9418107,"byte_end":9418110,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9418111,"byte_end":9418125,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9418126,"byte_end":9418129,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9418130,"byte_end":9418137,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9418138,"byte_end":9418176,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9418177,"byte_end":9418180,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9418181,"byte_end":9418199,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9418200,"byte_end":9418221,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9418222,"byte_end":9418291,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9418292,"byte_end":9418295,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9418296,"byte_end":9418326,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9418327,"byte_end":9418357,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9418358,"byte_end":9418388,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9418389,"byte_end":9418392,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9418393,"byte_end":9418436,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9418437,"byte_end":9418442,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9418443,"byte_end":9418450,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9418451,"byte_end":9418454,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ A simple example using `interval` to execute a task every two seconds.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9418455,"byte_end":9418529,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9418530,"byte_end":9418533,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The difference between `interval` and [`sleep`] is that an `interval`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9418534,"byte_end":9418607,"line_start":39,"line_end":39,"column_start":1,"column_end":74}},{"value":"/ measures the time since the last tick, which means that `.tick().await`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9418608,"byte_end":9418683,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ may wait for a shorter time than the duration specified for the interval","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9418684,"byte_end":9418760,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ if some time has passed between calls to `.tick().await`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9418761,"byte_end":9418822,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9418823,"byte_end":9418826,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`sleep`], the task","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9418827,"byte_end":9418901,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9418902,"byte_end":9418972,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9418973,"byte_end":9418985,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9418986,"byte_end":9418989,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9418990,"byte_end":9418997,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9418998,"byte_end":9419018,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9419019,"byte_end":9419022,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9419023,"byte_end":9419064,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9419065,"byte_end":9419091,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/     time::sleep(time::Duration::from_secs(1)).await","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9419092,"byte_end":9419147,"line_start":53,"line_end":53,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9419148,"byte_end":9419153,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9419154,"byte_end":9419157,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9419158,"byte_end":9419176,"line_start":56,"line_end":56,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9419177,"byte_end":9419198,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9419199,"byte_end":9419271,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9419272,"byte_end":9419296,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9419297,"byte_end":9419331,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9419332,"byte_end":9419377,"line_start":61,"line_end":61,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9419378,"byte_end":9419387,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9419388,"byte_end":9419393,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9419394,"byte_end":9419401,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9419402,"byte_end":9419405,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ [`sleep`]: crate::time::sleep()","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9419406,"byte_end":9419441,"line_start":66,"line_end":66,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":6956},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9420346,"byte_end":9420357,"line_start":100,"line_end":100,"column_start":8,"column_end":19},"name":"interval_at","qualname":"::time::interval::interval_at","value":"pub fn interval_at(Instant, Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `period` with the\n first tick completing at `start`.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `period` with the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9419607,"byte_end":9419680,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"/ first tick completing at `start`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9419681,"byte_end":9419718,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9419719,"byte_end":9419722,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9419723,"byte_end":9419803,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9419804,"byte_end":9419843,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9419844,"byte_end":9419847,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9419848,"byte_end":9419860,"line_start":79,"line_end":79,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9419861,"byte_end":9419864,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9419865,"byte_end":9419910,"line_start":81,"line_end":81,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9419911,"byte_end":9419914,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9419915,"byte_end":9419929,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9419930,"byte_end":9419933,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9419934,"byte_end":9419941,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{interval_at, Duration, Instant};","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9419942,"byte_end":9419996,"line_start":86,"line_end":86,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9419997,"byte_end":9420000,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9420001,"byte_end":9420019,"line_start":88,"line_end":88,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9420020,"byte_end":9420041,"line_start":89,"line_end":89,"column_start":1,"column_end":22}},{"value":"/     let start = Instant::now() + Duration::from_millis(50);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9420042,"byte_end":9420105,"line_start":90,"line_end":90,"column_start":1,"column_end":64}},{"value":"/     let mut interval = interval_at(start, Duration::from_millis(10));","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9420106,"byte_end":9420179,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9420180,"byte_end":9420183,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9420184,"byte_end":9420214,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9420215,"byte_end":9420245,"line_start":94,"line_end":94,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9420246,"byte_end":9420276,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9420277,"byte_end":9420280,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     // approximately 70ms have elapsed.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9420281,"byte_end":9420324,"line_start":97,"line_end":97,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9420325,"byte_end":9420330,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9420331,"byte_end":9420338,"line_start":99,"line_end":99,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7141},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9421112,"byte_end":9421120,"line_start":120,"line_end":120,"column_start":12,"column_end":20},"name":"Interval","qualname":"::time::interval::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":7142},{"krate":0,"index":7143}],"decl_id":null,"docs":" Interval returned by [`interval`](interval) and [`interval_at`](interval_at).","sig":null,"attributes":[{"value":"/ Interval returned by [`interval`](interval) and [`interval_at`](interval_at).","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9420565,"byte_end":9420646,"line_start":109,"line_end":109,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9420647,"byte_end":9420650,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ This type allows you to wait on a sequence of instants with a certain","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9420651,"byte_end":9420724,"line_start":111,"line_end":111,"column_start":1,"column_end":74}},{"value":"/ duration between each instant. Unlike calling [`sleep`](crate::time::sleep)","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9420725,"byte_end":9420804,"line_start":112,"line_end":112,"column_start":1,"column_end":80}},{"value":"/ in a loop, this lets you count the time spent between the calls to `sleep`","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9420805,"byte_end":9420883,"line_start":113,"line_end":113,"column_start":1,"column_end":79}},{"value":"/ as well.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9420884,"byte_end":9420896,"line_start":114,"line_end":114,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9420897,"byte_end":9420900,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ An `Interval` can be turned into a `Stream` with [`IntervalStream`].","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9420901,"byte_end":9420973,"line_start":116,"line_end":116,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9420974,"byte_end":9420977,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ [`IntervalStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.IntervalStream.html","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9420978,"byte_end":9421083,"line_start":118,"line_end":118,"column_start":1,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":6958},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9421853,"byte_end":9421857,"line_start":149,"line_end":149,"column_start":18,"column_end":22},"name":"tick","qualname":"<Interval>::tick","value":"pub async fn tick<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the next instant in the interval has been reached.","sig":null,"attributes":[{"value":"/ Completes when the next instant in the interval has been reached.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9421331,"byte_end":9421400,"line_start":129,"line_end":129,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9421405,"byte_end":9421408,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9421413,"byte_end":9421427,"line_start":131,"line_end":131,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9421432,"byte_end":9421435,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9421440,"byte_end":9421447,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9421452,"byte_end":9421472,"line_start":134,"line_end":134,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9421477,"byte_end":9421480,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9421485,"byte_end":9421513,"line_start":136,"line_end":136,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9421518,"byte_end":9421521,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9421526,"byte_end":9421544,"line_start":138,"line_end":138,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9421549,"byte_end":9421570,"line_start":139,"line_end":139,"column_start":5,"column_end":26}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9421575,"byte_end":9421644,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9421649,"byte_end":9421652,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9421657,"byte_end":9421687,"line_start":142,"line_end":142,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9421692,"byte_end":9421722,"line_start":143,"line_end":143,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9421727,"byte_end":9421757,"line_start":144,"line_end":144,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9421762,"byte_end":9421765,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9421770,"byte_end":9421813,"line_start":146,"line_end":146,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9421818,"byte_end":9421823,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9421828,"byte_end":9421835,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6962},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9422533,"byte_end":9422542,"line_start":164,"line_end":164,"column_start":12,"column_end":21},"name":"poll_tick","qualname":"<Interval>::poll_tick","value":"pub fn poll_tick(&mut Self, &mut Context) -> Poll<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Poll for the next instant in the interval to be reached.","sig":null,"attributes":[{"value":"/ Poll for the next instant in the interval to be reached.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9421940,"byte_end":9422000,"line_start":153,"line_end":153,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9422005,"byte_end":9422008,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This method can return the following values:","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9422013,"byte_end":9422061,"line_start":155,"line_end":155,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9422066,"byte_end":9422069,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next instant has not yet been reached.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9422074,"byte_end":9422142,"line_start":157,"line_end":157,"column_start":5,"column_end":73}},{"value":"/  * `Poll::Ready(instant)` if the next instant has been reached.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9422147,"byte_end":9422214,"line_start":158,"line_end":158,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9422219,"byte_end":9422222,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9422227,"byte_end":9422302,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when the instant has elapsed. Note that on multiple","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9422307,"byte_end":9422382,"line_start":161,"line_end":161,"column_start":5,"column_end":80}},{"value":"/ calls to `poll_tick`, only the `Waker` from the `Context` passed to the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9422387,"byte_end":9422462,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ most recent call is scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9422467,"byte_end":9422521,"line_start":163,"line_end":163,"column_start":5,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":6980},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9424389,"byte_end":9424396,"line_start":48,"line_end":48,"column_start":8,"column_end":15},"name":"timeout","qualname":"::time::timeout::timeout","value":"pub fn timeout<T>(Duration, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified duration has elapsed.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified duration has elapsed.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9423374,"byte_end":9423451,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9423452,"byte_end":9423455,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the duration has elapsed, then the completed","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9423456,"byte_end":9423535,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ value is returned. Otherwise, an error is returned and the future is","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9423536,"byte_end":9423608,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ canceled.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9423609,"byte_end":9423622,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9423623,"byte_end":9423626,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9423627,"byte_end":9423644,"line_start":20,"line_end":20,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9423645,"byte_end":9423648,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9423649,"byte_end":9423727,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9423728,"byte_end":9423758,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9423759,"byte_end":9423762,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9423763,"byte_end":9423843,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9423844,"byte_end":9423871,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9423872,"byte_end":9423875,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9423876,"byte_end":9423890,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9423891,"byte_end":9423894,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9423895,"byte_end":9423955,"line_start":30,"line_end":30,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9423956,"byte_end":9423959,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9423960,"byte_end":9423971,"line_start":32,"line_end":32,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::timeout;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9423972,"byte_end":9424001,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9424002,"byte_end":9424031,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9424032,"byte_end":9424035,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9424036,"byte_end":9424064,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9424065,"byte_end":9424068,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9424069,"byte_end":9424091,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9424092,"byte_end":9424130,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9424131,"byte_end":9424158,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9424159,"byte_end":9424162,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9424163,"byte_end":9424236,"line_start":42,"line_end":42,"column_start":1,"column_end":74}},{"value":"/ if let Err(_) = timeout(Duration::from_millis(10), rx).await {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9424237,"byte_end":9424303,"line_start":43,"line_end":43,"column_start":1,"column_end":67}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9424304,"byte_end":9424359,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9424360,"byte_end":9424365,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9424366,"byte_end":9424373,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9424374,"byte_end":9424381,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6982},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9425608,"byte_end":9425618,"line_start":90,"line_end":90,"column_start":8,"column_end":18},"name":"timeout_at","qualname":"::time::timeout::timeout_at","value":"pub fn timeout_at<T>(Instant, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified instant in time.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified instant in time.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9424577,"byte_end":9424649,"line_start":56,"line_end":56,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9424650,"byte_end":9424653,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the instant is reached, then the completed","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9424654,"byte_end":9424731,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/ value is returned. Otherwise, an error is returned.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9424732,"byte_end":9424787,"line_start":59,"line_end":59,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9424788,"byte_end":9424791,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9424792,"byte_end":9424809,"line_start":61,"line_end":61,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9424810,"byte_end":9424813,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9424814,"byte_end":9424892,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9424893,"byte_end":9424923,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9424924,"byte_end":9424927,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9424928,"byte_end":9425008,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9425009,"byte_end":9425036,"line_start":67,"line_end":67,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9425037,"byte_end":9425040,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9425041,"byte_end":9425055,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9425056,"byte_end":9425059,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9425060,"byte_end":9425120,"line_start":71,"line_end":71,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9425121,"byte_end":9425124,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9425125,"byte_end":9425136,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::{Instant, timeout_at};","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9425137,"byte_end":9425180,"line_start":74,"line_end":74,"column_start":1,"column_end":44}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9425181,"byte_end":9425210,"line_start":75,"line_end":75,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9425211,"byte_end":9425214,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9425215,"byte_end":9425243,"line_start":77,"line_end":77,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9425244,"byte_end":9425247,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9425248,"byte_end":9425270,"line_start":79,"line_end":79,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9425271,"byte_end":9425309,"line_start":80,"line_end":80,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9425310,"byte_end":9425337,"line_start":81,"line_end":81,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9425338,"byte_end":9425341,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire 10 milliseconds into the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9425342,"byte_end":9425420,"line_start":83,"line_end":83,"column_start":1,"column_end":79}},{"value":"/ // future.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9425421,"byte_end":9425435,"line_start":84,"line_end":84,"column_start":1,"column_end":15}},{"value":"/ if let Err(_) = timeout_at(Instant::now() + Duration::from_millis(10), rx).await {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9425436,"byte_end":9425522,"line_start":85,"line_end":85,"column_start":1,"column_end":87}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9425523,"byte_end":9425578,"line_start":86,"line_end":86,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9425579,"byte_end":9425584,"line_start":87,"line_end":87,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9425585,"byte_end":9425592,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9425593,"byte_end":9425600,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7447},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9425993,"byte_end":9426000,"line_start":106,"line_end":106,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::time::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":7449},{"krate":0,"index":7450}],"decl_id":null,"docs":" Future returned by [`timeout`](timeout) and [`timeout_at`](timeout_at).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.2.4\\src\\lib.rs","byte_start":9472006,"byte_end":9472015,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6987},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9426296,"byte_end":9426303,"line_start":120,"line_end":120,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Timeout<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this timeout.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9426223,"byte_end":9426284,"line_start":119,"line_end":119,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6988},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9426431,"byte_end":9426438,"line_start":125,"line_end":125,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Timeout<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this timeout.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9426350,"byte_end":9426419,"line_start":124,"line_end":124,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6989},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9426567,"byte_end":9426577,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Timeout<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this timeout, returning the underlying value.\n","sig":null,"attributes":[{"value":"/ Consumes this timeout, returning the underlying value.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9426497,"byte_end":9426555,"line_start":129,"line_end":129,"column_start":5,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":652},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":139405,"byte_end":139411,"line_start":46,"line_end":46,"column_start":10,"column_end":16},"name":"Handle","qualname":"::util::linked_list::Link::Handle","value":"type Handle;","parent":{"krate":0,"index":651},"children":[],"decl_id":null,"docs":" Handle to the list entry.","sig":null,"attributes":[{"value":"/ Handle to the list entry.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":139314,"byte_end":139343,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":139348,"byte_end":139351,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This is usually a pointer-ish type.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":139356,"byte_end":139395,"line_start":45,"line_end":45,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":653},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":139441,"byte_end":139447,"line_start":49,"line_end":49,"column_start":10,"column_end":16},"name":"Target","qualname":"::util::linked_list::Link::Target","value":"type Target;","parent":{"krate":0,"index":651},"children":[],"decl_id":null,"docs":" Node type\n","sig":null,"attributes":[{"value":"/ Node type","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":139418,"byte_end":139431,"line_start":48,"line_end":48,"column_start":5,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":696},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\rand.rs","byte_start":157869,"byte_end":157881,"line_start":58,"line_end":58,"column_start":8,"column_end":20},"name":"thread_rng_n","qualname":"::util::rand::thread_rng_n","value":"pub fn thread_rng_n(u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"macros\"))","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\rand.rs","byte_start":157754,"byte_end":157785,"line_start":55,"line_end":55,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":702},"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16448,"byte_end":16454,"line_start":444,"line_end":444,"column_start":9,"column_end":15},"name":"stream","qualname":"::stream","value":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","parent":null,"children":[],"decl_id":null,"docs":" Due to the `Stream` trait's inclusion in `std` landing later than Tokio's 1.0\n release, most of the Tokio stream utilities have been moved into the [`tokio-stream`]\n crate.","sig":null,"attributes":[{"value":"/ Due to the `Stream` trait's inclusion in `std` landing later than Tokio's 1.0","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14953,"byte_end":15034,"line_start":407,"line_end":407,"column_start":1,"column_end":82}},{"value":"/ release, most of the Tokio stream utilities have been moved into the [`tokio-stream`]","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15035,"byte_end":15124,"line_start":408,"line_end":408,"column_start":1,"column_end":90}},{"value":"/ crate.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15125,"byte_end":15135,"line_start":409,"line_end":409,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15136,"byte_end":15139,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ # Why was `Stream` not included in Tokio 1.0?","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15140,"byte_end":15189,"line_start":411,"line_end":411,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15190,"byte_end":15193,"line_start":412,"line_end":412,"column_start":1,"column_end":4}},{"value":"/ Originally, we had planned to ship Tokio 1.0 with a stable `Stream` type","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15194,"byte_end":15270,"line_start":413,"line_end":413,"column_start":1,"column_end":77}},{"value":"/ but unfortunetly the [RFC] had not been merged in time for `Stream` to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15271,"byte_end":15345,"line_start":414,"line_end":414,"column_start":1,"column_end":75}},{"value":"/ reach `std` on a stable compiler in time for the 1.0 release of Tokio. For","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15346,"byte_end":15424,"line_start":415,"line_end":415,"column_start":1,"column_end":79}},{"value":"/ this reason, the team has decided to move all `Stream` based utilities to","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15425,"byte_end":15502,"line_start":416,"line_end":416,"column_start":1,"column_end":78}},{"value":"/ the [`tokio-stream`] crate. While this is not ideal, once `Stream` has made","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15503,"byte_end":15582,"line_start":417,"line_end":417,"column_start":1,"column_end":80}},{"value":"/ it into the standard library and the MSRV period has passed, we will implement","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15583,"byte_end":15665,"line_start":418,"line_end":418,"column_start":1,"column_end":83}},{"value":"/ stream for our different types.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15666,"byte_end":15701,"line_start":419,"line_end":419,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15702,"byte_end":15705,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ While this may seem unfortunate, not all is lost as you can get much of the","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15706,"byte_end":15785,"line_start":421,"line_end":421,"column_start":1,"column_end":80}},{"value":"/ `Stream` support with `async/await` and `while let` loops. It is also possible","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15786,"byte_end":15868,"line_start":422,"line_end":422,"column_start":1,"column_end":83}},{"value":"/ to create a `impl Stream` from `async fn` using the [`async-stream`] crate.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15869,"byte_end":15948,"line_start":423,"line_end":423,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15949,"byte_end":15952,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ [`tokio-stream`]: https://docs.rs/tokio-stream","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":15953,"byte_end":16003,"line_start":425,"line_end":425,"column_start":1,"column_end":51}},{"value":"/ [`async-stream`]: https://docs.rs/async-stream","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16004,"byte_end":16054,"line_start":426,"line_end":426,"column_start":1,"column_end":51}},{"value":"/ [RFC]: https://github.com/rust-lang/rfcs/pull/2996","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16055,"byte_end":16109,"line_start":427,"line_end":427,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16110,"byte_end":16113,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16114,"byte_end":16127,"line_start":429,"line_end":429,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16128,"byte_end":16131,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ Convert a [`sync::mpsc::Receiver`] to an `impl Stream`.","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16132,"byte_end":16191,"line_start":431,"line_end":431,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16192,"byte_end":16195,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16196,"byte_end":16214,"line_start":433,"line_end":433,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16215,"byte_end":16241,"line_start":434,"line_end":434,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16242,"byte_end":16245,"line_start":435,"line_end":435,"column_start":1,"column_end":4}},{"value":"/ let (tx, mut rx) = mpsc::channel::<usize>(16);","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16246,"byte_end":16296,"line_start":436,"line_end":436,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16297,"byte_end":16300,"line_start":437,"line_end":437,"column_start":1,"column_end":4}},{"value":"/ let stream = async_stream::stream! {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16301,"byte_end":16341,"line_start":438,"line_end":438,"column_start":1,"column_end":41}},{"value":"/     while let Some(item) = rx.recv().await {","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16342,"byte_end":16390,"line_start":439,"line_end":439,"column_start":1,"column_end":49}},{"value":"/         yield item;","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16391,"byte_end":16414,"line_start":440,"line_end":440,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16415,"byte_end":16424,"line_start":441,"line_end":441,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16425,"byte_end":16431,"line_start":442,"line_end":442,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":16432,"byte_end":16439,"line_start":443,"line_end":443,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\scoped_tls.rs","byte_start":30343,"byte_end":30352,"line_start":30,"line_end":30,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\scoped_tls.rs","byte_start":30368,"byte_end":30377,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\scoped_tls.rs","byte_start":30727,"byte_end":30732,"line_start":44,"line_end":44,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":32692,"byte_end":32701,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":32864,"byte_end":32873,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":34060,"byte_end":34069,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\poll_fn.rs","byte_start":34845,"byte_end":34851,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\poll_fn.rs","byte_start":35065,"byte_end":35071,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\poll_fn.rs","byte_start":35213,"byte_end":35219,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\ready.rs","byte_start":8378377,"byte_end":8378382,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\ready.rs","byte_start":8378409,"byte_end":8378414,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":737},{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\try_join.rs","byte_start":8379623,"byte_end":8379631,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":778},{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":48056,"byte_end":48059,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":786},{"krate":0,"index":787}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":48219,"byte_end":48222,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":48851,"byte_end":48857,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":51897,"byte_end":51900,"line_start":72,"line_end":72,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":52043,"byte_end":52046,"line_start":80,"line_end":80,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":52715,"byte_end":52721,"line_start":108,"line_end":108,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":55715,"byte_end":55718,"line_start":61,"line_end":61,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":792},{"krate":0,"index":793}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":55861,"byte_end":55864,"line_start":69,"line_end":69,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":56255,"byte_end":56261,"line_start":83,"line_end":83,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":65731,"byte_end":65734,"line_start":213,"line_end":213,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":65882,"byte_end":65885,"line_start":221,"line_end":221,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":66762,"byte_end":66765,"line_start":255,"line_end":255,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":67563,"byte_end":67569,"line_start":286,"line_end":286,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":68372,"byte_end":68378,"line_start":316,"line_end":316,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":69184,"byte_end":69190,"line_start":346,"line_end":346,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":69991,"byte_end":69997,"line_start":376,"line_end":376,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72038,"byte_end":72045,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":81023,"byte_end":81030,"line_start":277,"line_end":277,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8391785,"byte_end":8391793,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8393934,"byte_end":8393942,"line_start":92,"line_end":92,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":820},{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8394085,"byte_end":8394093,"line_start":101,"line_end":101,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8394221,"byte_end":8394229,"line_start":108,"line_end":108,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8394814,"byte_end":8394819,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":849},{"krate":0,"index":850}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8399236,"byte_end":8399241,"line_start":169,"line_end":169,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8399985,"byte_end":8399990,"line_start":196,"line_end":196,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":852},{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8400151,"byte_end":8400156,"line_start":205,"line_end":205,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8400284,"byte_end":8400289,"line_start":212,"line_end":212,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":857},{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8400443,"byte_end":8400448,"line_start":221,"line_end":221,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":860},{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8400595,"byte_end":8400600,"line_start":230,"line_end":230,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","byte_start":8403048,"byte_end":8403060,"line_start":50,"line_end":50,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","byte_start":8403085,"byte_end":8403097,"line_start":51,"line_end":51,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","byte_start":8403141,"byte_end":8403153,"line_start":55,"line_end":55,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":883},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":891},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":898}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","byte_start":8408581,"byte_end":8408593,"line_start":208,"line_end":208,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":902}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","byte_start":8409192,"byte_end":8409204,"line_start":226,"line_end":226,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1096},{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8412607,"byte_end":8412618,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":928}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8412878,"byte_end":8412889,"line_start":115,"line_end":115,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8413069,"byte_end":8413080,"line_start":124,"line_end":124,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8421263,"byte_end":8421274,"line_start":366,"line_end":366,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8421363,"byte_end":8421374,"line_start":372,"line_end":372,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8421399,"byte_end":8421410,"line_start":373,"line_end":373,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8421444,"byte_end":8421455,"line_start":376,"line_end":376,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1151},{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8422378,"byte_end":8422384,"line_start":401,"line_end":401,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8422879,"byte_end":8422888,"line_start":420,"line_end":420,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1162},{"krate":0,"index":1163}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8427562,"byte_end":8427571,"line_start":529,"line_end":529,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8427936,"byte_end":8427945,"line_start":542,"line_end":542,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8427978,"byte_end":8427987,"line_start":543,"line_end":543,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":8384374,"byte_end":8384380,"line_start":111,"line_end":111,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":8387186,"byte_end":8387192,"line_start":203,"line_end":203,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":8387307,"byte_end":8387312,"line_start":209,"line_end":209,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1003}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":8387756,"byte_end":8387762,"line_start":224,"line_end":224,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":8388161,"byte_end":8388167,"line_start":245,"line_end":245,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1013}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":8388317,"byte_end":8388323,"line_start":254,"line_end":254,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1190}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":8389148,"byte_end":8389154,"line_start":281,"line_end":281,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1015},{"krate":0,"index":1016}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":8389971,"byte_end":8389977,"line_start":302,"line_end":302,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":8390055,"byte_end":8390061,"line_start":308,"line_end":308,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":8390196,"byte_end":8390201,"line_start":316,"line_end":316,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":8391158,"byte_end":8391167,"line_start":346,"line_end":346,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1028}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\poll_evented.rs","byte_start":8431508,"byte_end":8431519,"line_start":76,"line_end":76,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\poll_evented.rs","byte_start":8434154,"byte_end":8434165,"line_start":143,"line_end":143,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1204},{"krate":0,"index":1207},{"krate":0,"index":1211}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\poll_evented.rs","byte_start":8435708,"byte_end":8435719,"line_start":190,"line_end":190,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1047},{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\poll_evented.rs","byte_start":8435862,"byte_end":8435873,"line_start":198,"line_end":198,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\poll_evented.rs","byte_start":8436045,"byte_end":8436056,"line_start":204,"line_end":204,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8437807,"byte_end":8437815,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1243},{"krate":0,"index":1244}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8438732,"byte_end":8438741,"line_start":92,"line_end":92,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1247}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8438991,"byte_end":8438999,"line_start":100,"line_end":100,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1250}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8439294,"byte_end":8439303,"line_start":111,"line_end":111,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8439982,"byte_end":8439987,"line_start":132,"line_end":132,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1258}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8440443,"byte_end":8440448,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1261}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8440701,"byte_end":8440706,"line_start":159,"line_end":159,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1264}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8440829,"byte_end":8440837,"line_start":165,"line_end":165,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8440874,"byte_end":8440883,"line_start":166,"line_end":166,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8440920,"byte_end":8440928,"line_start":167,"line_end":167,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8440965,"byte_end":8440974,"line_start":168,"line_end":168,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8441017,"byte_end":8441025,"line_start":170,"line_end":170,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1275}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8441193,"byte_end":8441202,"line_start":176,"line_end":176,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1278}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\seek.rs","byte_start":8442159,"byte_end":8442163,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1299},{"krate":0,"index":1300}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":8454074,"byte_end":8454075,"line_start":257,"line_end":257,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":8493402,"byte_end":8493403,"line_start":1115,"line_end":1115,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_seek_ext.rs","byte_start":8495512,"byte_end":8495513,"line_start":72,"line_end":72,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":8530760,"byte_end":8530761,"line_start":1004,"line_end":1004,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":8532129,"byte_end":8532138,"line_start":36,"line_end":36,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1470}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":8533995,"byte_end":8534004,"line_start":98,"line_end":98,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1473}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":8534814,"byte_end":8534823,"line_start":120,"line_end":120,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1476},{"krate":0,"index":1477}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":8535736,"byte_end":8535745,"line_start":144,"line_end":144,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":1482}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":8536256,"byte_end":8536265,"line_start":162,"line_end":162,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1485}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8537754,"byte_end":8537763,"line_start":25,"line_end":25,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1509}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8539600,"byte_end":8539609,"line_start":81,"line_end":81,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1512}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8539751,"byte_end":8539760,"line_start":87,"line_end":87,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1515}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8540472,"byte_end":8540481,"line_start":117,"line_end":117,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1520}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8541011,"byte_end":8541020,"line_start":135,"line_end":135,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1523}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8541275,"byte_end":8541284,"line_start":145,"line_end":145,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1526},{"krate":0,"index":1527}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":8543220,"byte_end":8543229,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":1554}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":8545507,"byte_end":8545516,"line_start":116,"line_end":116,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1557},{"krate":0,"index":1558},{"krate":0,"index":1559}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":8546406,"byte_end":8546415,"line_start":145,"line_end":145,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1562}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":8546669,"byte_end":8546678,"line_start":155,"line_end":155,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1565},{"krate":0,"index":1566}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":8546965,"byte_end":8546974,"line_start":165,"line_end":165,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1569}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":8548152,"byte_end":8548157,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1589},{"krate":0,"index":1590},{"krate":0,"index":1591},{"krate":0,"index":1592}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":8549297,"byte_end":8549302,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1596}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":8549581,"byte_end":8549586,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1600}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":8550172,"byte_end":8550177,"line_start":107,"line_end":107,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1604},{"krate":0,"index":1605}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\copy.rs","byte_start":8553012,"byte_end":8553016,"line_start":73,"line_end":73,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1620},{"krate":0,"index":1621}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\copy_buf.rs","byte_start":8556710,"byte_end":8556717,"line_start":67,"line_end":67,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1636},{"krate":0,"index":1637}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\empty.rs","byte_start":8558984,"byte_end":8558989,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1651}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\empty.rs","byte_start":8559203,"byte_end":8559208,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1653},{"krate":0,"index":1654}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\empty.rs","byte_start":8559441,"byte_end":8559446,"line_start":70,"line_end":70,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1656}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\flush.rs","byte_start":8560573,"byte_end":8560578,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1674},{"krate":0,"index":1675}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8561909,"byte_end":8561914,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1690},{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1697}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8563166,"byte_end":8563171,"line_start":90,"line_end":90,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1700}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8567449,"byte_end":8567461,"line_start":91,"line_end":91,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1720}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8568005,"byte_end":8568017,"line_start":107,"line_end":107,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1722},{"krate":0,"index":1723},{"krate":0,"index":1724}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8568715,"byte_end":8568727,"line_start":134,"line_end":134,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1726}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8568878,"byte_end":8568882,"line_start":143,"line_end":143,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1728},{"krate":0,"index":1729}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8569288,"byte_end":8569292,"line_start":162,"line_end":162,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1731}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8570158,"byte_end":8570162,"line_start":189,"line_end":189,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1733},{"krate":0,"index":1734},{"krate":0,"index":1735}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read.rs","byte_start":8572343,"byte_end":8572347,"line_start":43,"line_end":43,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1757},{"krate":0,"index":1758}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_buf.rs","byte_start":8573481,"byte_end":8573488,"line_start":35,"line_end":35,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1777},{"krate":0,"index":1778}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_exact.rs","byte_start":8575869,"byte_end":8575878,"line_start":47,"line_end":47,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1800},{"krate":0,"index":1801}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_line.rs","byte_start":8584968,"byte_end":8584976,"line_start":111,"line_end":111,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1841},{"krate":0,"index":1842}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_to_end.rs","byte_start":8588629,"byte_end":8588638,"line_start":101,"line_end":101,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1869},{"krate":0,"index":1870}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":8589033,"byte_end":8589036,"line_start":7,"line_end":7,"column_start":21,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":8589325,"byte_end":8589328,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":8590028,"byte_end":8590046,"line_start":34,"line_end":34,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1882}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":8590226,"byte_end":8590244,"line_start":42,"line_end":42,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1885},{"krate":0,"index":1886},{"krate":0,"index":1887},{"krate":0,"index":1888},{"krate":0,"index":1890}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_to_string.rs","byte_start":8595614,"byte_end":8595626,"line_start":67,"line_end":67,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1918},{"krate":0,"index":1919}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_until.rs","byte_start":8597930,"byte_end":8597939,"line_start":72,"line_end":72,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1938},{"krate":0,"index":1939}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\repeat.rs","byte_start":8599517,"byte_end":8599523,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1950}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\shutdown.rs","byte_start":8600902,"byte_end":8600910,"line_start":36,"line_end":36,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1968},{"krate":0,"index":1969}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\sink.rs","byte_start":8602550,"byte_end":8602554,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1979},{"krate":0,"index":1980},{"krate":0,"index":1981}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\sink.rs","byte_start":8603064,"byte_end":8603068,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1983}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8604225,"byte_end":8604230,"line_start":40,"line_end":40,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2001}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8604969,"byte_end":8604974,"line_start":68,"line_end":68,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2008}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":8607287,"byte_end":8607291,"line_start":28,"line_end":28,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2027},{"krate":0,"index":2028},{"krate":0,"index":2029},{"krate":0,"index":2030},{"krate":0,"index":2031},{"krate":0,"index":2032}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":8608919,"byte_end":8608923,"line_start":77,"line_end":77,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2035}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":8609567,"byte_end":8609571,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2038},{"krate":0,"index":2039}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write.rs","byte_start":8611370,"byte_end":8611375,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2056},{"krate":0,"index":2057}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_all.rs","byte_start":8612410,"byte_end":8612418,"line_start":34,"line_end":34,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2074},{"krate":0,"index":2075}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_buf.rs","byte_start":8613903,"byte_end":8613911,"line_start":37,"line_end":37,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2094},{"krate":0,"index":2095}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":84098,"byte_end":84108,"line_start":51,"line_end":51,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":84148,"byte_end":84158,"line_start":53,"line_end":53,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":84460,"byte_end":84472,"line_start":65,"line_end":65,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":84512,"byte_end":84524,"line_start":67,"line_end":67,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":84821,"byte_end":84833,"line_start":78,"line_end":78,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":84873,"byte_end":84885,"line_start":80,"line_end":80,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":89216,"byte_end":89222,"line_start":226,"line_end":226,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":89266,"byte_end":89272,"line_start":228,"line_end":228,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2602},{"krate":0,"index":2603},{"krate":0,"index":2604}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":90825,"byte_end":90835,"line_start":283,"line_end":283,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2613},{"krate":0,"index":2614}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":91474,"byte_end":91483,"line_start":301,"line_end":301,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2616},{"krate":0,"index":2617},{"krate":0,"index":2618}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8621776,"byte_end":8621787,"line_start":57,"line_end":57,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2663},{"krate":0,"index":2668},{"krate":0,"index":2669},{"krate":0,"index":2673},{"krate":0,"index":2674},{"krate":0,"index":2675},{"krate":0,"index":2676},{"krate":0,"index":2677},{"krate":0,"index":2678}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8630066,"byte_end":8630077,"line_start":309,"line_end":309,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2680},{"krate":0,"index":2681}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8630403,"byte_end":8630414,"line_start":321,"line_end":321,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2683}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8630842,"byte_end":8630853,"line_start":344,"line_end":344,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2688}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8634143,"byte_end":8634152,"line_start":89,"line_end":89,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2702},{"krate":0,"index":2703},{"krate":0,"index":2704},{"krate":0,"index":2705},{"krate":0,"index":2706},{"krate":0,"index":2707},{"krate":0,"index":2708},{"krate":0,"index":2709},{"krate":0,"index":2710},{"krate":0,"index":2711},{"krate":0,"index":2712},{"krate":0,"index":2715}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8646793,"byte_end":8646802,"line_start":487,"line_end":487,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2717}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8647427,"byte_end":8647436,"line_start":515,"line_end":515,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2719}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8647566,"byte_end":8647575,"line_start":522,"line_end":522,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2721}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8647704,"byte_end":8647713,"line_start":529,"line_end":529,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2723}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8649769,"byte_end":8649777,"line_start":51,"line_end":51,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2739},{"krate":0,"index":2740}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8652580,"byte_end":8652588,"line_start":139,"line_end":139,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2745}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8652804,"byte_end":8652813,"line_start":149,"line_end":149,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2747},{"krate":0,"index":2748},{"krate":0,"index":2749},{"krate":0,"index":2750},{"krate":0,"index":2751}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8653730,"byte_end":8653738,"line_start":182,"line_end":182,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2753}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8653832,"byte_end":8653841,"line_start":188,"line_end":188,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2755}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8656727,"byte_end":8656739,"line_start":86,"line_end":86,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2779}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8656942,"byte_end":8656954,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8656964,"byte_end":8656977,"line_start":97,"line_end":97,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2782},{"krate":0,"index":2783},{"krate":0,"index":2784}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8660159,"byte_end":8660172,"line_start":194,"line_end":194,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2789}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8660373,"byte_end":8660387,"line_start":204,"line_end":204,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2791},{"krate":0,"index":2792}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8661070,"byte_end":8661084,"line_start":223,"line_end":223,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2794}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8661248,"byte_end":8661262,"line_start":231,"line_end":231,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2796},{"krate":0,"index":2797},{"krate":0,"index":2798},{"krate":0,"index":2799},{"krate":0,"index":2800}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8662309,"byte_end":8662322,"line_start":268,"line_end":268,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2802}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8662418,"byte_end":8662432,"line_start":274,"line_end":274,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2804}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8665119,"byte_end":8665128,"line_start":77,"line_end":77,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2845},{"krate":0,"index":2850},{"krate":0,"index":2853},{"krate":0,"index":2857},{"krate":0,"index":2858},{"krate":0,"index":2859},{"krate":0,"index":2862},{"krate":0,"index":2863},{"krate":0,"index":2864},{"krate":0,"index":2865},{"krate":0,"index":2868},{"krate":0,"index":2871},{"krate":0,"index":2873},{"krate":0,"index":3079},{"krate":0,"index":2876},{"krate":0,"index":2879},{"krate":0,"index":2881},{"krate":0,"index":2884},{"krate":0,"index":2888},{"krate":0,"index":2889},{"krate":0,"index":2890},{"krate":0,"index":2891},{"krate":0,"index":2892},{"krate":0,"index":2893},{"krate":0,"index":2894},{"krate":0,"index":2895},{"krate":0,"index":2896},{"krate":0,"index":2898},{"krate":0,"index":2899},{"krate":0,"index":2900},{"krate":0,"index":2901}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8698398,"byte_end":8698407,"line_start":1042,"line_end":1042,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2903},{"krate":0,"index":2904}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8698765,"byte_end":8698774,"line_start":1056,"line_end":1056,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2906}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8698984,"byte_end":8698993,"line_start":1066,"line_end":1066,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2908},{"krate":0,"index":2909},{"krate":0,"index":2910},{"krate":0,"index":2911},{"krate":0,"index":2912}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8699819,"byte_end":8699828,"line_start":1099,"line_end":1099,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2914}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8700250,"byte_end":8700259,"line_start":1122,"line_end":1122,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2919}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8704987,"byte_end":8704996,"line_start":125,"line_end":125,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2945},{"krate":0,"index":2950},{"krate":0,"index":2951},{"krate":0,"index":2952},{"krate":0,"index":2953},{"krate":0,"index":2954},{"krate":0,"index":2959},{"krate":0,"index":2962},{"krate":0,"index":2965},{"krate":0,"index":2969},{"krate":0,"index":2971},{"krate":0,"index":2973},{"krate":0,"index":2976},{"krate":0,"index":2980},{"krate":0,"index":2981},{"krate":0,"index":3087},{"krate":0,"index":3090},{"krate":0,"index":2983},{"krate":0,"index":2987},{"krate":0,"index":2989},{"krate":0,"index":2991},{"krate":0,"index":2995},{"krate":0,"index":2999},{"krate":0,"index":3000},{"krate":0,"index":3002},{"krate":0,"index":3006},{"krate":0,"index":3007},{"krate":0,"index":3008},{"krate":0,"index":3009},{"krate":0,"index":3010},{"krate":0,"index":3011},{"krate":0,"index":3012},{"krate":0,"index":3013},{"krate":0,"index":3014},{"krate":0,"index":3015},{"krate":0,"index":3016},{"krate":0,"index":3017},{"krate":0,"index":3018},{"krate":0,"index":3019},{"krate":0,"index":3020},{"krate":0,"index":3021}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8747599,"byte_end":8747608,"line_start":1353,"line_end":1353,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3023},{"krate":0,"index":3024}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8747933,"byte_end":8747942,"line_start":1365,"line_end":1365,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3026}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8748369,"byte_end":8748378,"line_start":1388,"line_end":1388,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3031}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":95237,"byte_end":95246,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":95420,"byte_end":95429,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":95576,"byte_end":95585,"line_start":24,"line_end":24,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":95698,"byte_end":95707,"line_start":30,"line_end":30,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u16.rs","byte_start":96051,"byte_end":96060,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u16.rs","byte_start":96085,"byte_end":96094,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u16.rs","byte_start":96104,"byte_end":96113,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u16.rs","byte_start":96605,"byte_end":96614,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u16.rs","byte_start":96899,"byte_end":96908,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u32.rs","byte_start":97249,"byte_end":97258,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u32.rs","byte_start":97283,"byte_end":97292,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u32.rs","byte_start":97302,"byte_end":97311,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u32.rs","byte_start":97496,"byte_end":97505,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u32.rs","byte_start":97790,"byte_end":97799,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u8.rs","byte_start":100310,"byte_end":100318,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u8.rs","byte_start":100343,"byte_end":100351,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u8.rs","byte_start":100361,"byte_end":100369,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u8.rs","byte_start":100550,"byte_end":100558,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u8.rs","byte_start":100842,"byte_end":100850,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_usize.rs","byte_start":101190,"byte_end":101201,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_usize.rs","byte_start":101226,"byte_end":101237,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_usize.rs","byte_start":101247,"byte_end":101258,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_usize.rs","byte_start":101947,"byte_end":101958,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_usize.rs","byte_start":102248,"byte_end":102259,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_usize.rs","byte_start":102423,"byte_end":102434,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\mutex.rs","byte_start":102765,"byte_end":102770,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\unsafe_cell.rs","byte_start":103448,"byte_end":103458,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\either.rs","byte_start":8748686,"byte_end":8748692,"line_start":13,"line_end":13,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3127},{"krate":0,"index":3128},{"krate":0,"index":3129},{"krate":0,"index":3130},{"krate":0,"index":3131},{"krate":0,"index":3132}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\either.rs","byte_start":8749649,"byte_end":8749655,"line_start":50,"line_end":50,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3136}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\either.rs","byte_start":8749869,"byte_end":8749875,"line_start":63,"line_end":63,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3140}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":108622,"byte_end":108632,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":108897,"byte_end":108907,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":109433,"byte_end":109438,"line_start":78,"line_end":78,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":114203,"byte_end":114213,"line_start":203,"line_end":203,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":114322,"byte_end":114334,"line_start":211,"line_end":211,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":114689,"byte_end":114705,"line_start":229,"line_end":229,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":569},{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":115968,"byte_end":115984,"line_start":272,"line_end":272,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":116579,"byte_end":116591,"line_start":295,"line_end":295,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":116771,"byte_end":116776,"line_start":304,"line_end":304,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\mod.rs","byte_start":107669,"byte_end":107672,"line_start":106,"line_end":106,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\mod.rs","byte_start":107761,"byte_end":107764,"line_start":112,"line_end":112,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\windows.rs","byte_start":8796609,"byte_end":8796614,"line_start":49,"line_end":49,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3210}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\windows.rs","byte_start":8797002,"byte_end":8797009,"line_start":65,"line_end":65,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\windows.rs","byte_start":8797034,"byte_end":8797041,"line_start":66,"line_end":66,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\windows.rs","byte_start":8797456,"byte_end":8797461,"line_start":85,"line_end":85,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3219},{"krate":0,"index":3220}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\windows.rs","byte_start":8797659,"byte_end":8797664,"line_start":95,"line_end":95,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3222}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\windows.rs","byte_start":8797761,"byte_end":8797766,"line_start":101,"line_end":101,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3224},{"krate":0,"index":3225}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\windows.rs","byte_start":8799368,"byte_end":8799375,"line_start":147,"line_end":147,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3227}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8757571,"byte_end":8757578,"line_start":231,"line_end":231,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3267},{"krate":0,"index":3269},{"krate":0,"index":3271},{"krate":0,"index":3274},{"krate":0,"index":3277},{"krate":0,"index":3281},{"krate":0,"index":3283},{"krate":0,"index":3284},{"krate":0,"index":3286},{"krate":0,"index":3288},{"krate":0,"index":3290},{"krate":0,"index":3292},{"krate":0,"index":3293},{"krate":0,"index":3294},{"krate":0,"index":3299},{"krate":0,"index":3302}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8777143,"byte_end":8777150,"line_start":804,"line_end":804,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3306}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8777480,"byte_end":8777494,"line_start":820,"line_end":820,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3309}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8777700,"byte_end":8777714,"line_start":832,"line_end":832,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3312}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8777851,"byte_end":8777865,"line_start":840,"line_end":840,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3317},{"krate":0,"index":3318}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8780707,"byte_end":8780712,"line_start":923,"line_end":923,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3320},{"krate":0,"index":3321},{"krate":0,"index":3322},{"krate":0,"index":3325},{"krate":0,"index":3328},{"krate":0,"index":3329}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8788720,"byte_end":8788730,"line_start":1136,"line_end":1136,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3338},{"krate":0,"index":3339},{"krate":0,"index":3340}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8789185,"byte_end":8789196,"line_start":1154,"line_end":1154,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3342}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8789484,"byte_end":8789495,"line_start":1165,"line_end":1165,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3344}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8789788,"byte_end":8789798,"line_start":1176,"line_end":1176,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3346},{"krate":0,"index":3347}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8789959,"byte_end":8789970,"line_start":1184,"line_end":1184,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3349},{"krate":0,"index":3350}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8790131,"byte_end":8790142,"line_start":1192,"line_end":1192,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3352},{"krate":0,"index":3353}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8790947,"byte_end":8790957,"line_start":1231,"line_end":1231,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3363}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8791088,"byte_end":8791099,"line_start":1237,"line_end":1237,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3365}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8791230,"byte_end":8791241,"line_start":1243,"line_end":1243,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3367}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\enter.rs","byte_start":8821592,"byte_end":8821604,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3418}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\enter.rs","byte_start":8823355,"byte_end":8823360,"line_start":72,"line_end":72,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3934}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\enter.rs","byte_start":8824550,"byte_end":8824571,"line_start":114,"line_end":114,"column_start":19,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3943}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\enter.rs","byte_start":8825287,"byte_end":8825292,"line_start":141,"line_end":141,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3948},{"krate":0,"index":3951}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\enter.rs","byte_start":8826932,"byte_end":8826937,"line_start":192,"line_end":192,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3422}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\enter.rs","byte_start":8827067,"byte_end":8827072,"line_start":198,"line_end":198,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3424}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":8834894,"byte_end":8834900,"line_start":76,"line_end":76,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":8834925,"byte_end":8834931,"line_start":77,"line_end":77,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":8835290,"byte_end":8835294,"line_start":92,"line_end":92,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3485}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":8836181,"byte_end":8836190,"line_start":119,"line_end":119,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3488},{"krate":0,"index":3491},{"krate":0,"index":3493},{"krate":0,"index":3495},{"krate":0,"index":3497},{"krate":0,"index":3499}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":8839344,"byte_end":8839353,"line_start":205,"line_end":205,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3504},{"krate":0,"index":3507},{"krate":0,"index":3509},{"krate":0,"index":3510},{"krate":0,"index":3511},{"krate":0,"index":3514}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":8842029,"byte_end":8842035,"line_start":293,"line_end":293,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3960},{"krate":0,"index":3962}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":8842391,"byte_end":8842398,"line_start":307,"line_end":307,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3517},{"krate":0,"index":3519},{"krate":0,"index":3521}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8843329,"byte_end":8843338,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3537},{"krate":0,"index":3538},{"krate":0,"index":3539},{"krate":0,"index":3540},{"krate":0,"index":3541},{"krate":0,"index":3542}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8846064,"byte_end":8846073,"line_start":115,"line_end":115,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3544}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8846316,"byte_end":8846325,"line_start":124,"line_end":124,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3546}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8846602,"byte_end":8846611,"line_start":133,"line_end":133,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8846645,"byte_end":8846650,"line_start":135,"line_end":135,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3549}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\harness.rs","byte_start":8847403,"byte_end":8847410,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3581},{"krate":0,"index":3582},{"krate":0,"index":3583},{"krate":0,"index":3584},{"krate":0,"index":3585}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\harness.rs","byte_start":8848065,"byte_end":8848072,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3589},{"krate":0,"index":3590},{"krate":0,"index":3591},{"krate":0,"index":3592},{"krate":0,"index":3593},{"krate":0,"index":3594},{"krate":0,"index":3595},{"krate":0,"index":3596},{"krate":0,"index":3597},{"krate":0,"index":3598},{"krate":0,"index":3599}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\harness.rs","byte_start":8853445,"byte_end":8853458,"line_start":209,"line_end":209,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3614},{"krate":0,"index":3615},{"krate":0,"index":3616}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\harness.rs","byte_start":8860439,"byte_end":8860444,"line_start":414,"line_end":414,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3646}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8865917,"byte_end":8865927,"line_start":150,"line_end":150,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8865964,"byte_end":8865974,"line_start":151,"line_end":151,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8865990,"byte_end":8866000,"line_start":153,"line_end":153,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3663},{"krate":0,"index":3664}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8867235,"byte_end":8867245,"line_start":200,"line_end":200,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8867272,"byte_end":8867282,"line_start":202,"line_end":202,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3669},{"krate":0,"index":3670}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8868508,"byte_end":8868518,"line_start":241,"line_end":241,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3673}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8868784,"byte_end":8868794,"line_start":253,"line_end":253,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3676}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\raw.rs","byte_start":8870041,"byte_end":8870048,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3702},{"krate":0,"index":3705},{"krate":0,"index":3706},{"krate":0,"index":3707},{"krate":0,"index":3708},{"krate":0,"index":3709},{"krate":0,"index":3710},{"krate":0,"index":3711}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\raw.rs","byte_start":8871579,"byte_end":8871586,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3713}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\raw.rs","byte_start":8871676,"byte_end":8871683,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\state.rs","byte_start":8874365,"byte_end":8874370,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3755},{"krate":0,"index":3756},{"krate":0,"index":3757},{"krate":0,"index":3759},{"krate":0,"index":3761},{"krate":0,"index":3763},{"krate":0,"index":3765},{"krate":0,"index":3766},{"krate":0,"index":3768},{"krate":0,"index":3772},{"krate":0,"index":3774},{"krate":0,"index":3776},{"krate":0,"index":3778},{"krate":0,"index":3781},{"krate":0,"index":3782}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\state.rs","byte_start":8883226,"byte_end":8883234,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3785},{"krate":0,"index":3786},{"krate":0,"index":3787},{"krate":0,"index":3788},{"krate":0,"index":3789},{"krate":0,"index":3790},{"krate":0,"index":3791},{"krate":0,"index":3792},{"krate":0,"index":3793},{"krate":0,"index":3794},{"krate":0,"index":3795},{"krate":0,"index":3796},{"krate":0,"index":3797},{"krate":0,"index":3798},{"krate":0,"index":3799},{"krate":0,"index":3800},{"krate":0,"index":3801},{"krate":0,"index":3802},{"krate":0,"index":3803}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\state.rs","byte_start":8885111,"byte_end":8885116,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3805}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\state.rs","byte_start":8885275,"byte_end":8885283,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3807}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\waker.rs","byte_start":8887101,"byte_end":8887109,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3833},{"krate":0,"index":3834}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\stack.rs","byte_start":8888857,"byte_end":8888870,"line_start":15,"line_end":15,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3995},{"krate":0,"index":3996},{"krate":0,"index":3998}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\stack.rs","byte_start":8890028,"byte_end":8890032,"line_start":55,"line_end":55,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4007},{"krate":0,"index":4008}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\stack.rs","byte_start":8890432,"byte_end":8890436,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4012}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":8828067,"byte_end":8828071,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":8828102,"byte_end":8828106,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":8828243,"byte_end":8828251,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":8828292,"byte_end":8828300,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":8830287,"byte_end":8830291,"line_start":122,"line_end":122,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3882},{"krate":0,"index":3883}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":8830592,"byte_end":8830600,"line_start":136,"line_end":136,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4023},{"krate":0,"index":4024}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":8830851,"byte_end":8830855,"line_start":146,"line_end":146,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4027}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":8831048,"byte_end":8831056,"line_start":154,"line_end":154,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4030}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":8831187,"byte_end":8831191,"line_start":161,"line_end":161,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3886}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":8831360,"byte_end":8831368,"line_start":168,"line_end":168,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3889},{"krate":0,"index":3890}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":8831654,"byte_end":8831658,"line_start":181,"line_end":181,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3893}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":8831898,"byte_end":8831902,"line_start":191,"line_end":191,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3896}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":8832054,"byte_end":8832062,"line_start":197,"line_end":197,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3899}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":8832278,"byte_end":8832282,"line_start":206,"line_end":206,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3902},{"krate":0,"index":3903},{"krate":0,"index":3904},{"krate":0,"index":3905},{"krate":0,"index":3906}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":8893167,"byte_end":8893181,"line_start":96,"line_end":96,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4084},{"krate":0,"index":4085},{"krate":0,"index":4086},{"krate":0,"index":4089}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":8895419,"byte_end":8895424,"line_start":173,"line_end":173,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4092}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":8898047,"byte_end":8898052,"line_start":245,"line_end":245,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4110}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":8898745,"byte_end":8898759,"line_start":269,"line_end":269,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4114}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":8899978,"byte_end":8899992,"line_start":307,"line_end":307,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4118}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":8900158,"byte_end":8900165,"line_start":315,"line_end":315,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4120},{"krate":0,"index":4122},{"krate":0,"index":4123}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":8900695,"byte_end":8900702,"line_start":336,"line_end":336,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4125}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":8900870,"byte_end":8900873,"line_start":344,"line_end":344,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4127},{"krate":0,"index":4129},{"krate":0,"index":4132}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":8901962,"byte_end":8901968,"line_start":380,"line_end":380,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4135},{"krate":0,"index":4136}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":8902430,"byte_end":8902440,"line_start":401,"line_end":401,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4144}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":8902715,"byte_end":8902725,"line_start":409,"line_end":409,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4148}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\pool.rs","byte_start":8907208,"byte_end":8907220,"line_start":103,"line_end":103,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4206},{"krate":0,"index":4207},{"krate":0,"index":4208}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\pool.rs","byte_start":8909795,"byte_end":8909807,"line_start":173,"line_end":173,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4212}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\pool.rs","byte_start":8909893,"byte_end":8909905,"line_start":179,"line_end":179,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4214}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\pool.rs","byte_start":8910066,"byte_end":8910073,"line_start":187,"line_end":187,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4216},{"krate":0,"index":4217}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\pool.rs","byte_start":8912505,"byte_end":8912510,"line_start":265,"line_end":265,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4220}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\pool.rs","byte_start":8915749,"byte_end":8915756,"line_start":361,"line_end":361,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4222}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\schedule.rs","byte_start":8916259,"byte_end":8916271,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4234},{"krate":0,"index":4235},{"krate":0,"index":4236}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\shutdown.rs","byte_start":8917144,"byte_end":8917152,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4243}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\task.rs","byte_start":8918901,"byte_end":8918913,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4256}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\task.rs","byte_start":8919139,"byte_end":8919151,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\task.rs","byte_start":8919181,"byte_end":8919193,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4262},{"krate":0,"index":4263}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8922387,"byte_end":8922394,"line_start":85,"line_end":85,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4298},{"krate":0,"index":4299},{"krate":0,"index":4300},{"krate":0,"index":4302},{"krate":0,"index":4303},{"krate":0,"index":4304},{"krate":0,"index":4305},{"krate":0,"index":4308},{"krate":0,"index":4310},{"krate":0,"index":4311},{"krate":0,"index":4313},{"krate":0,"index":4315},{"krate":0,"index":4316},{"krate":0,"index":4317},{"krate":0,"index":4318}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8933385,"byte_end":8933392,"line_start":453,"line_end":453,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4426}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8933954,"byte_end":8933961,"line_start":477,"line_end":477,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4428}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8935204,"byte_end":8935211,"line_start":525,"line_end":525,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4430}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8936649,"byte_end":8936656,"line_start":565,"line_end":565,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4323}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\context.rs","byte_start":8939176,"byte_end":8939186,"line_start":73,"line_end":73,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4335}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\driver.rs","byte_start":8943728,"byte_end":8943734,"line_start":168,"line_end":168,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4354}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\driver.rs","byte_start":8944318,"byte_end":8944324,"line_start":189,"line_end":189,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4356},{"krate":0,"index":4357},{"krate":0,"index":4358},{"krate":0,"index":4359},{"krate":0,"index":4360},{"krate":0,"index":4361}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8946072,"byte_end":8946078,"line_start":47,"line_end":47,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4379},{"krate":0,"index":4380},{"krate":0,"index":4381},{"krate":0,"index":4382},{"krate":0,"index":4384}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8951454,"byte_end":8951469,"line_start":209,"line_end":209,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4391}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8951617,"byte_end":8951632,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4393}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8951772,"byte_end":8951787,"line_start":221,"line_end":221,"column_start":23,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\spawner.rs","byte_start":8952172,"byte_end":8952179,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4400}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\spawner.rs","byte_start":8952421,"byte_end":8952428,"line_start":32,"line_end":32,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4505}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\park.rs","byte_start":8954022,"byte_end":8954028,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4538}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\park.rs","byte_start":8954491,"byte_end":8954497,"line_start":69,"line_end":69,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4540}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\park.rs","byte_start":8954813,"byte_end":8954819,"line_start":82,"line_end":82,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4542},{"krate":0,"index":4543},{"krate":0,"index":4544},{"krate":0,"index":4545},{"krate":0,"index":4546},{"krate":0,"index":4548}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\park.rs","byte_start":8955538,"byte_end":8955546,"line_start":113,"line_end":113,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4550}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\park.rs","byte_start":8955615,"byte_end":8955620,"line_start":119,"line_end":119,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4552},{"krate":0,"index":4553},{"krate":0,"index":4554},{"krate":0,"index":4555},{"krate":0,"index":4556},{"krate":0,"index":4557},{"krate":0,"index":4558}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":8962828,"byte_end":8962833,"line_start":66,"line_end":66,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":8962864,"byte_end":8962869,"line_start":67,"line_end":67,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":8962900,"byte_end":8962906,"line_start":68,"line_end":68,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":8962937,"byte_end":8962943,"line_start":69,"line_end":69,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":8963802,"byte_end":8963807,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4615},{"krate":0,"index":4616},{"krate":0,"index":4618},{"krate":0,"index":4623}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":8970388,"byte_end":8970393,"line_start":295,"line_end":295,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4627},{"krate":0,"index":4628},{"krate":0,"index":4630}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":8975561,"byte_end":8975566,"line_start":445,"line_end":445,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4635}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":8975662,"byte_end":8975667,"line_start":451,"line_end":451,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4638}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":8975826,"byte_end":8975831,"line_start":459,"line_end":459,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4641}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":8976019,"byte_end":8976025,"line_start":468,"line_end":468,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4644},{"krate":0,"index":4645},{"krate":0,"index":4646},{"krate":0,"index":4647},{"krate":0,"index":4648},{"krate":0,"index":4649},{"krate":0,"index":4650},{"krate":0,"index":4651}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":8979485,"byte_end":8979491,"line_start":599,"line_end":599,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4654}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":8983450,"byte_end":8983460,"line_start":10,"line_end":10,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":8983497,"byte_end":8983507,"line_start":11,"line_end":11,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":8983523,"byte_end":8983533,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4674},{"krate":0,"index":4675},{"krate":0,"index":4676},{"krate":0,"index":4677}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":8984287,"byte_end":8984297,"line_start":46,"line_end":46,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4684}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\idle.rs","byte_start":8985103,"byte_end":8985107,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":4701},{"krate":0,"index":4702},{"krate":0,"index":4703},{"krate":0,"index":4704},{"krate":0,"index":4705},{"krate":0,"index":4706},{"krate":0,"index":4707},{"krate":0,"index":4708}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\idle.rs","byte_start":8988945,"byte_end":8988950,"line_start":141,"line_end":141,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4710},{"krate":0,"index":4711},{"krate":0,"index":4712},{"krate":0,"index":4713},{"krate":0,"index":4714},{"krate":0,"index":4715},{"krate":0,"index":4716},{"krate":0,"index":4717}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\idle.rs","byte_start":8990428,"byte_end":8990433,"line_start":193,"line_end":193,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4719}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\idle.rs","byte_start":8990606,"byte_end":8990611,"line_start":205,"line_end":205,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4723}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":8996406,"byte_end":8996411,"line_start":184,"line_end":184,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4790}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":8999742,"byte_end":8999748,"line_start":276,"line_end":276,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4796}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":9000523,"byte_end":9000530,"line_start":307,"line_end":307,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4801},{"krate":0,"index":4802},{"krate":0,"index":4804},{"krate":0,"index":4805},{"krate":0,"index":4806}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":9004817,"byte_end":9004821,"line_start":440,"line_end":440,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":4808},{"krate":0,"index":4809},{"krate":0,"index":4812},{"krate":0,"index":4814},{"krate":0,"index":4815},{"krate":0,"index":4816},{"krate":0,"index":4817},{"krate":0,"index":4818},{"krate":0,"index":4819},{"krate":0,"index":4820},{"krate":0,"index":4821},{"krate":0,"index":4822}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":9009932,"byte_end":9009938,"line_start":605,"line_end":605,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4825},{"krate":0,"index":4826},{"krate":0,"index":4827}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":9010378,"byte_end":9010381,"line_start":621,"line_end":621,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4829},{"krate":0,"index":4831},{"krate":0,"index":4840},{"krate":0,"index":4841}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":9013685,"byte_end":9013691,"line_start":720,"line_end":720,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4843},{"krate":0,"index":4845},{"krate":0,"index":4846},{"krate":0,"index":4847},{"krate":0,"index":4848},{"krate":0,"index":4849},{"krate":0,"index":4850},{"krate":0,"index":4851},{"krate":0,"index":4852}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":8981497,"byte_end":8981507,"line_start":45,"line_end":45,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4865},{"krate":0,"index":4866},{"krate":0,"index":4867}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":8982441,"byte_end":8982451,"line_start":75,"line_end":75,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4870}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":8982590,"byte_end":8982600,"line_start":81,"line_end":81,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4872}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":8982703,"byte_end":8982710,"line_start":89,"line_end":89,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4874},{"krate":0,"index":4876}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":8983131,"byte_end":8983138,"line_start":106,"line_end":106,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4878}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8811151,"byte_end":8811158,"line_start":289,"line_end":289,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4900},{"krate":0,"index":4901},{"krate":0,"index":4902},{"krate":0,"index":4904},{"krate":0,"index":4907},{"krate":0,"index":4909},{"krate":0,"index":4910},{"krate":0,"index":4911}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\coop.rs","byte_start":121542,"byte_end":121548,"line_start":65,"line_end":65,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\coop.rs","byte_start":122320,"byte_end":122326,"line_start":87,"line_end":87,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4940}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\coop.rs","byte_start":122908,"byte_end":122918,"line_start":108,"line_end":108,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\coop.rs","byte_start":123889,"byte_end":123905,"line_start":156,"line_end":156,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4955}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\coop.rs","byte_start":124037,"byte_end":124053,"line_start":162,"line_end":162,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4957}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\coop.rs","byte_start":125793,"byte_end":125799,"line_start":203,"line_end":203,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4962},{"krate":0,"index":4963}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9034756,"byte_end":9034763,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4969},{"krate":0,"index":4970}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9038042,"byte_end":9038059,"line_start":130,"line_end":130,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4974}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9045498,"byte_end":9045507,"line_start":221,"line_end":221,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5011}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9045683,"byte_end":9045692,"line_start":227,"line_end":227,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9046340,"byte_end":9046349,"line_start":246,"line_end":246,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5015}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9046654,"byte_end":9046663,"line_start":255,"line_end":255,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9047586,"byte_end":9047598,"line_start":281,"line_end":281,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5018}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9047976,"byte_end":9047988,"line_start":291,"line_end":291,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9049951,"byte_end":9049955,"line_start":377,"line_end":377,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9050000,"byte_end":9050004,"line_start":378,"line_end":378,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9052778,"byte_end":9052784,"line_start":468,"line_end":468,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9052821,"byte_end":9052827,"line_start":469,"line_end":469,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9052865,"byte_end":9052873,"line_start":471,"line_end":471,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9052910,"byte_end":9052918,"line_start":472,"line_end":472,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9052934,"byte_end":9052940,"line_start":474,"line_end":474,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5071},{"krate":0,"index":5073},{"krate":0,"index":5074},{"krate":0,"index":5075}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9058550,"byte_end":9058554,"line_start":661,"line_end":661,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5081}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9058946,"byte_end":9058952,"line_start":676,"line_end":676,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5084}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9059132,"byte_end":9059138,"line_start":685,"line_end":685,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5087}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9059292,"byte_end":9059300,"line_start":693,"line_end":693,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5090}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9064163,"byte_end":9064171,"line_start":811,"line_end":811,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5094},{"krate":0,"index":5097}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9068347,"byte_end":9068355,"line_start":928,"line_end":928,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5100}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9068981,"byte_end":9068985,"line_start":951,"line_end":951,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5104},{"krate":0,"index":5105}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9069764,"byte_end":9069768,"line_start":977,"line_end":977,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5109},{"krate":0,"index":5110}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9070429,"byte_end":9070433,"line_start":997,"line_end":997,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5114}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9071181,"byte_end":9071187,"line_start":1023,"line_end":1023,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5118},{"krate":0,"index":5119},{"krate":0,"index":5120},{"krate":0,"index":5121},{"krate":0,"index":5122}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9071602,"byte_end":9071608,"line_start":1040,"line_end":1040,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5125}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9071752,"byte_end":9071760,"line_start":1046,"line_end":1046,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5128}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9071895,"byte_end":9071904,"line_start":1052,"line_end":1052,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5132}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9072077,"byte_end":9072086,"line_start":1061,"line_end":1061,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5137}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\block.rs","byte_start":9078968,"byte_end":9078973,"line_start":75,"line_end":75,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5187},{"krate":0,"index":5188},{"krate":0,"index":5189},{"krate":0,"index":5190},{"krate":0,"index":5192},{"krate":0,"index":5194},{"krate":0,"index":5195},{"krate":0,"index":5196},{"krate":0,"index":5198},{"krate":0,"index":5199},{"krate":0,"index":5200},{"krate":0,"index":5202},{"krate":0,"index":5203},{"krate":0,"index":5205}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\block.rs","byte_start":9089074,"byte_end":9089080,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5211}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\block.rs","byte_start":9089562,"byte_end":9089568,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5214},{"krate":0,"index":5215}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9092957,"byte_end":9092965,"line_start":105,"line_end":105,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5243},{"krate":0,"index":5244},{"krate":0,"index":5249},{"krate":0,"index":5250},{"krate":0,"index":5251}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9099977,"byte_end":9099985,"line_start":302,"line_end":302,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5254}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9100181,"byte_end":9100189,"line_start":310,"line_end":310,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9100205,"byte_end":9100211,"line_start":312,"line_end":312,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5259},{"krate":0,"index":5260},{"krate":0,"index":5263},{"krate":0,"index":5266},{"krate":0,"index":5267},{"krate":0,"index":5270},{"krate":0,"index":5271},{"krate":0,"index":5272},{"krate":0,"index":5275}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9113103,"byte_end":9113109,"line_start":703,"line_end":703,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5278}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9113241,"byte_end":9113247,"line_start":711,"line_end":711,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5281}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9113459,"byte_end":9113465,"line_start":721,"line_end":721,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5284}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9114715,"byte_end":9114721,"line_start":764,"line_end":764,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5288}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9115048,"byte_end":9115054,"line_start":779,"line_end":779,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5292}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":9115715,"byte_end":9115717,"line_start":19,"line_end":19,"column_start":39,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5323}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":9116010,"byte_end":9116012,"line_start":30,"line_end":30,"column_start":51,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5331}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":9116949,"byte_end":9116953,"line_start":68,"line_end":68,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5349}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":9117586,"byte_end":9117594,"line_start":92,"line_end":92,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5356}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":9117860,"byte_end":9117864,"line_start":101,"line_end":101,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":9117913,"byte_end":9117917,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":9118424,"byte_end":9118426,"line_start":124,"line_end":124,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5369},{"krate":0,"index":5370},{"krate":0,"index":5371},{"krate":0,"index":5372}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":9118858,"byte_end":9118860,"line_start":144,"line_end":144,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5376},{"krate":0,"index":5377}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":9119410,"byte_end":9119412,"line_start":162,"line_end":162,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5383}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":9119751,"byte_end":9119753,"line_start":174,"line_end":174,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5387}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":9120076,"byte_end":9120078,"line_start":190,"line_end":190,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5391},{"krate":0,"index":5392},{"krate":0,"index":5394}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":9123469,"byte_end":9123471,"line_start":287,"line_end":287,"column_start":32,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5401}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":9123883,"byte_end":9123887,"line_start":305,"line_end":305,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5407}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":9124072,"byte_end":9124076,"line_start":315,"line_end":315,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5411}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":9125077,"byte_end":9125088,"line_start":355,"line_end":355,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5424},{"krate":0,"index":5425},{"krate":0,"index":5426},{"krate":0,"index":5427}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\list.rs","byte_start":9126829,"byte_end":9126831,"line_start":54,"line_end":54,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5456},{"krate":0,"index":5457},{"krate":0,"index":5458},{"krate":0,"index":5460}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\list.rs","byte_start":9132544,"byte_end":9132546,"line_start":211,"line_end":211,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5463}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\list.rs","byte_start":9132823,"byte_end":9132825,"line_start":220,"line_end":220,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5466},{"krate":0,"index":5467},{"krate":0,"index":5468},{"krate":0,"index":5469}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\list.rs","byte_start":9136224,"byte_end":9136226,"line_start":331,"line_end":331,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5472}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9136884,"byte_end":9136899,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5486}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9137040,"byte_end":9137055,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5489}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9137728,"byte_end":9137745,"line_start":45,"line_end":45,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5495}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9138744,"byte_end":9138761,"line_start":75,"line_end":75,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5501},{"krate":0,"index":5502},{"krate":0,"index":5507},{"krate":0,"index":5508},{"krate":0,"index":5509}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9142059,"byte_end":9142074,"line_start":183,"line_end":183,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5512},{"krate":0,"index":5513},{"krate":0,"index":5514},{"krate":0,"index":5519},{"krate":0,"index":5522}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":9145764,"byte_end":9145773,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5532}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":9145933,"byte_end":9145942,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":9146428,"byte_end":9146440,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":9146473,"byte_end":9146485,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5539}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":9146825,"byte_end":9146837,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5542}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":9147066,"byte_end":9147075,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5544}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":9147205,"byte_end":9147214,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":9148715,"byte_end":9148731,"line_start":116,"line_end":116,"column_start":35,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":9148768,"byte_end":9148784,"line_start":118,"line_end":118,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6237}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9155156,"byte_end":9155161,"line_start":159,"line_end":159,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9155215,"byte_end":9155220,"line_start":160,"line_end":160,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9155274,"byte_end":9155284,"line_start":161,"line_end":161,"column_start":25,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9155349,"byte_end":9155364,"line_start":162,"line_end":162,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9156043,"byte_end":9156055,"line_start":181,"line_end":181,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5576}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9156192,"byte_end":9156204,"line_start":187,"line_end":187,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9157012,"byte_end":9157017,"line_start":213,"line_end":213,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5580},{"krate":0,"index":5581},{"krate":0,"index":5584},{"krate":0,"index":5587},{"krate":0,"index":5591},{"krate":0,"index":5592},{"krate":0,"index":5593},{"krate":0,"index":5594}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9162770,"byte_end":9162775,"line_start":416,"line_end":416,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5597}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9162859,"byte_end":9162864,"line_start":422,"line_end":422,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5600}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9162988,"byte_end":9162993,"line_start":431,"line_end":431,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5603}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9163388,"byte_end":9163398,"line_start":447,"line_end":447,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5606}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9163499,"byte_end":9163509,"line_start":453,"line_end":453,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5609},{"krate":0,"index":5610}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9163656,"byte_end":9163666,"line_start":460,"line_end":460,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5613}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9163823,"byte_end":9163833,"line_start":466,"line_end":466,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5616}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9163999,"byte_end":9164009,"line_start":472,"line_end":472,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":5619}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9164187,"byte_end":9164202,"line_start":480,"line_end":480,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5622}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9164299,"byte_end":9164314,"line_start":486,"line_end":486,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5625},{"krate":0,"index":5626}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9164457,"byte_end":9164472,"line_start":493,"line_end":493,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5629}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9164625,"byte_end":9164640,"line_start":499,"line_end":499,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5632}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9164802,"byte_end":9164817,"line_start":505,"line_end":505,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":5635}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9169680,"byte_end":9169688,"line_start":156,"line_end":156,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9169721,"byte_end":9169729,"line_start":157,"line_end":157,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9170559,"byte_end":9170565,"line_start":195,"line_end":195,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5673},{"krate":0,"index":5674},{"krate":0,"index":5675},{"krate":0,"index":5676}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9179141,"byte_end":9179147,"line_start":455,"line_end":455,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5680}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9181057,"byte_end":9181065,"line_start":510,"line_end":510,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5683}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9181578,"byte_end":9181586,"line_start":526,"line_end":526,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5685},{"krate":0,"index":5686}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9187282,"byte_end":9187290,"line_start":668,"line_end":668,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5689}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9190345,"byte_end":9190351,"line_start":732,"line_end":732,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5692},{"krate":0,"index":5693},{"krate":0,"index":5694},{"krate":0,"index":5695},{"krate":0,"index":5696}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9192227,"byte_end":9192236,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5722}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9192398,"byte_end":9192407,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9192476,"byte_end":9192488,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5725}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9192787,"byte_end":9192799,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9193293,"byte_end":9193297,"line_start":95,"line_end":95,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5738},{"krate":0,"index":5740},{"krate":0,"index":5744},{"krate":0,"index":5746}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9195333,"byte_end":9195339,"line_start":174,"line_end":174,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5752},{"krate":0,"index":5754},{"krate":0,"index":5759},{"krate":0,"index":5760}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9202966,"byte_end":9202972,"line_start":427,"line_end":427,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5763}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9203111,"byte_end":9203119,"line_start":435,"line_end":435,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5766},{"krate":0,"index":5767}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9207510,"byte_end":9207518,"line_start":584,"line_end":584,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5770}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9207665,"byte_end":9207673,"line_start":592,"line_end":592,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5773},{"krate":0,"index":5774}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9208136,"byte_end":9208141,"line_start":608,"line_end":608,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5777},{"krate":0,"index":5778},{"krate":0,"index":5779},{"krate":0,"index":5780}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9211247,"byte_end":9211252,"line_start":706,"line_end":706,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9211289,"byte_end":9211294,"line_start":707,"line_end":707,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9211395,"byte_end":9211400,"line_start":713,"line_end":713,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5790}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9211777,"byte_end":9211782,"line_start":731,"line_end":731,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5793}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9212177,"byte_end":9212182,"line_start":746,"line_end":746,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5800},{"krate":0,"index":5801},{"krate":0,"index":5802},{"krate":0,"index":5803},{"krate":0,"index":5804},{"krate":0,"index":5805},{"krate":0,"index":5806},{"krate":0,"index":5807},{"krate":0,"index":5808},{"krate":0,"index":5809},{"krate":0,"index":5810},{"krate":0,"index":5811},{"krate":0,"index":5812}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9213895,"byte_end":9213900,"line_start":812,"line_end":812,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5814}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9217959,"byte_end":9217968,"line_start":107,"line_end":107,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5855},{"krate":0,"index":5856},{"krate":0,"index":5857},{"krate":0,"index":5858},{"krate":0,"index":5859},{"krate":0,"index":5860},{"krate":0,"index":5861},{"krate":0,"index":5863},{"krate":0,"index":5864},{"krate":0,"index":5865},{"krate":0,"index":5866},{"krate":0,"index":5870}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9228993,"byte_end":9229002,"line_start":397,"line_end":397,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5874}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9229201,"byte_end":9229207,"line_start":405,"line_end":405,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5876},{"krate":0,"index":5877}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9230073,"byte_end":9230080,"line_start":434,"line_end":434,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5879},{"krate":0,"index":5880}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9230758,"byte_end":9230765,"line_start":458,"line_end":458,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5883},{"krate":0,"index":5884}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9231564,"byte_end":9231571,"line_start":488,"line_end":488,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5888}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9232821,"byte_end":9232828,"line_start":518,"line_end":518,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9232875,"byte_end":9232887,"line_start":522,"line_end":522,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5891}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9232980,"byte_end":9232992,"line_start":528,"line_end":528,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5893}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9233136,"byte_end":9233148,"line_start":534,"line_end":534,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9233195,"byte_end":9233210,"line_start":538,"line_end":538,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5896},{"krate":0,"index":5897}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9233728,"byte_end":9233743,"line_start":553,"line_end":553,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5899}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9234029,"byte_end":9234044,"line_start":562,"line_end":562,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9234137,"byte_end":9234143,"line_start":567,"line_end":567,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5902},{"krate":0,"index":5903},{"krate":0,"index":5904},{"krate":0,"index":5905},{"krate":0,"index":5906}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9237011,"byte_end":9237020,"line_start":66,"line_end":66,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5917},{"krate":0,"index":5918},{"krate":0,"index":5919},{"krate":0,"index":5920},{"krate":0,"index":5923},{"krate":0,"index":5926},{"krate":0,"index":5927},{"krate":0,"index":5928},{"krate":0,"index":5931},{"krate":0,"index":5932}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9243358,"byte_end":9243373,"line_start":239,"line_end":239,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5935}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9243618,"byte_end":9243638,"line_start":248,"line_end":248,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5937}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9243892,"byte_end":9243907,"line_start":257,"line_end":257,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5940}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9244015,"byte_end":9244035,"line_start":263,"line_end":263,"column_start":15,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5942}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9247447,"byte_end":9247462,"line_start":97,"line_end":97,"column_start":13,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5967},{"krate":0,"index":5970}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9250880,"byte_end":9250895,"line_start":202,"line_end":202,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5976}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9251075,"byte_end":9251090,"line_start":211,"line_end":211,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5980}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9251266,"byte_end":9251281,"line_start":220,"line_end":220,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5984}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9251745,"byte_end":9251761,"line_start":240,"line_end":240,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5994}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9253383,"byte_end":9253399,"line_start":293,"line_end":293,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5998}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9253579,"byte_end":9253595,"line_start":302,"line_end":302,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":6002}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9253771,"byte_end":9253787,"line_start":311,"line_end":311,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6006}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9254863,"byte_end":9254869,"line_start":346,"line_end":346,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9254923,"byte_end":9254929,"line_start":347,"line_end":347,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9255163,"byte_end":9255178,"line_start":351,"line_end":351,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9255236,"byte_end":9255251,"line_start":352,"line_end":352,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9255316,"byte_end":9255332,"line_start":353,"line_end":353,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9255645,"byte_end":9255661,"line_start":358,"line_end":358,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9255719,"byte_end":9255725,"line_start":360,"line_end":360,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6021},{"krate":0,"index":6022},{"krate":0,"index":6026},{"krate":0,"index":6027},{"krate":0,"index":6031},{"krate":0,"index":6032},{"krate":0,"index":6033}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9263094,"byte_end":9263109,"line_start":605,"line_end":605,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6036},{"krate":0,"index":6037}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9263240,"byte_end":9263256,"line_start":613,"line_end":613,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6040},{"krate":0,"index":6041}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9263390,"byte_end":9263406,"line_start":621,"line_end":621,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6044}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9263520,"byte_end":9263526,"line_start":627,"line_end":627,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6047}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9263618,"byte_end":9263624,"line_start":633,"line_end":633,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6050}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\task\\atomic_waker.rs","byte_start":9269899,"byte_end":9269910,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6074},{"krate":0,"index":6075},{"krate":0,"index":6076},{"krate":0,"index":6081},{"krate":0,"index":6082}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\task\\atomic_waker.rs","byte_start":9275932,"byte_end":9275943,"line_start":285,"line_end":285,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6085}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\task\\atomic_waker.rs","byte_start":9276029,"byte_end":9276040,"line_start":291,"line_end":291,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6087}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\task\\atomic_waker.rs","byte_start":9276173,"byte_end":9276184,"line_start":297,"line_end":297,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\task\\atomic_waker.rs","byte_start":9276209,"byte_end":9276220,"line_start":298,"line_end":298,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\task\\atomic_waker.rs","byte_start":9276316,"byte_end":9276321,"line_start":305,"line_end":305,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6094},{"krate":0,"index":6095}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9280550,"byte_end":9280559,"line_start":130,"line_end":130,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6116}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9280739,"byte_end":9280748,"line_start":136,"line_end":136,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9280941,"byte_end":9280950,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6120}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9281112,"byte_end":9281121,"line_start":150,"line_end":150,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9282327,"byte_end":9282335,"line_start":200,"line_end":200,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6127},{"krate":0,"index":6128}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9284868,"byte_end":9284876,"line_start":287,"line_end":287,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6135}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9285214,"byte_end":9285222,"line_start":300,"line_end":300,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6138}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9285592,"byte_end":9285598,"line_start":311,"line_end":311,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6141},{"krate":0,"index":6142},{"krate":0,"index":6143},{"krate":0,"index":6144}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9288182,"byte_end":9288188,"line_start":401,"line_end":401,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6149}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9288378,"byte_end":9288381,"line_start":410,"line_end":410,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6152},{"krate":0,"index":6153}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\yield_now.rs","byte_start":9300606,"byte_end":9300614,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6596},{"krate":0,"index":6597}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9311536,"byte_end":9311544,"line_start":323,"line_end":323,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6471},{"krate":0,"index":6472},{"krate":0,"index":6474},{"krate":0,"index":6476},{"krate":0,"index":6480},{"krate":0,"index":6482},{"krate":0,"index":6485}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9319537,"byte_end":9319545,"line_start":552,"line_end":552,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6489}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9319684,"byte_end":9319692,"line_start":558,"line_end":558,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6491},{"krate":0,"index":6492}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9320657,"byte_end":9320665,"line_start":582,"line_end":582,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6495}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9320746,"byte_end":9320754,"line_start":588,"line_end":588,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6497}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9321621,"byte_end":9321629,"line_start":618,"line_end":618,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6501},{"krate":0,"index":6502}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9322514,"byte_end":9322520,"line_start":649,"line_end":649,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6506},{"krate":0,"index":6508}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9323083,"byte_end":9323086,"line_start":668,"line_end":668,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6510},{"krate":0,"index":6512},{"krate":0,"index":6515}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9326593,"byte_end":9326601,"line_start":100,"line_end":100,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6538},{"krate":0,"index":6542},{"krate":0,"index":6545}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9328377,"byte_end":9328385,"line_start":165,"line_end":165,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6551}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9328593,"byte_end":9328601,"line_start":173,"line_end":173,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6555}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9328922,"byte_end":9328937,"line_start":188,"line_end":188,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6559},{"krate":0,"index":6560}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9329238,"byte_end":9329243,"line_start":198,"line_end":198,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6569}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9329861,"byte_end":9329862,"line_start":222,"line_end":222,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9330047,"byte_end":9330058,"line_start":230,"line_end":230,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6576}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9330202,"byte_end":9330213,"line_start":236,"line_end":236,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6578}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9330360,"byte_end":9330371,"line_start":242,"line_end":242,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\clock.rs","byte_start":9333938,"byte_end":9333943,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7004},{"krate":0,"index":7005},{"krate":0,"index":7006},{"krate":0,"index":7007}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":9358374,"byte_end":9358383,"line_start":99,"line_end":99,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6653}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":9358467,"byte_end":9358476,"line_start":105,"line_end":105,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6655}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":9358622,"byte_end":9358631,"line_start":111,"line_end":111,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6657},{"krate":0,"index":6658},{"krate":0,"index":6659},{"krate":0,"index":6660},{"krate":0,"index":6661},{"krate":0,"index":6663},{"krate":0,"index":6664},{"krate":0,"index":6666},{"krate":0,"index":6667},{"krate":0,"index":6668}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":9365649,"byte_end":9365659,"line_start":302,"line_end":302,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":9365684,"byte_end":9365694,"line_start":303,"line_end":303,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":9367135,"byte_end":9367146,"line_start":339,"line_end":339,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6673},{"krate":0,"index":6674},{"krate":0,"index":6675},{"krate":0,"index":6676},{"krate":0,"index":6677},{"krate":0,"index":6678},{"krate":0,"index":6679},{"krate":0,"index":6680},{"krate":0,"index":6681}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":9370669,"byte_end":9370686,"line_start":437,"line_end":437,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6687}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":9370987,"byte_end":9371004,"line_start":446,"line_end":446,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6689}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":9371243,"byte_end":9371254,"line_start":456,"line_end":456,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":9371279,"byte_end":9371290,"line_start":457,"line_end":457,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":9371329,"byte_end":9371340,"line_start":459,"line_end":459,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6693},{"krate":0,"index":6694},{"krate":0,"index":6695},{"krate":0,"index":6696},{"krate":0,"index":6697}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":9371858,"byte_end":9371868,"line_start":481,"line_end":481,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6699},{"krate":0,"index":6700},{"krate":0,"index":6701},{"krate":0,"index":6702},{"krate":0,"index":6703},{"krate":0,"index":6704}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":9374744,"byte_end":9374755,"line_start":556,"line_end":556,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6706},{"krate":0,"index":6707},{"krate":0,"index":6708},{"krate":0,"index":6709},{"krate":0,"index":6710},{"krate":0,"index":6711}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":9377146,"byte_end":9377156,"line_start":616,"line_end":616,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6713}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\handle.rs","byte_start":9377661,"byte_end":9377667,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6726},{"krate":0,"index":6727},{"krate":0,"index":6728}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\handle.rs","byte_start":9378238,"byte_end":9378244,"line_start":31,"line_end":31,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7046}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\handle.rs","byte_start":9380280,"byte_end":9380286,"line_start":79,"line_end":79,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6730}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\wheel\\level.rs","byte_start":9392884,"byte_end":9392889,"line_start":42,"line_end":42,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6752},{"krate":0,"index":6754},{"krate":0,"index":6755},{"krate":0,"index":6756},{"krate":0,"index":6757},{"krate":0,"index":6758}],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\wheel\\level.rs","byte_start":9398957,"byte_end":9398962,"line_start":233,"line_end":233,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6760}],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\wheel\\mod.rs","byte_start":9381907,"byte_end":9381912,"line_start":52,"line_end":52,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6772},{"krate":0,"index":6773},{"krate":0,"index":6774},{"krate":0,"index":6775},{"krate":0,"index":6776},{"krate":0,"index":6778},{"krate":0,"index":6780},{"krate":0,"index":6781},{"krate":0,"index":6783},{"krate":0,"index":6784},{"krate":0,"index":6785},{"krate":0,"index":6786},{"krate":0,"index":6787}],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9404752,"byte_end":9404757,"line_start":159,"line_end":159,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6807},{"krate":0,"index":6808},{"krate":0,"index":6809},{"krate":0,"index":6810},{"krate":0,"index":6811}],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9406759,"byte_end":9406764,"line_start":225,"line_end":225,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6814},{"krate":0,"index":6815}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":9343357,"byte_end":9343366,"line_start":102,"line_end":102,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6834},{"krate":0,"index":6835},{"krate":0,"index":6836},{"krate":0,"index":6838},{"krate":0,"index":6839}],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":9344773,"byte_end":9344779,"line_start":157,"line_end":157,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6849},{"krate":0,"index":6850},{"krate":0,"index":6851}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":9347785,"byte_end":9347791,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6855},{"krate":0,"index":6856},{"krate":0,"index":6860},{"krate":0,"index":6861}],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":9352485,"byte_end":9352491,"line_start":379,"line_end":379,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6865},{"krate":0,"index":6866},{"krate":0,"index":6867},{"krate":0,"index":6868},{"krate":0,"index":6869},{"krate":0,"index":6870}],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":9353222,"byte_end":9353228,"line_start":417,"line_end":417,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6873}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":9353354,"byte_end":9353359,"line_start":428,"line_end":428,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6875}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":9353667,"byte_end":9353672,"line_start":441,"line_end":441,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6877}],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9408915,"byte_end":9408920,"line_start":37,"line_end":37,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6887}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9409161,"byte_end":9409166,"line_start":54,"line_end":54,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6889},{"krate":0,"index":6890},{"krate":0,"index":6891},{"krate":0,"index":6892},{"krate":0,"index":6893},{"krate":0,"index":6894}],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9410066,"byte_end":9410071,"line_start":86,"line_end":86,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9410098,"byte_end":9410103,"line_start":88,"line_end":88,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6897}],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9410565,"byte_end":9410572,"line_start":102,"line_end":102,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6900}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9410660,"byte_end":9410667,"line_start":108,"line_end":108,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6902}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9410811,"byte_end":9410818,"line_start":114,"line_end":114,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9410855,"byte_end":9410860,"line_start":116,"line_end":116,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6905}],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9412402,"byte_end":9412409,"line_start":38,"line_end":38,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6911},{"krate":0,"index":6912},{"krate":0,"index":6913},{"krate":0,"index":6914},{"krate":0,"index":6915},{"krate":0,"index":6916},{"krate":0,"index":6917},{"krate":0,"index":6918},{"krate":0,"index":6919}],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9416159,"byte_end":9416166,"line_start":153,"line_end":153,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6921}],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9416295,"byte_end":9416302,"line_start":159,"line_end":159,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6923}],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9416417,"byte_end":9416424,"line_start":165,"line_end":165,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6925},{"krate":0,"index":6926}],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9416589,"byte_end":9416596,"line_start":173,"line_end":173,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6928}],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9416701,"byte_end":9416708,"line_start":179,"line_end":179,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6930},{"krate":0,"index":6931}],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9416849,"byte_end":9416856,"line_start":187,"line_end":187,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6933},{"krate":0,"index":6934}],"docs":"","sig":null,"attributes":[]},{"id":628,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9417017,"byte_end":9417024,"line_start":195,"line_end":195,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6936}],"docs":"","sig":null,"attributes":[]},{"id":629,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9417131,"byte_end":9417138,"line_start":201,"line_end":201,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6938}],"docs":"","sig":null,"attributes":[]},{"id":630,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9421316,"byte_end":9421324,"line_start":128,"line_end":128,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6958},{"krate":0,"index":6962}],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9426093,"byte_end":9426100,"line_start":114,"line_end":114,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6986},{"krate":0,"index":6987},{"krate":0,"index":6988},{"krate":0,"index":6989}],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9426638,"byte_end":9426645,"line_start":135,"line_end":135,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6992},{"krate":0,"index":6993}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\bit.rs","byte_start":9427290,"byte_end":9427294,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":7149},{"krate":0,"index":7150},{"krate":0,"index":7151},{"krate":0,"index":7152},{"krate":0,"index":7153},{"krate":0,"index":7154},{"krate":0,"index":7155}],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\bit.rs","byte_start":9428722,"byte_end":9428726,"line_start":53,"line_end":53,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7157}],"docs":"","sig":null,"attributes":[]},{"id":635,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9433876,"byte_end":9433880,"line_start":142,"line_end":142,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":636,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9433917,"byte_end":9433921,"line_start":143,"line_end":143,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":637,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9433958,"byte_end":9433968,"line_start":144,"line_end":144,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":638,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9434005,"byte_end":9434015,"line_start":145,"line_end":145,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":639,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9434052,"byte_end":9434055,"line_start":146,"line_end":146,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":640,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9434092,"byte_end":9434095,"line_start":147,"line_end":147,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":641,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9434711,"byte_end":9434715,"line_start":173,"line_end":173,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7231},{"krate":0,"index":7232},{"krate":0,"index":7233},{"krate":0,"index":7234},{"krate":0,"index":7236}],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9440321,"byte_end":9440325,"line_start":321,"line_end":321,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7239}],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9440464,"byte_end":9440473,"line_start":327,"line_end":327,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7242}],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9441040,"byte_end":9441049,"line_start":346,"line_end":346,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7245}],"docs":"","sig":null,"attributes":[]},{"id":645,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9441207,"byte_end":9441210,"line_start":352,"line_end":352,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7248},{"krate":0,"index":7249}],"docs":"","sig":null,"attributes":[]},{"id":646,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9441472,"byte_end":9441475,"line_start":362,"line_end":362,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7252}],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9441742,"byte_end":9441745,"line_start":370,"line_end":370,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7255}],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9441866,"byte_end":9441870,"line_start":376,"line_end":376,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7258}],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9444377,"byte_end":9444381,"line_start":451,"line_end":451,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7262},{"krate":0,"index":7263}],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9444725,"byte_end":9444729,"line_start":464,"line_end":464,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7266}],"docs":"","sig":null,"attributes":[]},{"id":651,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9445077,"byte_end":9445081,"line_start":480,"line_end":480,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7269}],"docs":"","sig":null,"attributes":[]},{"id":652,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9445443,"byte_end":9445453,"line_start":494,"line_end":494,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":7272},{"krate":0,"index":7273}],"docs":"","sig":null,"attributes":[]},{"id":653,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9446390,"byte_end":9446400,"line_start":524,"line_end":524,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7276}],"docs":"","sig":null,"attributes":[]},{"id":654,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9446543,"byte_end":9446548,"line_start":533,"line_end":533,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7279}],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9447431,"byte_end":9447435,"line_start":563,"line_end":563,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7283}],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9447995,"byte_end":9448000,"line_start":578,"line_end":578,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7286}],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9448326,"byte_end":9448333,"line_start":588,"line_end":588,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7288},{"krate":0,"index":7289},{"krate":0,"index":7290}],"docs":"","sig":null,"attributes":[]},{"id":658,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":138741,"byte_end":138751,"line_start":29,"line_end":29,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":659,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":138821,"byte_end":138831,"line_start":30,"line_end":30,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":140131,"byte_end":140139,"line_start":70,"line_end":70,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":140176,"byte_end":140184,"line_start":71,"line_end":71,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":662,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":140235,"byte_end":140245,"line_start":75,"line_end":75,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":140480,"byte_end":140490,"line_start":86,"line_end":86,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":143339,"byte_end":143349,"line_start":176,"line_end":176,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":143706,"byte_end":143716,"line_start":191,"line_end":191,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":143903,"byte_end":143913,"line_start":198,"line_end":198,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":144190,"byte_end":144200,"line_start":212,"line_end":212,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7325}],"docs":"","sig":null,"attributes":[]},{"id":668,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":144433,"byte_end":144437,"line_start":221,"line_end":221,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7329},{"krate":0,"index":7330}],"docs":"","sig":null,"attributes":[]},{"id":669,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":145085,"byte_end":145095,"line_start":244,"line_end":244,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7340}],"docs":"","sig":null,"attributes":[]},{"id":670,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":145464,"byte_end":145475,"line_start":258,"line_end":258,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":7346},{"krate":0,"index":7347}],"docs":"","sig":null,"attributes":[]},{"id":671,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":146149,"byte_end":146157,"line_start":283,"line_end":283,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":672,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":146356,"byte_end":146364,"line_start":293,"line_end":293,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\rand.rs","byte_start":156744,"byte_end":156752,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\wake.rs","byte_start":9455935,"byte_end":9455943,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7370},{"krate":0,"index":7371}],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\try_lock.rs","byte_start":9458031,"byte_end":9458038,"line_start":18,"line_end":18,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\try_lock.rs","byte_start":9458075,"byte_end":9458082,"line_start":19,"line_end":19,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\try_lock.rs","byte_start":9458120,"byte_end":9458129,"line_start":21,"line_end":21,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":678,"kind":"Inherent","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\try_lock.rs","byte_start":9458315,"byte_end":9458322,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7424},{"krate":0,"index":7425}],"docs":"","sig":null,"attributes":[]},{"id":679,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\try_lock.rs","byte_start":9458956,"byte_end":9458965,"line_start":62,"line_end":62,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7428},{"krate":0,"index":7429}],"docs":"","sig":null,"attributes":[]},{"id":680,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\try_lock.rs","byte_start":9459097,"byte_end":9459106,"line_start":70,"line_end":70,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7432}],"docs":"","sig":null,"attributes":[]},{"id":681,"kind":"Direct","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\try_lock.rs","byte_start":9459228,"byte_end":9459237,"line_start":76,"line_end":76,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7435}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14339,"byte_end":14345,"line_start":351,"line_end":351,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\mod.rs","byte_start":18014,"byte_end":18021,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":75}},{"kind":"Mod","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14398,"byte_end":14400,"line_start":359,"line_end":359,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":123}},{"kind":"Mod","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14410,"byte_end":14413,"line_start":360,"line_end":360,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":300}},{"kind":"Mod","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\mod.rs","byte_start":82370,"byte_end":82373,"line_start":34,"line_end":34,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":2644}},{"kind":"Mod","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14464,"byte_end":14471,"line_start":366,"line_end":366,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":3165}},{"kind":"Mod","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14578,"byte_end":14585,"line_start":373,"line_end":373,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":3410}},{"kind":"Mod","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14816,"byte_end":14820,"line_start":390,"line_end":390,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":4964}},{"kind":"Mod","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9032326,"byte_end":9032335,"line_start":434,"line_end":434,"column_start":13,"column_end":22},"ref_id":{"krate":0,"index":4978}},{"kind":"Mod","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9032350,"byte_end":9032354,"line_start":436,"line_end":436,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":5141}},{"kind":"Mod","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\mod.rs","byte_start":9076368,"byte_end":9076373,"line_start":85,"line_end":85,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":5527}},{"kind":"Mod","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9032512,"byte_end":9032519,"line_start":444,"line_end":444,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":5700}},{"kind":"Mod","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mod.rs","byte_start":9032863,"byte_end":9032868,"line_start":458,"line_end":458,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":6101}},{"kind":"Mod","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14865,"byte_end":14869,"line_start":396,"line_end":396,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":634}},{"kind":"Mod","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\lib.rs","byte_start":14933,"byte_end":14937,"line_start":402,"line_end":402,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":6623}},{"kind":"Mod","span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\mod.rs","byte_start":9333132,"byte_end":9333137,"line_start":101,"line_end":101,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":6882}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\scoped_tls.rs","byte_start":30343,"byte_end":30352,"line_start":30,"line_end":30,"column_start":25,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":53},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\scoped_tls.rs","byte_start":30368,"byte_end":30377,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":53},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\macros\\scoped_tls.rs","byte_start":30727,"byte_end":30732,"line_start":44,"line_end":44,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":64},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":32692,"byte_end":32701,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":714},"to":{"krate":2,"index":2086}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":32864,"byte_end":32873,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":714},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\maybe_done.rs","byte_start":34060,"byte_end":34069,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":714},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\poll_fn.rs","byte_start":34845,"byte_end":34851,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":106},"to":{"krate":2,"index":2086}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\poll_fn.rs","byte_start":35065,"byte_end":35071,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":106},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\poll_fn.rs","byte_start":35213,"byte_end":35219,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":106},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\ready.rs","byte_start":8378377,"byte_end":8378382,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":745},"to":{"krate":2,"index":2086}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\ready.rs","byte_start":8378409,"byte_end":8378414,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":745},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\future\\try_join.rs","byte_start":8379623,"byte_end":8379631,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":10369},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":45597,"byte_end":45606,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":160},"to":{"krate":0,"index":132}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":48056,"byte_end":48059,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"kind":{"Impl":{"id":12}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":132}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":48219,"byte_end":48222,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"kind":{"Impl":{"id":13}},"from":{"krate":2,"index":32457},"to":{"krate":0,"index":132}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_buf_read.rs","byte_start":48851,"byte_end":48857,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"kind":{"Impl":{"id":14}},"from":{"krate":1,"index":7051},"to":{"krate":0,"index":132}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":51897,"byte_end":51900,"line_start":72,"line_end":72,"column_start":51,"column_end":54},"kind":{"Impl":{"id":15}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":52043,"byte_end":52046,"line_start":80,"line_end":80,"column_start":23,"column_end":26},"kind":{"Impl":{"id":16}},"from":{"krate":2,"index":32457},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_read.rs","byte_start":52715,"byte_end":52721,"line_start":108,"line_end":108,"column_start":48,"column_end":54},"kind":{"Impl":{"id":17}},"from":{"krate":1,"index":7051},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":55715,"byte_end":55718,"line_start":61,"line_end":61,"column_start":51,"column_end":54},"kind":{"Impl":{"id":18}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":185}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":55861,"byte_end":55864,"line_start":69,"line_end":69,"column_start":23,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":2,"index":32457},"to":{"krate":0,"index":185}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_seek.rs","byte_start":56255,"byte_end":56261,"line_start":83,"line_end":83,"column_start":48,"column_end":54},"kind":{"Impl":{"id":20}},"from":{"krate":1,"index":7051},"to":{"krate":0,"index":185}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":65731,"byte_end":65734,"line_start":213,"line_end":213,"column_start":53,"column_end":56},"kind":{"Impl":{"id":21}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":65882,"byte_end":65885,"line_start":221,"line_end":221,"column_start":24,"column_end":27},"kind":{"Impl":{"id":22}},"from":{"krate":2,"index":32457},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":66762,"byte_end":66765,"line_start":255,"line_end":255,"column_start":21,"column_end":24},"kind":{"Impl":{"id":23}},"from":{"krate":5,"index":4754},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":67563,"byte_end":67569,"line_start":286,"line_end":286,"column_start":25,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":1,"index":7051},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":68372,"byte_end":68378,"line_start":316,"line_end":316,"column_start":25,"column_end":31},"kind":{"Impl":{"id":25}},"from":{"krate":1,"index":7051},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":69184,"byte_end":69190,"line_start":346,"line_end":346,"column_start":25,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":1,"index":7051},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\async_write.rs","byte_start":69991,"byte_end":69997,"line_start":376,"line_end":376,"column_start":25,"column_end":31},"kind":{"Impl":{"id":27}},"from":{"krate":1,"index":7051},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":72038,"byte_end":72045,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\read_buf.rs","byte_start":81023,"byte_end":81030,"line_start":277,"line_end":277,"column_start":21,"column_end":28},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":267},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8391785,"byte_end":8391793,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1056},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8393934,"byte_end":8393942,"line_start":92,"line_end":92,"column_start":21,"column_end":29},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1056},"to":{"krate":2,"index":2171}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8394085,"byte_end":8394093,"line_start":101,"line_end":101,"column_start":27,"column_end":35},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1056},"to":{"krate":2,"index":2197}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\interest.rs","byte_start":8394221,"byte_end":8394229,"line_start":108,"line_end":108,"column_start":21,"column_end":29},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1056},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8394814,"byte_end":8394819,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1069},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8399236,"byte_end":8399241,"line_start":169,"line_end":169,"column_start":10,"column_end":15},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1069},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8399985,"byte_end":8399990,"line_start":196,"line_end":196,"column_start":28,"column_end":33},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1069},"to":{"krate":2,"index":2171}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8400151,"byte_end":8400156,"line_start":205,"line_end":205,"column_start":34,"column_end":39},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1069},"to":{"krate":2,"index":2197}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8400284,"byte_end":8400289,"line_start":212,"line_end":212,"column_start":29,"column_end":34},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1069},"to":{"krate":2,"index":2166}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8400443,"byte_end":8400448,"line_start":221,"line_end":221,"column_start":26,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1069},"to":{"krate":2,"index":2115}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\ready.rs","byte_start":8400595,"byte_end":8400600,"line_start":230,"line_end":230,"column_start":21,"column_end":26},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1069},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","byte_start":8403048,"byte_end":8403060,"line_start":50,"line_end":50,"column_start":22,"column_end":34},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1090},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","byte_start":8403085,"byte_end":8403097,"line_start":51,"line_end":51,"column_start":22,"column_end":34},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1090},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","byte_start":8403141,"byte_end":8403153,"line_start":55,"line_end":55,"column_start":6,"column_end":18},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","byte_start":8408581,"byte_end":8408593,"line_start":208,"line_end":208,"column_start":15,"column_end":27},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1090},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\registration.rs","byte_start":8409192,"byte_end":8409204,"line_start":226,"line_end":226,"column_start":10,"column_end":22},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8412607,"byte_end":8412618,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1115},"to":{"krate":0,"index":7185}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8412878,"byte_end":8412889,"line_start":115,"line_end":115,"column_start":18,"column_end":29},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1115},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8413069,"byte_end":8413080,"line_start":124,"line_end":124,"column_start":6,"column_end":17},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8421263,"byte_end":8421274,"line_start":366,"line_end":366,"column_start":15,"column_end":26},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1115},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8421363,"byte_end":8421374,"line_start":372,"line_end":372,"column_start":22,"column_end":33},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1115},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8421399,"byte_end":8421410,"line_start":373,"line_end":373,"column_start":22,"column_end":33},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1115},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8421444,"byte_end":8421455,"line_start":376,"line_end":376,"column_start":10,"column_end":21},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8422378,"byte_end":8422384,"line_start":401,"line_end":401,"column_start":39,"column_end":45},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1142},"to":{"krate":0,"index":651}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8422879,"byte_end":8422888,"line_start":420,"line_end":420,"column_start":21,"column_end":30},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1130},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8427562,"byte_end":8427571,"line_start":529,"line_end":529,"column_start":19,"column_end":28},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1130},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8427936,"byte_end":8427945,"line_start":542,"line_end":542,"column_start":26,"column_end":35},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1130},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\scheduled_io.rs","byte_start":8427978,"byte_end":8427987,"line_start":543,"line_end":543,"column_start":26,"column_end":35},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1130},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":8384374,"byte_end":8384380,"line_start":111,"line_end":111,"column_start":6,"column_end":12},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":8387186,"byte_end":8387192,"line_start":203,"line_end":203,"column_start":15,"column_end":21},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":966},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":8387307,"byte_end":8387312,"line_start":209,"line_end":209,"column_start":15,"column_end":20},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":975},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":8387756,"byte_end":8387762,"line_start":224,"line_end":224,"column_start":15,"column_end":21},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":966},"to":{"krate":0,"index":601}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":8388161,"byte_end":8388167,"line_start":245,"line_end":245,"column_start":21,"column_end":27},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":966},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":8388317,"byte_end":8388323,"line_start":254,"line_end":254,"column_start":10,"column_end":16},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":8389148,"byte_end":8389154,"line_start":281,"line_end":281,"column_start":6,"column_end":12},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":8389971,"byte_end":8389977,"line_start":302,"line_end":302,"column_start":17,"column_end":23},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1169},"to":{"krate":0,"index":608}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":8390055,"byte_end":8390061,"line_start":308,"line_end":308,"column_start":21,"column_end":27},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1169},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":8390196,"byte_end":8390201,"line_start":316,"line_end":316,"column_start":6,"column_end":11},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":975},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\driver\\mod.rs","byte_start":8391158,"byte_end":8391167,"line_start":346,"line_end":346,"column_start":6,"column_end":15},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\poll_evented.rs","byte_start":8431508,"byte_end":8431519,"line_start":76,"line_end":76,"column_start":17,"column_end":28},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\poll_evented.rs","byte_start":8434154,"byte_end":8434165,"line_start":143,"line_end":143,"column_start":21,"column_end":32},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\poll_evented.rs","byte_start":8435708,"byte_end":8435719,"line_start":190,"line_end":190,"column_start":27,"column_end":38},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1194},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\poll_evented.rs","byte_start":8435862,"byte_end":8435873,"line_start":198,"line_end":198,"column_start":45,"column_end":56},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1194},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\poll_evented.rs","byte_start":8436045,"byte_end":8436056,"line_start":204,"line_end":204,"column_start":26,"column_end":37},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1194},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8437807,"byte_end":8437815,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8438732,"byte_end":8438741,"line_start":92,"line_end":92,"column_start":9,"column_end":18},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8438991,"byte_end":8438999,"line_start":100,"line_end":100,"column_start":34,"column_end":42},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1323},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8439294,"byte_end":8439303,"line_start":111,"line_end":111,"column_start":36,"column_end":45},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1326},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8439982,"byte_end":8439987,"line_start":132,"line_end":132,"column_start":9,"column_end":14},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8440443,"byte_end":8440448,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1237},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8440701,"byte_end":8440706,"line_start":159,"line_end":159,"column_start":18,"column_end":23},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1237},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8440829,"byte_end":8440837,"line_start":165,"line_end":165,"column_start":31,"column_end":39},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1323},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8440874,"byte_end":8440883,"line_start":166,"line_end":166,"column_start":31,"column_end":40},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1326},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8440920,"byte_end":8440928,"line_start":167,"line_end":167,"column_start":31,"column_end":39},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1323},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8440965,"byte_end":8440974,"line_start":168,"line_end":168,"column_start":31,"column_end":40},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1326},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8441017,"byte_end":8441025,"line_start":170,"line_end":170,"column_start":36,"column_end":44},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1323},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\split.rs","byte_start":8441193,"byte_end":8441202,"line_start":176,"line_end":176,"column_start":36,"column_end":45},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1326},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\seek.rs","byte_start":8442159,"byte_end":8442163,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":10323},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":8445041,"byte_end":8445053,"line_start":11,"line_end":11,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":132},"to":{"krate":0,"index":2111}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_buf_read_ext.rs","byte_start":8454074,"byte_end":8454075,"line_start":257,"line_end":257,"column_start":52,"column_end":53},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1346},"to":{"krate":0,"index":2111}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":8455996,"byte_end":8456005,"line_start":61,"line_end":61,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":160},"to":{"krate":0,"index":2119}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_read_ext.rs","byte_start":8493402,"byte_end":8493403,"line_start":1115,"line_end":1115,"column_start":46,"column_end":47},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1393},"to":{"krate":0,"index":2119}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_seek_ext.rs","byte_start":8494328,"byte_end":8494337,"line_start":33,"line_end":33,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":185},"to":{"krate":0,"index":2170}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_seek_ext.rs","byte_start":8495512,"byte_end":8495513,"line_start":72,"line_end":72,"column_start":46,"column_end":47},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1402},"to":{"krate":0,"index":2170}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":8497465,"byte_end":8497475,"line_start":65,"line_end":65,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":211},"to":{"krate":0,"index":2173}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\async_write_ext.rs","byte_start":8530760,"byte_end":8530761,"line_start":1004,"line_end":1004,"column_start":48,"column_end":49},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1443},"to":{"krate":0,"index":2173}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":8532129,"byte_end":8532138,"line_start":36,"line_end":36,"column_start":20,"column_end":29},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":10271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":8533995,"byte_end":8534004,"line_start":98,"line_end":98,"column_start":34,"column_end":43},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":10271},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":8534814,"byte_end":8534823,"line_start":120,"line_end":120,"column_start":37,"column_end":46},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":10271},"to":{"krate":0,"index":132}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":8535736,"byte_end":8535745,"line_start":144,"line_end":144,"column_start":48,"column_end":57},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":10271},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_reader.rs","byte_start":8536256,"byte_end":8536265,"line_start":162,"line_end":162,"column_start":36,"column_end":45},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":10271},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8537754,"byte_end":8537763,"line_start":25,"line_end":25,"column_start":34,"column_end":43},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":10240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8539600,"byte_end":8539609,"line_start":81,"line_end":81,"column_start":45,"column_end":54},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":10240},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8539751,"byte_end":8539760,"line_start":87,"line_end":87,"column_start":45,"column_end":54},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":10240},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8540472,"byte_end":8540481,"line_start":117,"line_end":117,"column_start":49,"column_end":58},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":10240},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8541011,"byte_end":8541020,"line_start":135,"line_end":135,"column_start":48,"column_end":57},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":10240},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_stream.rs","byte_start":8541275,"byte_end":8541284,"line_start":145,"line_end":145,"column_start":51,"column_end":60},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":10240},"to":{"krate":0,"index":132}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":8543220,"byte_end":8543229,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":10194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":8545507,"byte_end":8545516,"line_start":116,"line_end":116,"column_start":36,"column_end":45},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":10194},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":8546406,"byte_end":8546415,"line_start":145,"line_end":145,"column_start":47,"column_end":56},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":10194},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":8546669,"byte_end":8546678,"line_start":155,"line_end":155,"column_start":53,"column_end":62},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":10194},"to":{"krate":0,"index":132}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\buf_writer.rs","byte_start":8546965,"byte_end":8546974,"line_start":165,"line_end":165,"column_start":36,"column_end":45},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":10194},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":8548152,"byte_end":8548157,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":10145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":8549297,"byte_end":8549302,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":10145},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":8549581,"byte_end":8549586,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":10145},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\chain.rs","byte_start":8550172,"byte_end":8550177,"line_start":107,"line_end":107,"column_start":29,"column_end":34},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":10145},"to":{"krate":0,"index":132}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\copy.rs","byte_start":8553012,"byte_end":8553016,"line_start":73,"line_end":73,"column_start":23,"column_end":27},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2219},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\copy_buf.rs","byte_start":8556710,"byte_end":8556717,"line_start":67,"line_end":67,"column_start":23,"column_end":30},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2247},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\empty.rs","byte_start":8558984,"byte_end":8558989,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2259},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\empty.rs","byte_start":8559203,"byte_end":8559208,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2259},"to":{"krate":0,"index":132}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\empty.rs","byte_start":8559441,"byte_end":8559446,"line_start":70,"line_end":70,"column_start":21,"column_end":26},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2259},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\flush.rs","byte_start":8560573,"byte_end":8560578,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":10103},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8561909,"byte_end":8561914,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":10053},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\lines.rs","byte_start":8563166,"byte_end":8563171,"line_start":90,"line_end":90,"column_start":9,"column_end":14},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":10053},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8567449,"byte_end":8567461,"line_start":91,"line_end":91,"column_start":20,"column_end":32},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2262},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8568005,"byte_end":8568017,"line_start":107,"line_end":107,"column_start":21,"column_end":33},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2262},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8568715,"byte_end":8568727,"line_start":134,"line_end":134,"column_start":15,"column_end":27},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2262},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8568878,"byte_end":8568882,"line_start":143,"line_end":143,"column_start":6,"column_end":10},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8569288,"byte_end":8569292,"line_start":162,"line_end":162,"column_start":20,"column_end":24},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2267},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\mem.rs","byte_start":8570158,"byte_end":8570162,"line_start":189,"line_end":189,"column_start":21,"column_end":25},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2267},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read.rs","byte_start":8572343,"byte_end":8572347,"line_start":43,"line_end":43,"column_start":20,"column_end":24},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":10002},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_buf.rs","byte_start":8573481,"byte_end":8573488,"line_start":35,"line_end":35,"column_start":23,"column_end":30},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":9942},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_exact.rs","byte_start":8575869,"byte_end":8575878,"line_start":47,"line_end":47,"column_start":20,"column_end":29},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":9887},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_line.rs","byte_start":8584968,"byte_end":8584976,"line_start":111,"line_end":111,"column_start":51,"column_end":59},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":8968},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_to_end.rs","byte_start":8588629,"byte_end":8588638,"line_start":101,"line_end":101,"column_start":20,"column_end":29},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":8911},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":8589033,"byte_end":8589036,"line_start":7,"line_end":7,"column_start":21,"column_end":24},"kind":{"Impl":{"id":131}},"from":{"krate":5,"index":4754},"to":{"krate":0,"index":1875}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":8589273,"byte_end":8589278,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1957},"to":{"krate":0,"index":1878}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":8589299,"byte_end":8589305,"line_start":13,"line_end":13,"column_start":51,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":1875},"to":{"krate":0,"index":1878}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":8589325,"byte_end":8589328,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"kind":{"Impl":{"id":132}},"from":{"krate":5,"index":4754},"to":{"krate":0,"index":1878}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":8590028,"byte_end":8590046,"line_start":34,"line_end":34,"column_start":6,"column_end":24},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\vec_with_initialized.rs","byte_start":8590226,"byte_end":8590244,"line_start":42,"line_end":42,"column_start":9,"column_end":27},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_to_string.rs","byte_start":8595614,"byte_end":8595626,"line_start":67,"line_end":67,"column_start":20,"column_end":32},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":8850},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\read_until.rs","byte_start":8597930,"byte_end":8597939,"line_start":72,"line_end":72,"column_start":51,"column_end":60},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":8789},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\repeat.rs","byte_start":8599517,"byte_end":8599523,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2428},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\shutdown.rs","byte_start":8600902,"byte_end":8600910,"line_start":36,"line_end":36,"column_start":20,"column_end":28},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":8740},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\sink.rs","byte_start":8602550,"byte_end":8602554,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2432},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\sink.rs","byte_start":8603064,"byte_end":8603068,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2432},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8604225,"byte_end":8604230,"line_start":40,"line_end":40,"column_start":9,"column_end":14},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":8690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\split.rs","byte_start":8604969,"byte_end":8604974,"line_start":68,"line_end":68,"column_start":9,"column_end":14},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":8690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":8607287,"byte_end":8607291,"line_start":28,"line_end":28,"column_start":20,"column_end":24},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":8650},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":8608919,"byte_end":8608923,"line_start":77,"line_end":77,"column_start":34,"column_end":38},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":8650},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\take.rs","byte_start":8609567,"byte_end":8609571,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":8650},"to":{"krate":0,"index":132}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write.rs","byte_start":8611370,"byte_end":8611375,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":8599},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_all.rs","byte_start":8612410,"byte_end":8612418,"line_start":34,"line_end":34,"column_start":20,"column_end":28},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":8546},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\io\\util\\write_buf.rs","byte_start":8613903,"byte_end":8613911,"line_start":37,"line_end":37,"column_start":23,"column_end":31},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":8486},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":83428,"byte_end":83445,"line_start":20,"line_end":20,"column_start":34,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":360},"to":{"krate":0,"index":311}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":84098,"byte_end":84108,"line_start":51,"line_end":51,"column_start":24,"column_end":34},"kind":{"Impl":{"id":149}},"from":{"krate":1,"index":7205},"to":{"krate":0,"index":311}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":84148,"byte_end":84158,"line_start":53,"line_end":53,"column_start":36,"column_end":46},"kind":{"Impl":{"id":150}},"from":{"krate":1,"index":7205},"to":{"krate":0,"index":360}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":84460,"byte_end":84472,"line_start":65,"line_end":65,"column_start":24,"column_end":36},"kind":{"Impl":{"id":151}},"from":{"krate":1,"index":7233},"to":{"krate":0,"index":311}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":84512,"byte_end":84524,"line_start":67,"line_end":67,"column_start":36,"column_end":48},"kind":{"Impl":{"id":152}},"from":{"krate":1,"index":7233},"to":{"krate":0,"index":360}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":84821,"byte_end":84833,"line_start":78,"line_end":78,"column_start":24,"column_end":36},"kind":{"Impl":{"id":153}},"from":{"krate":1,"index":7236},"to":{"krate":0,"index":311}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":84873,"byte_end":84885,"line_start":80,"line_end":80,"column_start":36,"column_end":48},"kind":{"Impl":{"id":154}},"from":{"krate":1,"index":7236},"to":{"krate":0,"index":360}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":89216,"byte_end":89222,"line_start":226,"line_end":226,"column_start":28,"column_end":34},"kind":{"Impl":{"id":157}},"from":{"krate":5,"index":5501},"to":{"krate":0,"index":311}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":89266,"byte_end":89272,"line_start":228,"line_end":228,"column_start":40,"column_end":46},"kind":{"Impl":{"id":158}},"from":{"krate":5,"index":5501},"to":{"krate":0,"index":360}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":90825,"byte_end":90835,"line_start":283,"line_end":283,"column_start":25,"column_end":35},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2619},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\addr.rs","byte_start":91474,"byte_end":91483,"line_start":301,"line_end":301,"column_start":27,"column_end":36},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2633},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8621776,"byte_end":8621787,"line_start":57,"line_end":57,"column_start":6,"column_end":17},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":3043},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8630066,"byte_end":8630077,"line_start":309,"line_end":309,"column_start":36,"column_end":47},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":3043},"to":{"krate":2,"index":1970}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8630403,"byte_end":8630414,"line_start":321,"line_end":321,"column_start":21,"column_end":32},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":3043},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\listener.rs","byte_start":8630842,"byte_end":8630853,"line_start":344,"line_end":344,"column_start":26,"column_end":37},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3043},"to":{"krate":1,"index":9241}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8634143,"byte_end":8634152,"line_start":89,"line_end":89,"column_start":6,"column_end":15},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3045},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8646793,"byte_end":8646802,"line_start":487,"line_end":487,"column_start":21,"column_end":30},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3045},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8647427,"byte_end":8647436,"line_start":515,"line_end":515,"column_start":24,"column_end":33},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3045},"to":{"krate":1,"index":9245}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8647566,"byte_end":8647575,"line_start":522,"line_end":522,"column_start":22,"column_end":31},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3045},"to":{"krate":1,"index":9241}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\socket.rs","byte_start":8647704,"byte_end":8647713,"line_start":529,"line_end":529,"column_start":24,"column_end":33},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3045},"to":{"krate":1,"index":9243}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8649769,"byte_end":8649777,"line_start":51,"line_end":51,"column_start":6,"column_end":14},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3047},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8652580,"byte_end":8652588,"line_start":139,"line_end":139,"column_start":20,"column_end":28},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3047},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8652804,"byte_end":8652813,"line_start":149,"line_end":149,"column_start":21,"column_end":30},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3054},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8653730,"byte_end":8653738,"line_start":182,"line_end":182,"column_start":27,"column_end":35},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3047},"to":{"krate":2,"index":1954}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split.rs","byte_start":8653832,"byte_end":8653841,"line_start":188,"line_end":188,"column_start":27,"column_end":36},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":3054},"to":{"krate":2,"index":1954}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8656727,"byte_end":8656739,"line_start":86,"line_end":86,"column_start":23,"column_end":35},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3070},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8656942,"byte_end":8656954,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3070},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8656964,"byte_end":8656977,"line_start":97,"line_end":97,"column_start":6,"column_end":19},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3061},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8660159,"byte_end":8660172,"line_start":194,"line_end":194,"column_start":20,"column_end":33},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3061},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8660373,"byte_end":8660387,"line_start":204,"line_end":204,"column_start":6,"column_end":20},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3065},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8661070,"byte_end":8661084,"line_start":223,"line_end":223,"column_start":15,"column_end":29},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3065},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8661248,"byte_end":8661262,"line_start":231,"line_end":231,"column_start":21,"column_end":35},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3065},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8662309,"byte_end":8662322,"line_start":268,"line_end":268,"column_start":27,"column_end":40},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3061},"to":{"krate":2,"index":1954}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\split_owned.rs","byte_start":8662418,"byte_end":8662432,"line_start":274,"line_end":274,"column_start":27,"column_end":41},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":3065},"to":{"krate":2,"index":1954}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8665119,"byte_end":8665128,"line_start":77,"line_end":77,"column_start":6,"column_end":15},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":3077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8698398,"byte_end":8698407,"line_start":1042,"line_end":1042,"column_start":39,"column_end":48},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3077},"to":{"krate":2,"index":1970}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8698765,"byte_end":8698774,"line_start":1056,"line_end":1056,"column_start":20,"column_end":29},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":3077},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8698984,"byte_end":8698993,"line_start":1066,"line_end":1066,"column_start":21,"column_end":30},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":3077},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8699819,"byte_end":8699828,"line_start":1099,"line_end":1099,"column_start":21,"column_end":30},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3077},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\tcp\\stream.rs","byte_start":8700250,"byte_end":8700259,"line_start":1122,"line_end":1122,"column_start":26,"column_end":35},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3077},"to":{"krate":1,"index":9241}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8704987,"byte_end":8704996,"line_start":125,"line_end":125,"column_start":6,"column_end":15},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":3084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8747599,"byte_end":8747608,"line_start":1353,"line_end":1353,"column_start":39,"column_end":48},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":3084},"to":{"krate":2,"index":1970}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8747933,"byte_end":8747942,"line_start":1365,"line_end":1365,"column_start":21,"column_end":30},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":3084},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\net\\udp.rs","byte_start":8748369,"byte_end":8748378,"line_start":1388,"line_end":1388,"column_start":26,"column_end":35},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":3084},"to":{"krate":1,"index":9241}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":95237,"byte_end":95246,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":95420,"byte_end":95429,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":375},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":95576,"byte_end":95585,"line_start":24,"line_end":24,"column_start":22,"column_end":31},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":375},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_ptr.rs","byte_start":95698,"byte_end":95707,"line_start":30,"line_end":30,"column_start":24,"column_end":33},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":375},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u16.rs","byte_start":96051,"byte_end":96060,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u16.rs","byte_start":96085,"byte_end":96094,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u16.rs","byte_start":96104,"byte_end":96113,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":395},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u16.rs","byte_start":96605,"byte_end":96614,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u16.rs","byte_start":96899,"byte_end":96908,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u32.rs","byte_start":97249,"byte_end":97258,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u32.rs","byte_start":97283,"byte_end":97292,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u32.rs","byte_start":97302,"byte_end":97311,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u32.rs","byte_start":97496,"byte_end":97505,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u32.rs","byte_start":97790,"byte_end":97799,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u8.rs","byte_start":100310,"byte_end":100318,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u8.rs","byte_start":100343,"byte_end":100351,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u8.rs","byte_start":100361,"byte_end":100369,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u8.rs","byte_start":100550,"byte_end":100558,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_u8.rs","byte_start":100842,"byte_end":100850,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_usize.rs","byte_start":101190,"byte_end":101201,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_usize.rs","byte_start":101226,"byte_end":101237,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_usize.rs","byte_start":101247,"byte_end":101258,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_usize.rs","byte_start":101947,"byte_end":101958,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_usize.rs","byte_start":102248,"byte_end":102259,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\atomic_usize.rs","byte_start":102423,"byte_end":102434,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\mutex.rs","byte_start":102765,"byte_end":102770,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\loom\\std\\unsafe_cell.rs","byte_start":103448,"byte_end":103458,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":3102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\either.rs","byte_start":8748686,"byte_end":8748692,"line_start":13,"line_end":13,"column_start":21,"column_end":27},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3115},"to":{"krate":0,"index":601}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\either.rs","byte_start":8749649,"byte_end":8749655,"line_start":50,"line_end":50,"column_start":23,"column_end":29},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3115},"to":{"krate":0,"index":608}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\either.rs","byte_start":8749869,"byte_end":8749875,"line_start":63,"line_end":63,"column_start":27,"column_end":33},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3115},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":108622,"byte_end":108632,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3141},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":108897,"byte_end":108907,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":3141},"to":{"krate":0,"index":601}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":109433,"byte_end":109438,"line_start":78,"line_end":78,"column_start":6,"column_end":11},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":3151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":114203,"byte_end":114213,"line_start":203,"line_end":203,"column_start":18,"column_end":28},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":3141},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":114322,"byte_end":114334,"line_start":211,"line_end":211,"column_start":17,"column_end":29},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":3145},"to":{"krate":0,"index":608}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":114689,"byte_end":114705,"line_start":229,"line_end":229,"column_start":6,"column_end":22},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":3161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":115968,"byte_end":115984,"line_start":272,"line_end":272,"column_start":15,"column_end":31},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":3161},"to":{"krate":0,"index":601}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":116579,"byte_end":116591,"line_start":295,"line_end":295,"column_start":6,"column_end":18},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":3145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\thread.rs","byte_start":116771,"byte_end":116776,"line_start":304,"line_end":304,"column_start":6,"column_end":11},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":3151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\mod.rs","byte_start":107189,"byte_end":107193,"line_start":92,"line_end":92,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2057},"to":{"krate":0,"index":608}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\mod.rs","byte_start":107196,"byte_end":107200,"line_start":92,"line_end":92,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2045},"to":{"krate":0,"index":608}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\mod.rs","byte_start":107669,"byte_end":107672,"line_start":106,"line_end":106,"column_start":17,"column_end":20},"kind":{"Impl":{"id":233}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":608}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\park\\mod.rs","byte_start":107761,"byte_end":107764,"line_start":112,"line_end":112,"column_start":17,"column_end":20},"kind":{"Impl":{"id":234}},"from":{"krate":5,"index":4415},"to":{"krate":0,"index":608}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\windows.rs","byte_start":8796609,"byte_end":8796614,"line_start":49,"line_end":49,"column_start":21,"column_end":26},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":3206},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\windows.rs","byte_start":8797002,"byte_end":8797009,"line_start":65,"line_end":65,"column_start":22,"column_end":29},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":3211},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\windows.rs","byte_start":8797034,"byte_end":8797041,"line_start":66,"line_end":66,"column_start":22,"column_end":29},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":3211},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\windows.rs","byte_start":8797456,"byte_end":8797461,"line_start":85,"line_end":85,"column_start":6,"column_end":11},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":3206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\windows.rs","byte_start":8797659,"byte_end":8797664,"line_start":95,"line_end":95,"column_start":15,"column_end":20},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":3206},"to":{"krate":0,"index":3237}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\windows.rs","byte_start":8797761,"byte_end":8797766,"line_start":101,"line_end":101,"column_start":17,"column_end":22},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":3206},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\windows.rs","byte_start":8799368,"byte_end":8799375,"line_start":147,"line_end":147,"column_start":15,"column_end":22},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":3211},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8757571,"byte_end":8757578,"line_start":231,"line_end":231,"column_start":6,"column_end":13},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":3368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8777143,"byte_end":8777150,"line_start":804,"line_end":804,"column_start":27,"column_end":34},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":3368},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8777480,"byte_end":8777494,"line_start":820,"line_end":820,"column_start":24,"column_end":38},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":3373},"to":{"krate":0,"index":3237}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8777700,"byte_end":8777714,"line_start":832,"line_end":832,"column_start":24,"column_end":38},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":3373},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8777851,"byte_end":8777865,"line_start":840,"line_end":840,"column_start":26,"column_end":40},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":3373},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8780707,"byte_end":8780712,"line_start":923,"line_end":923,"column_start":6,"column_end":11},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":3389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8788720,"byte_end":8788730,"line_start":1136,"line_end":1136,"column_start":21,"column_end":31},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":3396},"to":{"krate":0,"index":211}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8789185,"byte_end":8789196,"line_start":1154,"line_end":1154,"column_start":20,"column_end":31},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":3400},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8789484,"byte_end":8789495,"line_start":1165,"line_end":1165,"column_start":20,"column_end":31},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":3404},"to":{"krate":0,"index":160}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8789788,"byte_end":8789798,"line_start":1176,"line_end":1176,"column_start":25,"column_end":35},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":3396},"to":{"krate":2,"index":1966}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8789959,"byte_end":8789970,"line_start":1184,"line_end":1184,"column_start":25,"column_end":36},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":3400},"to":{"krate":2,"index":1966}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8790131,"byte_end":8790142,"line_start":1192,"line_end":1192,"column_start":25,"column_end":36},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":3404},"to":{"krate":2,"index":1966}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8790947,"byte_end":8790957,"line_start":1231,"line_end":1231,"column_start":26,"column_end":36},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":3396},"to":{"krate":1,"index":9214}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8791088,"byte_end":8791099,"line_start":1237,"line_end":1237,"column_start":26,"column_end":37},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":3400},"to":{"krate":1,"index":9214}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\process\\mod.rs","byte_start":8791230,"byte_end":8791241,"line_start":1243,"line_end":1243,"column_start":26,"column_end":37},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":3404},"to":{"krate":1,"index":9214}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\enter.rs","byte_start":8821592,"byte_end":8821604,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3908},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\enter.rs","byte_start":8823355,"byte_end":8823360,"line_start":72,"line_end":72,"column_start":23,"column_end":28},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":3930},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\enter.rs","byte_start":8824550,"byte_end":8824571,"line_start":114,"line_end":114,"column_start":19,"column_end":40},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3939},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\enter.rs","byte_start":8825287,"byte_end":8825292,"line_start":141,"line_end":141,"column_start":10,"column_end":15},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":3419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\enter.rs","byte_start":8826932,"byte_end":8826937,"line_start":192,"line_end":192,"column_start":21,"column_end":26},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":3419},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\enter.rs","byte_start":8827067,"byte_end":8827072,"line_start":198,"line_end":198,"column_start":15,"column_end":20},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":3419},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":8834894,"byte_end":8834900,"line_start":76,"line_end":76,"column_start":22,"column_end":28},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":3462},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":8834925,"byte_end":8834931,"line_start":77,"line_end":77,"column_start":22,"column_end":28},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":3462},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":8835290,"byte_end":8835294,"line_start":92,"line_end":92,"column_start":30,"column_end":34},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":3445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":8836181,"byte_end":8836190,"line_start":119,"line_end":119,"column_start":19,"column_end":28},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":3451},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":8839344,"byte_end":8839353,"line_start":205,"line_end":205,"column_start":17,"column_end":26},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":3454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":8842029,"byte_end":8842035,"line_start":293,"line_end":293,"column_start":10,"column_end":16},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":3462},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\core.rs","byte_start":8842391,"byte_end":8842398,"line_start":307,"line_end":307,"column_start":6,"column_end":13},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":3470},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8843329,"byte_end":8843338,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":3964},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8846064,"byte_end":8846073,"line_start":115,"line_end":115,"column_start":23,"column_end":32},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":3964},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8846316,"byte_end":8846325,"line_start":124,"line_end":124,"column_start":21,"column_end":30},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":3964},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8846602,"byte_end":8846611,"line_start":133,"line_end":133,"column_start":28,"column_end":37},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":3964},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\error.rs","byte_start":8846645,"byte_end":8846650,"line_start":135,"line_end":135,"column_start":30,"column_end":35},"kind":{"Impl":{"id":274}},"from":{"krate":1,"index":2704},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\harness.rs","byte_start":8847403,"byte_end":8847410,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":3574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\harness.rs","byte_start":8848065,"byte_end":8848072,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":3574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\harness.rs","byte_start":8853445,"byte_end":8853458,"line_start":209,"line_end":209,"column_start":13,"column_end":26},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":3606},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\harness.rs","byte_start":8860439,"byte_end":8860444,"line_start":414,"line_end":414,"column_start":38,"column_end":43},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":3640},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8865917,"byte_end":8865927,"line_start":150,"line_end":150,"column_start":31,"column_end":41},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":3966},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8865964,"byte_end":8865974,"line_start":151,"line_end":151,"column_start":31,"column_end":41},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":3966},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8865990,"byte_end":8866000,"line_start":153,"line_end":153,"column_start":9,"column_end":19},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":3966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8867235,"byte_end":8867245,"line_start":200,"line_end":200,"column_start":19,"column_end":29},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":3966},"to":{"krate":2,"index":2086}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8867272,"byte_end":8867282,"line_start":202,"line_end":202,"column_start":20,"column_end":30},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":3966},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8868508,"byte_end":8868518,"line_start":241,"line_end":241,"column_start":18,"column_end":28},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":3966},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\join.rs","byte_start":8868784,"byte_end":8868794,"line_start":253,"line_end":253,"column_start":24,"column_end":34},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":3966},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\raw.rs","byte_start":8870041,"byte_end":8870048,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":3690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\raw.rs","byte_start":8871579,"byte_end":8871586,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":3690},"to":{"krate":2,"index":1742}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\raw.rs","byte_start":8871676,"byte_end":8871683,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":3690},"to":{"krate":2,"index":2055}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\state.rs","byte_start":8874365,"byte_end":8874370,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":3739},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\state.rs","byte_start":8883226,"byte_end":8883234,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":3970},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\state.rs","byte_start":8885111,"byte_end":8885116,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":3739},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\state.rs","byte_start":8885275,"byte_end":8885283,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":3970},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\waker.rs","byte_start":8887101,"byte_end":8887109,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":3823},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\stack.rs","byte_start":8888857,"byte_end":8888870,"line_start":15,"line_end":15,"column_start":18,"column_end":31},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":3989},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\stack.rs","byte_start":8890028,"byte_end":8890032,"line_start":55,"line_end":55,"column_start":39,"column_end":43},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":4000},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\stack.rs","byte_start":8890432,"byte_end":8890436,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":4000},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":8828067,"byte_end":8828071,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":3857},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":8828102,"byte_end":8828106,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":3857},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":8828243,"byte_end":8828251,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":3865},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":8828292,"byte_end":8828300,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":3865},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":8828425,"byte_end":8828429,"line_start":56,"line_end":56,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2057},"to":{"krate":0,"index":3875}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":8828432,"byte_end":8828437,"line_start":56,"line_end":56,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":3875}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":8830287,"byte_end":8830291,"line_start":122,"line_end":122,"column_start":18,"column_end":22},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":3857},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":8830592,"byte_end":8830600,"line_start":136,"line_end":136,"column_start":22,"column_end":30},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":3865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":8830851,"byte_end":8830855,"line_start":146,"line_end":146,"column_start":22,"column_end":26},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":3857},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":8831048,"byte_end":8831056,"line_start":154,"line_end":154,"column_start":22,"column_end":30},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":3865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":8831187,"byte_end":8831191,"line_start":161,"line_end":161,"column_start":19,"column_end":23},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":3857},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":8831360,"byte_end":8831368,"line_start":168,"line_end":168,"column_start":19,"column_end":27},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":3865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":8831654,"byte_end":8831658,"line_start":181,"line_end":181,"column_start":27,"column_end":31},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":3857},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":8831898,"byte_end":8831902,"line_start":191,"line_end":191,"column_start":24,"column_end":28},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":3857},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":8832054,"byte_end":8832062,"line_start":197,"line_end":197,"column_start":24,"column_end":32},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":3865},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\task\\mod.rs","byte_start":8832278,"byte_end":8832282,"line_start":206,"line_end":206,"column_start":38,"column_end":42},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":3857},"to":{"krate":0,"index":651}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":8893167,"byte_end":8893181,"line_start":96,"line_end":96,"column_start":15,"column_end":29},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":4059},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":8895419,"byte_end":8895424,"line_start":173,"line_end":173,"column_start":15,"column_end":20},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":4064},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":8898047,"byte_end":8898052,"line_start":245,"line_end":245,"column_start":28,"column_end":33},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":4103},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":8898745,"byte_end":8898759,"line_start":269,"line_end":269,"column_start":24,"column_end":38},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":4059},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":8899978,"byte_end":8899992,"line_start":307,"line_end":307,"column_start":30,"column_end":44},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":4059},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":8900158,"byte_end":8900165,"line_start":315,"line_end":315,"column_start":6,"column_end":13},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":4402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":8900695,"byte_end":8900702,"line_start":336,"line_end":336,"column_start":21,"column_end":28},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":4402},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":8900870,"byte_end":8900873,"line_start":344,"line_end":344,"column_start":19,"column_end":22},"kind":{"Impl":{"id":318}},"from":{"krate":5,"index":4415},"to":{"krate":0,"index":3875}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":8901962,"byte_end":8901968,"line_start":380,"line_end":380,"column_start":15,"column_end":21},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":4073},"to":{"krate":0,"index":7366}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":8902430,"byte_end":8902440,"line_start":401,"line_end":401,"column_start":15,"column_end":25},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":4137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\basic_scheduler.rs","byte_start":8902715,"byte_end":8902725,"line_start":409,"line_end":409,"column_start":24,"column_end":34},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":4137},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\pool.rs","byte_start":8907208,"byte_end":8907220,"line_start":103,"line_end":103,"column_start":6,"column_end":18},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":4175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\pool.rs","byte_start":8909795,"byte_end":8909807,"line_start":173,"line_end":173,"column_start":15,"column_end":27},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":4175},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\pool.rs","byte_start":8909893,"byte_end":8909905,"line_start":179,"line_end":179,"column_start":21,"column_end":33},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":4175},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\pool.rs","byte_start":8910066,"byte_end":8910073,"line_start":187,"line_end":187,"column_start":6,"column_end":13},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":4411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\pool.rs","byte_start":8912505,"byte_end":8912510,"line_start":265,"line_end":265,"column_start":6,"column_end":11},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":4178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\pool.rs","byte_start":8915749,"byte_end":8915756,"line_start":361,"line_end":361,"column_start":21,"column_end":28},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":4411},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\schedule.rs","byte_start":8916259,"byte_end":8916271,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":4231},"to":{"krate":0,"index":3875}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\shutdown.rs","byte_start":8917144,"byte_end":8917152,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":4421},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\task.rs","byte_start":8918901,"byte_end":8918913,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":4251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\task.rs","byte_start":8919139,"byte_end":8919151,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":4251},"to":{"krate":2,"index":2086}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\blocking\\task.rs","byte_start":8919181,"byte_end":8919193,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":4251},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8922387,"byte_end":8922394,"line_start":85,"line_end":85,"column_start":6,"column_end":13},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":4279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8933385,"byte_end":8933392,"line_start":453,"line_end":453,"column_start":10,"column_end":17},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":4279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8933954,"byte_end":8933961,"line_start":477,"line_end":477,"column_start":10,"column_end":17},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":4279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8935204,"byte_end":8935211,"line_start":525,"line_end":525,"column_start":10,"column_end":17},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":4279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\builder.rs","byte_start":8936649,"byte_end":8936656,"line_start":565,"line_end":565,"column_start":21,"column_end":28},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":4279},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\context.rs","byte_start":8939176,"byte_end":8939186,"line_start":73,"line_end":73,"column_start":15,"column_end":25},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":4446},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\driver.rs","byte_start":8943728,"byte_end":8943734,"line_start":168,"line_end":168,"column_start":6,"column_end":12},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":4467},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\driver.rs","byte_start":8944318,"byte_end":8944324,"line_start":189,"line_end":189,"column_start":15,"column_end":21},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":4467},"to":{"krate":0,"index":601}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8946072,"byte_end":8946078,"line_start":47,"line_end":47,"column_start":6,"column_end":12},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":4471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8951454,"byte_end":8951469,"line_start":209,"line_end":209,"column_start":21,"column_end":36},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":4387},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8951617,"byte_end":8951632,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":4387},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\handle.rs","byte_start":8951772,"byte_end":8951787,"line_start":221,"line_end":221,"column_start":23,"column_end":38},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":4387},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\spawner.rs","byte_start":8952172,"byte_end":8952179,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":4493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\spawner.rs","byte_start":8952421,"byte_end":8952428,"line_start":32,"line_end":32,"column_start":10,"column_end":17},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":4493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\park.rs","byte_start":8954022,"byte_end":8954028,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":4521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\park.rs","byte_start":8954491,"byte_end":8954497,"line_start":69,"line_end":69,"column_start":16,"column_end":22},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":4521},"to":{"krate":2,"index":1742}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\park.rs","byte_start":8954813,"byte_end":8954819,"line_start":82,"line_end":82,"column_start":15,"column_end":21},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":4521},"to":{"krate":0,"index":601}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\park.rs","byte_start":8955538,"byte_end":8955546,"line_start":113,"line_end":113,"column_start":17,"column_end":25},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":4523},"to":{"krate":0,"index":608}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\park.rs","byte_start":8955615,"byte_end":8955620,"line_start":119,"line_end":119,"column_start":6,"column_end":11},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":4525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":8962828,"byte_end":8962833,"line_start":66,"line_end":66,"column_start":25,"column_end":30},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":4592},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":8962864,"byte_end":8962869,"line_start":67,"line_end":67,"column_start":25,"column_end":30},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":4592},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":8962900,"byte_end":8962906,"line_start":68,"line_end":68,"column_start":25,"column_end":31},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":4587},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":8962937,"byte_end":8962943,"line_start":69,"line_end":69,"column_start":25,"column_end":31},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":4587},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":8963802,"byte_end":8963807,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":4580},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":8970388,"byte_end":8970393,"line_start":295,"line_end":295,"column_start":9,"column_end":14},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":4583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":8975561,"byte_end":8975566,"line_start":445,"line_end":445,"column_start":19,"column_end":24},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":4583},"to":{"krate":2,"index":1742}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":8975662,"byte_end":8975667,"line_start":451,"line_end":451,"column_start":18,"column_end":23},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":4580},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":8975826,"byte_end":8975831,"line_start":459,"line_end":459,"column_start":9,"column_end":14},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":4592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":8976019,"byte_end":8976025,"line_start":468,"line_end":468,"column_start":18,"column_end":24},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":4587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\queue.rs","byte_start":8979485,"byte_end":8979491,"line_start":599,"line_end":599,"column_start":27,"column_end":33},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":4587},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":8983450,"byte_end":8983460,"line_start":10,"line_end":10,"column_start":31,"column_end":41},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":4665},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":8983497,"byte_end":8983507,"line_start":11,"line_end":11,"column_start":31,"column_end":41},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":4665},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":8983523,"byte_end":8983533,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":4665},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\atomic_cell.rs","byte_start":8984287,"byte_end":8984297,"line_start":46,"line_end":46,"column_start":18,"column_end":28},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":4665},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\idle.rs","byte_start":8985103,"byte_end":8985107,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":4693},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\idle.rs","byte_start":8988945,"byte_end":8988950,"line_start":141,"line_end":141,"column_start":6,"column_end":11},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":4880},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\idle.rs","byte_start":8990428,"byte_end":8990433,"line_start":193,"line_end":193,"column_start":22,"column_end":27},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":4880},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\idle.rs","byte_start":8990606,"byte_end":8990611,"line_start":205,"line_end":205,"column_start":21,"column_end":26},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":4880},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":8996406,"byte_end":8996411,"line_start":184,"line_end":184,"column_start":19,"column_end":24},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":4786},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":8999742,"byte_end":8999748,"line_start":276,"line_end":276,"column_start":6,"column_end":12},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":4776},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":9000523,"byte_end":9000530,"line_start":307,"line_end":307,"column_start":6,"column_end":13},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":4773},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":9004817,"byte_end":9004821,"line_start":440,"line_end":440,"column_start":6,"column_end":10},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":4755},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":9009932,"byte_end":9009938,"line_start":605,"line_end":605,"column_start":6,"column_end":12},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":4751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":9010378,"byte_end":9010381,"line_start":621,"line_end":621,"column_start":25,"column_end":28},"kind":{"Impl":{"id":377}},"from":{"krate":5,"index":4415},"to":{"krate":0,"index":3875}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\worker.rs","byte_start":9013685,"byte_end":9013691,"line_start":720,"line_end":720,"column_start":6,"column_end":12},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":4764},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":8981497,"byte_end":8981507,"line_start":45,"line_end":45,"column_start":6,"column_end":16},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":4862},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":8982441,"byte_end":8982451,"line_start":75,"line_end":75,"column_start":21,"column_end":31},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":4862},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":8982590,"byte_end":8982600,"line_start":81,"line_end":81,"column_start":15,"column_end":25},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":4862},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":8982703,"byte_end":8982710,"line_start":89,"line_end":89,"column_start":6,"column_end":13},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":4891},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\thread_pool\\mod.rs","byte_start":8983131,"byte_end":8983138,"line_start":106,"line_end":106,"column_start":21,"column_end":28},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":4891},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\runtime\\mod.rs","byte_start":8811151,"byte_end":8811158,"line_start":289,"line_end":289,"column_start":10,"column_end":17},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":4912},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\coop.rs","byte_start":121542,"byte_end":121548,"line_start":65,"line_end":65,"column_start":6,"column_end":12},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":4931},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\coop.rs","byte_start":122320,"byte_end":122326,"line_start":87,"line_end":87,"column_start":10,"column_end":16},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":4931},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\coop.rs","byte_start":122908,"byte_end":122918,"line_start":108,"line_end":108,"column_start":23,"column_end":33},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":626},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\coop.rs","byte_start":123889,"byte_end":123905,"line_start":156,"line_end":156,"column_start":10,"column_end":26},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":4951},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\coop.rs","byte_start":124037,"byte_end":124053,"line_start":162,"line_end":162,"column_start":19,"column_end":35},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":4951},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\coop.rs","byte_start":125793,"byte_end":125799,"line_start":203,"line_end":203,"column_start":10,"column_end":16},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":4931},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9034756,"byte_end":9034763,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":6154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\barrier.rs","byte_start":9038042,"byte_end":9038059,"line_start":130,"line_end":130,"column_start":6,"column_end":23},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":6166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9045498,"byte_end":9045507,"line_start":221,"line_end":221,"column_start":30,"column_end":39},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":6173},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9045683,"byte_end":9045692,"line_start":227,"line_end":227,"column_start":47,"column_end":56},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":6173},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9046340,"byte_end":9046349,"line_start":246,"line_end":246,"column_start":27,"column_end":36},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":6180},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9046654,"byte_end":9046663,"line_start":255,"line_end":255,"column_start":32,"column_end":41},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":6180},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9047586,"byte_end":9047598,"line_start":281,"line_end":281,"column_start":27,"column_end":39},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":6192},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9047976,"byte_end":9047988,"line_start":291,"line_end":291,"column_start":32,"column_end":44},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":6192},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9049951,"byte_end":9049955,"line_start":377,"line_end":377,"column_start":35,"column_end":39},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":5047},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9050000,"byte_end":9050004,"line_start":378,"line_end":378,"column_start":35,"column_end":39},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":5047},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9052778,"byte_end":9052784,"line_start":468,"line_end":468,"column_start":31,"column_end":37},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":5000},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9052821,"byte_end":9052827,"line_start":469,"line_end":469,"column_start":31,"column_end":37},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":5000},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9052865,"byte_end":9052873,"line_start":471,"line_end":471,"column_start":31,"column_end":39},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":5003},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9052910,"byte_end":9052918,"line_start":472,"line_end":472,"column_start":31,"column_end":39},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":5003},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9052934,"byte_end":9052940,"line_start":474,"line_end":474,"column_start":9,"column_end":15},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":5000},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9058550,"byte_end":9058554,"line_start":661,"line_end":661,"column_start":6,"column_end":10},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":5027},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9058946,"byte_end":9058952,"line_start":676,"line_end":676,"column_start":19,"column_end":25},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":5000},"to":{"krate":2,"index":1742}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9059132,"byte_end":9059138,"line_start":685,"line_end":685,"column_start":18,"column_end":24},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":5000},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9059292,"byte_end":9059300,"line_start":693,"line_end":693,"column_start":9,"column_end":17},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":5003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9064163,"byte_end":9064171,"line_start":811,"line_end":811,"column_start":16,"column_end":24},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":5003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9068347,"byte_end":9068355,"line_start":928,"line_end":928,"column_start":18,"column_end":26},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":5003},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9068981,"byte_end":9068985,"line_start":951,"line_end":951,"column_start":13,"column_end":17},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":5047},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9069764,"byte_end":9069768,"line_start":977,"line_end":977,"column_start":24,"column_end":28},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":5047},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9070429,"byte_end":9070433,"line_start":997,"line_end":997,"column_start":22,"column_end":26},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":5047},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9071181,"byte_end":9071187,"line_start":1023,"line_end":1023,"column_start":35,"column_end":41},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":5038},"to":{"krate":0,"index":651}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9071602,"byte_end":9071608,"line_start":1040,"line_end":1040,"column_start":24,"column_end":30},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":5000},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9071752,"byte_end":9071760,"line_start":1046,"line_end":1046,"column_start":24,"column_end":32},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":5003},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9071895,"byte_end":9071904,"line_start":1052,"line_end":1052,"column_start":13,"column_end":22},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":5043},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\broadcast.rs","byte_start":9072077,"byte_end":9072086,"line_start":1061,"line_end":1061,"column_start":22,"column_end":31},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":5043},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\block.rs","byte_start":9078968,"byte_end":9078973,"line_start":75,"line_end":75,"column_start":9,"column_end":14},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":5158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\block.rs","byte_start":9089074,"byte_end":9089080,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":5172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\block.rs","byte_start":9089562,"byte_end":9089568,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":5172},"to":{"krate":2,"index":2323}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9092957,"byte_end":9092965,"line_start":105,"line_end":105,"column_start":9,"column_end":17},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":5235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9099977,"byte_end":9099985,"line_start":302,"line_end":302,"column_start":24,"column_end":32},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":5235},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9100181,"byte_end":9100189,"line_start":310,"line_end":310,"column_start":19,"column_end":27},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":5235},"to":{"krate":2,"index":2086}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9100205,"byte_end":9100211,"line_start":312,"line_end":312,"column_start":9,"column_end":15},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":5228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9113103,"byte_end":9113109,"line_start":703,"line_end":703,"column_start":19,"column_end":25},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":5228},"to":{"krate":2,"index":1742}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9113241,"byte_end":9113247,"line_start":711,"line_end":711,"column_start":24,"column_end":30},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":5228},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9113459,"byte_end":9113465,"line_start":721,"line_end":721,"column_start":9,"column_end":15},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":5231},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9114715,"byte_end":9114721,"line_start":764,"line_end":764,"column_start":18,"column_end":24},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":5231},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\bounded.rs","byte_start":9115048,"byte_end":9115054,"line_start":779,"line_end":779,"column_start":24,"column_end":30},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":5231},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":9115715,"byte_end":9115717,"line_start":19,"line_end":19,"column_start":39,"column_end":41},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":5316},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":9116010,"byte_end":9116012,"line_start":30,"line_end":30,"column_start":51,"column_end":53},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":5324},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":9116949,"byte_end":9116953,"line_start":68,"line_end":68,"column_start":27,"column_end":31},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":5337},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":9117586,"byte_end":9117594,"line_start":92,"line_end":92,"column_start":24,"column_end":32},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":5350},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":9117860,"byte_end":9117864,"line_start":101,"line_end":101,"column_start":40,"column_end":44},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":5337},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":9117913,"byte_end":9117917,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":5337},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":9118424,"byte_end":9118426,"line_start":124,"line_end":124,"column_start":12,"column_end":14},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":5316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":9118858,"byte_end":9118860,"line_start":144,"line_end":144,"column_start":23,"column_end":25},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":5316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":9119410,"byte_end":9119412,"line_start":162,"line_end":162,"column_start":22,"column_end":24},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":5316},"to":{"krate":2,"index":1742}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":9119751,"byte_end":9119753,"line_start":174,"line_end":174,"column_start":21,"column_end":23},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":5316},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":9120076,"byte_end":9120078,"line_start":190,"line_end":190,"column_start":23,"column_end":25},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":5324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":9123469,"byte_end":9123471,"line_start":287,"line_end":287,"column_start":32,"column_end":34},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":5324},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":9123883,"byte_end":9123887,"line_start":305,"line_end":305,"column_start":12,"column_end":16},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":5337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":9124072,"byte_end":9124076,"line_start":315,"line_end":315,"column_start":21,"column_end":25},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":5337},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\chan.rs","byte_start":9125077,"byte_end":9125088,"line_start":355,"line_end":355,"column_start":20,"column_end":31},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":445},"to":{"krate":0,"index":5332}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\list.rs","byte_start":9126829,"byte_end":9126831,"line_start":54,"line_end":54,"column_start":9,"column_end":11},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":5443},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\list.rs","byte_start":9132544,"byte_end":9132546,"line_start":211,"line_end":211,"column_start":24,"column_end":26},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":5443},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\list.rs","byte_start":9132823,"byte_end":9132825,"line_start":220,"line_end":220,"column_start":9,"column_end":11},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":5447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\list.rs","byte_start":9136224,"byte_end":9136226,"line_start":331,"line_end":331,"column_start":24,"column_end":26},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":5447},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9136884,"byte_end":9136899,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":5481},"to":{"krate":2,"index":1742}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9137040,"byte_end":9137055,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":5481},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9137728,"byte_end":9137745,"line_start":45,"line_end":45,"column_start":24,"column_end":41},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":5490},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9138744,"byte_end":9138761,"line_start":75,"line_end":75,"column_start":9,"column_end":26},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":5490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\unbounded.rs","byte_start":9142059,"byte_end":9142074,"line_start":183,"line_end":183,"column_start":9,"column_end":24},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":5481},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":9145764,"byte_end":9145773,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":6210},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":9145933,"byte_end":9145942,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":6210},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":9146428,"byte_end":9146440,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":6217},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":9146473,"byte_end":9146485,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":6217},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":9146825,"byte_end":9146837,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":6217},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":9147066,"byte_end":9147075,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":6228},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":9147205,"byte_end":9147214,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":6228},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":9148715,"byte_end":9148731,"line_start":116,"line_end":116,"column_start":35,"column_end":51},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":6238},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mpsc\\error.rs","byte_start":9148768,"byte_end":9148784,"line_start":118,"line_end":118,"column_start":30,"column_end":46},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":6238},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9155156,"byte_end":9155161,"line_start":159,"line_end":159,"column_start":25,"column_end":30},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":5556},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9155215,"byte_end":9155220,"line_start":160,"line_end":160,"column_start":25,"column_end":30},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":5556},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9155274,"byte_end":9155284,"line_start":161,"line_end":161,"column_start":25,"column_end":35},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":5560},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9155349,"byte_end":9155364,"line_start":162,"line_end":162,"column_start":25,"column_end":40},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":5564},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9156043,"byte_end":9156055,"line_start":181,"line_end":181,"column_start":23,"column_end":35},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":6249},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9156192,"byte_end":9156204,"line_start":187,"line_end":187,"column_start":16,"column_end":28},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":6249},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9157012,"byte_end":9157017,"line_start":213,"line_end":213,"column_start":17,"column_end":22},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":5556},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9162770,"byte_end":9162775,"line_start":416,"line_end":416,"column_start":21,"column_end":26},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":5556},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9162859,"byte_end":9162864,"line_start":422,"line_end":422,"column_start":21,"column_end":26},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":5556},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9162988,"byte_end":9162993,"line_start":431,"line_end":431,"column_start":29,"column_end":34},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":5556},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9163388,"byte_end":9163398,"line_start":447,"line_end":447,"column_start":26,"column_end":36},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":5560},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9163499,"byte_end":9163509,"line_start":453,"line_end":453,"column_start":27,"column_end":37},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":5560},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9163656,"byte_end":9163666,"line_start":460,"line_end":460,"column_start":30,"column_end":40},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":5560},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9163823,"byte_end":9163833,"line_start":466,"line_end":466,"column_start":45,"column_end":55},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":5560},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9163999,"byte_end":9164009,"line_start":472,"line_end":472,"column_start":49,"column_end":59},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":5560},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9164187,"byte_end":9164202,"line_start":480,"line_end":480,"column_start":26,"column_end":41},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":5564},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9164299,"byte_end":9164314,"line_start":486,"line_end":486,"column_start":27,"column_end":42},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":5564},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9164457,"byte_end":9164472,"line_start":493,"line_end":493,"column_start":30,"column_end":45},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":5564},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9164625,"byte_end":9164640,"line_start":499,"line_end":499,"column_start":45,"column_end":60},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":5564},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\mutex.rs","byte_start":9164802,"byte_end":9164817,"line_start":505,"line_end":505,"column_start":49,"column_end":64},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":5564},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9169680,"byte_end":9169688,"line_start":156,"line_end":156,"column_start":26,"column_end":34},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":6276},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9169721,"byte_end":9169729,"line_start":157,"line_end":157,"column_start":26,"column_end":34},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":6276},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9170559,"byte_end":9170565,"line_start":195,"line_end":195,"column_start":6,"column_end":12},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":6254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9179141,"byte_end":9179147,"line_start":455,"line_end":455,"column_start":18,"column_end":24},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":6254},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9181057,"byte_end":9181065,"line_start":510,"line_end":510,"column_start":6,"column_end":14},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":6276},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9181578,"byte_end":9181586,"line_start":526,"line_end":526,"column_start":17,"column_end":25},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":6276},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9187282,"byte_end":9187290,"line_start":668,"line_end":668,"column_start":15,"column_end":23},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":6276},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\notify.rs","byte_start":9190345,"byte_end":9190351,"line_start":732,"line_end":732,"column_start":35,"column_end":41},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":6269},"to":{"krate":0,"index":651}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9192227,"byte_end":9192236,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":6306},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9192398,"byte_end":9192407,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":6306},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9192476,"byte_end":9192488,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":6318},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9192787,"byte_end":9192799,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":6318},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9193293,"byte_end":9193297,"line_start":95,"line_end":95,"column_start":6,"column_end":10},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":5734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9195333,"byte_end":9195339,"line_start":174,"line_end":174,"column_start":9,"column_end":15},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":6294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9202966,"byte_end":9202972,"line_start":427,"line_end":427,"column_start":18,"column_end":24},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":6294},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9203111,"byte_end":9203119,"line_start":435,"line_end":435,"column_start":9,"column_end":17},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":6300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9207510,"byte_end":9207518,"line_start":584,"line_end":584,"column_start":18,"column_end":26},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":6300},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9207665,"byte_end":9207673,"line_start":592,"line_end":592,"column_start":20,"column_end":28},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":6300},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9208136,"byte_end":9208141,"line_start":608,"line_end":608,"column_start":9,"column_end":14},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":5728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9211247,"byte_end":9211252,"line_start":706,"line_end":706,"column_start":31,"column_end":36},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":5728},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9211289,"byte_end":9211294,"line_start":707,"line_end":707,"column_start":31,"column_end":36},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":5728},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9211395,"byte_end":9211400,"line_start":713,"line_end":713,"column_start":18,"column_end":23},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":5728},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9211777,"byte_end":9211782,"line_start":731,"line_end":731,"column_start":36,"column_end":41},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":5728},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9212177,"byte_end":9212182,"line_start":746,"line_end":746,"column_start":6,"column_end":11},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":6331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\oneshot.rs","byte_start":9213895,"byte_end":9213900,"line_start":812,"line_end":812,"column_start":21,"column_end":26},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":6331},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9217959,"byte_end":9217968,"line_start":107,"line_end":107,"column_start":6,"column_end":15},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":5837},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9228993,"byte_end":9229002,"line_start":397,"line_end":397,"column_start":21,"column_end":30},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":5837},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9229201,"byte_end":9229207,"line_start":405,"line_end":405,"column_start":6,"column_end":12},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":5849},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9230073,"byte_end":9230080,"line_start":434,"line_end":434,"column_start":17,"column_end":24},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":5843},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9230758,"byte_end":9230765,"line_start":458,"line_end":458,"column_start":10,"column_end":17},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":5843},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9231564,"byte_end":9231571,"line_start":488,"line_end":488,"column_start":15,"column_end":22},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":5843},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9232821,"byte_end":9232828,"line_start":518,"line_end":518,"column_start":22,"column_end":29},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":5843},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9232875,"byte_end":9232887,"line_start":522,"line_end":522,"column_start":6,"column_end":18},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":6347},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9232980,"byte_end":9232992,"line_start":528,"line_end":528,"column_start":23,"column_end":35},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":6347},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9233136,"byte_end":9233148,"line_start":534,"line_end":534,"column_start":28,"column_end":40},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":6347},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9233195,"byte_end":9233210,"line_start":538,"line_end":538,"column_start":6,"column_end":21},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":6337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9233728,"byte_end":9233743,"line_start":553,"line_end":553,"column_start":23,"column_end":38},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":6337},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9234029,"byte_end":9234044,"line_start":562,"line_end":562,"column_start":28,"column_end":43},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":6337},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\batch_semaphore.rs","byte_start":9234137,"byte_end":9234143,"line_start":567,"line_end":567,"column_start":35,"column_end":41},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":5849},"to":{"krate":0,"index":651}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9237011,"byte_end":9237020,"line_start":66,"line_end":66,"column_start":6,"column_end":15},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":6352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9243358,"byte_end":9243373,"line_start":239,"line_end":239,"column_start":10,"column_end":25},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":6356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9243618,"byte_end":9243638,"line_start":248,"line_end":248,"column_start":6,"column_end":26},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":6363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9243892,"byte_end":9243907,"line_start":257,"line_end":257,"column_start":19,"column_end":34},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":6356},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\semaphore.rs","byte_start":9244015,"byte_end":9244035,"line_start":263,"line_end":263,"column_start":15,"column_end":35},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":6363},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9247447,"byte_end":9247462,"line_start":97,"line_end":97,"column_start":13,"column_end":28},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":5958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9250880,"byte_end":9250895,"line_start":202,"line_end":202,"column_start":36,"column_end":51},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":5958},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9251075,"byte_end":9251090,"line_start":211,"line_end":211,"column_start":38,"column_end":53},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":5958},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9251266,"byte_end":9251281,"line_start":220,"line_end":220,"column_start":30,"column_end":45},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":5958},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9251745,"byte_end":9251761,"line_start":240,"line_end":240,"column_start":21,"column_end":37},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":5985},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9253383,"byte_end":9253399,"line_start":293,"line_end":293,"column_start":36,"column_end":52},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":5985},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9253579,"byte_end":9253595,"line_start":302,"line_end":302,"column_start":38,"column_end":54},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":5985},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9253771,"byte_end":9253787,"line_start":311,"line_end":311,"column_start":30,"column_end":46},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":5985},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9254863,"byte_end":9254869,"line_start":346,"line_end":346,"column_start":25,"column_end":31},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":6368},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9254923,"byte_end":9254929,"line_start":347,"line_end":347,"column_start":25,"column_end":31},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":6368},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9255163,"byte_end":9255178,"line_start":351,"line_end":351,"column_start":25,"column_end":40},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":5958},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9255236,"byte_end":9255251,"line_start":352,"line_end":352,"column_start":25,"column_end":40},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":5958},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9255316,"byte_end":9255332,"line_start":353,"line_end":353,"column_start":25,"column_end":41},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":5985},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9255645,"byte_end":9255661,"line_start":358,"line_end":358,"column_start":25,"column_end":41},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":5985},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9255719,"byte_end":9255725,"line_start":360,"line_end":360,"column_start":17,"column_end":23},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":6368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9263094,"byte_end":9263109,"line_start":605,"line_end":605,"column_start":32,"column_end":47},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":5958},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9263240,"byte_end":9263256,"line_start":613,"line_end":613,"column_start":32,"column_end":48},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":5985},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9263390,"byte_end":9263406,"line_start":621,"line_end":621,"column_start":35,"column_end":51},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":5985},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9263520,"byte_end":9263526,"line_start":627,"line_end":627,"column_start":21,"column_end":27},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":6368},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\rwlock.rs","byte_start":9263618,"byte_end":9263624,"line_start":633,"line_end":633,"column_start":29,"column_end":35},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":6368},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\task\\atomic_waker.rs","byte_start":9269899,"byte_end":9269910,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":6067},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\task\\atomic_waker.rs","byte_start":9275932,"byte_end":9275943,"line_start":285,"line_end":285,"column_start":18,"column_end":29},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":6067},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\task\\atomic_waker.rs","byte_start":9276029,"byte_end":9276040,"line_start":291,"line_end":291,"column_start":21,"column_end":32},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":6067},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\task\\atomic_waker.rs","byte_start":9276173,"byte_end":9276184,"line_start":297,"line_end":297,"column_start":22,"column_end":33},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":6067},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\task\\atomic_waker.rs","byte_start":9276209,"byte_end":9276220,"line_start":298,"line_end":298,"column_start":22,"column_end":33},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":6067},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\task\\atomic_waker.rs","byte_start":9276316,"byte_end":9276321,"line_start":305,"line_end":305,"column_start":19,"column_end":24},"kind":{"Impl":{"id":554}},"from":{"krate":2,"index":9323},"to":{"krate":0,"index":6090}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9280550,"byte_end":9280559,"line_start":130,"line_end":130,"column_start":42,"column_end":51},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":6406},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9280739,"byte_end":9280748,"line_start":136,"line_end":136,"column_start":47,"column_end":56},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":6406},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9280941,"byte_end":9280950,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":6412},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9281112,"byte_end":9281121,"line_start":150,"line_end":150,"column_start":32,"column_end":41},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":6412},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9282327,"byte_end":9282335,"line_start":200,"line_end":200,"column_start":9,"column_end":17},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":6375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9284868,"byte_end":9284876,"line_start":287,"line_end":287,"column_start":19,"column_end":27},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":6375},"to":{"krate":2,"index":1742}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9285214,"byte_end":9285222,"line_start":300,"line_end":300,"column_start":18,"column_end":26},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":6375},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9285592,"byte_end":9285598,"line_start":311,"line_end":311,"column_start":9,"column_end":15},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":6382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9288182,"byte_end":9288188,"line_start":401,"line_end":401,"column_start":18,"column_end":24},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":6382},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\sync\\watch.rs","byte_start":9288378,"byte_end":9288381,"line_start":410,"line_end":410,"column_start":24,"column_end":27},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":6388},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\yield_now.rs","byte_start":9300606,"byte_end":9300614,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":6593},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9311536,"byte_end":9311544,"line_start":323,"line_end":323,"column_start":6,"column_end":14},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":6598},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9319537,"byte_end":9319545,"line_start":552,"line_end":552,"column_start":21,"column_end":29},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":6598},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9319684,"byte_end":9319692,"line_start":558,"line_end":558,"column_start":17,"column_end":25},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":6598},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9320657,"byte_end":9320665,"line_start":582,"line_end":582,"column_start":18,"column_end":26},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":6598},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9320746,"byte_end":9320754,"line_start":588,"line_end":588,"column_start":15,"column_end":23},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":6598},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9321621,"byte_end":9321629,"line_start":618,"line_end":618,"column_start":28,"column_end":36},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":7569},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9322514,"byte_end":9322520,"line_start":649,"line_end":649,"column_start":6,"column_end":12},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":6464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\local.rs","byte_start":9323083,"byte_end":9323086,"line_start":668,"line_end":668,"column_start":25,"column_end":28},"kind":{"Impl":{"id":573}},"from":{"krate":5,"index":4415},"to":{"krate":0,"index":3875}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9326593,"byte_end":9326601,"line_start":100,"line_end":100,"column_start":18,"column_end":26},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":6533},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9328377,"byte_end":9328385,"line_start":165,"line_end":165,"column_start":25,"column_end":33},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":6533},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9328593,"byte_end":9328601,"line_start":173,"line_end":173,"column_start":33,"column_end":41},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":6533},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9328922,"byte_end":9328937,"line_start":188,"line_end":188,"column_start":40,"column_end":55},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":7513},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9329238,"byte_end":9329243,"line_start":198,"line_end":198,"column_start":26,"column_end":31},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":6561},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9329861,"byte_end":9329862,"line_start":222,"line_end":222,"column_start":37,"column_end":38},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":6574},"to":{"krate":0,"index":6572}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9330047,"byte_end":9330058,"line_start":230,"line_end":230,"column_start":21,"column_end":32},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":6610},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9330202,"byte_end":9330213,"line_start":236,"line_end":236,"column_start":23,"column_end":34},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":6610},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\task\\task_local.rs","byte_start":9330360,"byte_end":9330371,"line_start":242,"line_end":242,"column_start":16,"column_end":27},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":6610},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\clock.rs","byte_start":9333938,"byte_end":9333943,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":7008},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":9358374,"byte_end":9358383,"line_start":99,"line_end":99,"column_start":18,"column_end":27},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":6648},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":9358467,"byte_end":9358476,"line_start":105,"line_end":105,"column_start":26,"column_end":35},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":6648},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":9358622,"byte_end":9358631,"line_start":111,"line_end":111,"column_start":6,"column_end":15},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":6648},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":9365649,"byte_end":9365659,"line_start":302,"line_end":302,"column_start":22,"column_end":32},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":7013},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":9365684,"byte_end":9365694,"line_start":303,"line_end":303,"column_start":22,"column_end":32},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":7013},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":9367135,"byte_end":9367146,"line_start":339,"line_end":339,"column_start":6,"column_end":17},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":7024},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":9370669,"byte_end":9370686,"line_start":437,"line_end":437,"column_start":26,"column_end":43},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":6682},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":9370987,"byte_end":9371004,"line_start":446,"line_end":446,"column_start":6,"column_end":23},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":6682},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":9371243,"byte_end":9371254,"line_start":456,"line_end":456,"column_start":22,"column_end":33},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":7024},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":9371279,"byte_end":9371290,"line_start":457,"line_end":457,"column_start":22,"column_end":33},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":7024},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":9371329,"byte_end":9371340,"line_start":459,"line_end":459,"column_start":35,"column_end":46},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":7024},"to":{"krate":0,"index":651}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":9371858,"byte_end":9371868,"line_start":481,"line_end":481,"column_start":6,"column_end":16},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":7013},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":9374744,"byte_end":9374755,"line_start":556,"line_end":556,"column_start":6,"column_end":17},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":7020},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\entry.rs","byte_start":9377146,"byte_end":9377156,"line_start":616,"line_end":616,"column_start":15,"column_end":25},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":7013},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\handle.rs","byte_start":9377661,"byte_end":9377667,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":7040},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\handle.rs","byte_start":9378238,"byte_end":9378244,"line_start":31,"line_end":31,"column_start":10,"column_end":16},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":7040},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\handle.rs","byte_start":9380280,"byte_end":9380286,"line_start":79,"line_end":79,"column_start":21,"column_end":27},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":7040},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\wheel\\level.rs","byte_start":9392884,"byte_end":9392889,"line_start":42,"line_end":42,"column_start":6,"column_end":11},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":6745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\wheel\\level.rs","byte_start":9398957,"byte_end":9398962,"line_start":233,"line_end":233,"column_start":21,"column_end":26},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":6745},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\wheel\\mod.rs","byte_start":9381907,"byte_end":9381912,"line_start":52,"line_end":52,"column_start":6,"column_end":11},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":7053},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9404752,"byte_end":9404757,"line_start":159,"line_end":159,"column_start":6,"column_end":11},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":7485},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\sleep.rs","byte_start":9406759,"byte_end":9406764,"line_start":225,"line_end":225,"column_start":17,"column_end":22},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":7485},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":9343357,"byte_end":9343366,"line_start":102,"line_end":102,"column_start":6,"column_end":15},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":7068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":9344773,"byte_end":9344779,"line_start":157,"line_end":157,"column_start":9,"column_end":15},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":7060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":9347785,"byte_end":9347791,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":7040},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":9352485,"byte_end":9352491,"line_start":379,"line_end":379,"column_start":18,"column_end":24},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":7060},"to":{"krate":0,"index":601}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":9353222,"byte_end":9353228,"line_start":417,"line_end":417,"column_start":18,"column_end":24},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":7060},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":9353354,"byte_end":9353359,"line_start":428,"line_end":428,"column_start":6,"column_end":11},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":6840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\driver\\mod.rs","byte_start":9353667,"byte_end":9353672,"line_start":441,"line_end":441,"column_start":21,"column_end":26},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":6840},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9408915,"byte_end":9408920,"line_start":37,"line_end":37,"column_start":21,"column_end":26},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":7075},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9409161,"byte_end":9409166,"line_start":54,"line_end":54,"column_start":6,"column_end":11},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":7075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9410066,"byte_end":9410071,"line_start":86,"line_end":86,"column_start":23,"column_end":28},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":7075},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9410098,"byte_end":9410103,"line_start":88,"line_end":88,"column_start":23,"column_end":28},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":7075},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9410565,"byte_end":9410572,"line_start":102,"line_end":102,"column_start":6,"column_end":13},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":7104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9410660,"byte_end":9410667,"line_start":108,"line_end":108,"column_start":23,"column_end":30},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":7104},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9410811,"byte_end":9410818,"line_start":114,"line_end":114,"column_start":28,"column_end":35},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":7104},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\error.rs","byte_start":9410855,"byte_end":9410860,"line_start":116,"line_end":116,"column_start":33,"column_end":38},"kind":{"Impl":{"id":620}},"from":{"krate":1,"index":2704},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9412402,"byte_end":9412409,"line_start":38,"line_end":38,"column_start":6,"column_end":13},"kind":{"Impl":{"id":621}},"from":{"krate":0,"index":7118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9416159,"byte_end":9416166,"line_start":153,"line_end":153,"column_start":35,"column_end":42},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":7118},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9416295,"byte_end":9416302,"line_start":159,"line_end":159,"column_start":35,"column_end":42},"kind":{"Impl":{"id":623}},"from":{"krate":1,"index":8117},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9416417,"byte_end":9416424,"line_start":165,"line_end":165,"column_start":29,"column_end":36},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":7118},"to":{"krate":2,"index":2110}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9416589,"byte_end":9416596,"line_start":173,"line_end":173,"column_start":35,"column_end":42},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":7118},"to":{"krate":2,"index":2141}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9416701,"byte_end":9416708,"line_start":179,"line_end":179,"column_start":19,"column_end":26},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":7118},"to":{"krate":2,"index":2115}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9416849,"byte_end":9416856,"line_start":187,"line_end":187,"column_start":29,"column_end":36},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":7118},"to":{"krate":2,"index":2115}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9417017,"byte_end":9417024,"line_start":195,"line_end":195,"column_start":35,"column_end":42},"kind":{"Impl":{"id":628}},"from":{"krate":0,"index":7118},"to":{"krate":2,"index":2145}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\instant.rs","byte_start":9417131,"byte_end":9417138,"line_start":201,"line_end":201,"column_start":21,"column_end":28},"kind":{"Impl":{"id":629}},"from":{"krate":0,"index":7118},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\interval.rs","byte_start":9421316,"byte_end":9421324,"line_start":128,"line_end":128,"column_start":6,"column_end":14},"kind":{"Impl":{"id":630}},"from":{"krate":0,"index":7141},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9426093,"byte_end":9426100,"line_start":114,"line_end":114,"column_start":9,"column_end":16},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":7447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\time\\timeout.rs","byte_start":9426638,"byte_end":9426645,"line_start":135,"line_end":135,"column_start":20,"column_end":27},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":7447},"to":{"krate":2,"index":9138}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\bit.rs","byte_start":9427290,"byte_end":9427294,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":7293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\bit.rs","byte_start":9428722,"byte_end":9428726,"line_start":53,"line_end":53,"column_start":21,"column_end":25},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":7293},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9432669,"byte_end":9432676,"line_start":87,"line_end":87,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2033},"to":{"krate":0,"index":7185}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9433876,"byte_end":9433880,"line_start":142,"line_end":142,"column_start":31,"column_end":35},"kind":{"Impl":{"id":635}},"from":{"krate":0,"index":7193},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9433917,"byte_end":9433921,"line_start":143,"line_end":143,"column_start":31,"column_end":35},"kind":{"Impl":{"id":636}},"from":{"krate":0,"index":7193},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9433958,"byte_end":9433968,"line_start":144,"line_end":144,"column_start":31,"column_end":41},"kind":{"Impl":{"id":637}},"from":{"krate":0,"index":7200},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9434005,"byte_end":9434015,"line_start":145,"line_end":145,"column_start":31,"column_end":41},"kind":{"Impl":{"id":638}},"from":{"krate":0,"index":7200},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9434052,"byte_end":9434055,"line_start":146,"line_end":146,"column_start":31,"column_end":34},"kind":{"Impl":{"id":639}},"from":{"krate":0,"index":7187},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9434092,"byte_end":9434095,"line_start":147,"line_end":147,"column_start":31,"column_end":34},"kind":{"Impl":{"id":640}},"from":{"krate":0,"index":7187},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9434711,"byte_end":9434715,"line_start":173,"line_end":173,"column_start":9,"column_end":13},"kind":{"Impl":{"id":641}},"from":{"krate":0,"index":7175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9440321,"byte_end":9440325,"line_start":321,"line_end":321,"column_start":24,"column_end":28},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":7175},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9440464,"byte_end":9440473,"line_start":327,"line_end":327,"column_start":16,"column_end":25},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":7181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9441040,"byte_end":9441049,"line_start":346,"line_end":346,"column_start":24,"column_end":33},"kind":{"Impl":{"id":644}},"from":{"krate":0,"index":7181},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9441207,"byte_end":9441210,"line_start":352,"line_end":352,"column_start":24,"column_end":27},"kind":{"Impl":{"id":645}},"from":{"krate":0,"index":7187},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9441472,"byte_end":9441475,"line_start":362,"line_end":362,"column_start":18,"column_end":21},"kind":{"Impl":{"id":646}},"from":{"krate":0,"index":7187},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9441742,"byte_end":9441745,"line_start":370,"line_end":370,"column_start":36,"column_end":39},"kind":{"Impl":{"id":647}},"from":{"krate":0,"index":7187},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9441866,"byte_end":9441870,"line_start":376,"line_end":376,"column_start":16,"column_end":20},"kind":{"Impl":{"id":648}},"from":{"krate":0,"index":7193},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9444377,"byte_end":9444381,"line_start":451,"line_end":451,"column_start":9,"column_end":13},"kind":{"Impl":{"id":649}},"from":{"krate":0,"index":7193},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9444725,"byte_end":9444729,"line_start":464,"line_end":464,"column_start":21,"column_end":25},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":7193},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9445077,"byte_end":9445081,"line_start":480,"line_end":480,"column_start":9,"column_end":13},"kind":{"Impl":{"id":651}},"from":{"krate":0,"index":7193},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9445443,"byte_end":9445453,"line_start":494,"line_end":494,"column_start":9,"column_end":19},"kind":{"Impl":{"id":652}},"from":{"krate":0,"index":7200},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9446390,"byte_end":9446400,"line_start":524,"line_end":524,"column_start":21,"column_end":31},"kind":{"Impl":{"id":653}},"from":{"krate":0,"index":7200},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9446543,"byte_end":9446548,"line_start":533,"line_end":533,"column_start":9,"column_end":14},"kind":{"Impl":{"id":654}},"from":{"krate":0,"index":7204},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9447431,"byte_end":9447435,"line_start":563,"line_end":563,"column_start":16,"column_end":20},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":7221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9447995,"byte_end":9448000,"line_start":578,"line_end":578,"column_start":9,"column_end":14},"kind":{"Impl":{"id":656}},"from":{"krate":0,"index":7225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\slab.rs","byte_start":9448326,"byte_end":9448333,"line_start":588,"line_end":588,"column_start":6,"column_end":13},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":7303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":138741,"byte_end":138751,"line_start":29,"line_end":29,"column_start":31,"column_end":41},"kind":{"Impl":{"id":658}},"from":{"krate":0,"index":641},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":138821,"byte_end":138831,"line_start":30,"line_end":30,"column_start":31,"column_end":41},"kind":{"Impl":{"id":659}},"from":{"krate":0,"index":641},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":140131,"byte_end":140139,"line_start":70,"line_end":70,"column_start":31,"column_end":39},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":657},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":140176,"byte_end":140184,"line_start":71,"line_end":71,"column_start":31,"column_end":39},"kind":{"Impl":{"id":661}},"from":{"krate":0,"index":657},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":140235,"byte_end":140245,"line_start":75,"line_end":75,"column_start":12,"column_end":22},"kind":{"Impl":{"id":662}},"from":{"krate":0,"index":641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":140480,"byte_end":140490,"line_start":86,"line_end":86,"column_start":15,"column_end":25},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":143339,"byte_end":143349,"line_start":176,"line_end":176,"column_start":30,"column_end":40},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":641},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":143706,"byte_end":143716,"line_start":191,"line_end":191,"column_start":15,"column_end":25},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":143903,"byte_end":143913,"line_start":198,"line_end":198,"column_start":27,"column_end":37},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":641},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":144190,"byte_end":144200,"line_start":212,"line_end":212,"column_start":19,"column_end":29},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":144433,"byte_end":144437,"line_start":221,"line_end":221,"column_start":36,"column_end":40},"kind":{"Impl":{"id":668}},"from":{"krate":0,"index":7318},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":145085,"byte_end":145095,"line_start":244,"line_end":244,"column_start":19,"column_end":29},"kind":{"Impl":{"id":669}},"from":{"krate":0,"index":641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":145464,"byte_end":145475,"line_start":258,"line_end":258,"column_start":33,"column_end":44},"kind":{"Impl":{"id":670}},"from":{"krate":0,"index":7331},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":146149,"byte_end":146157,"line_start":283,"line_end":283,"column_start":9,"column_end":17},"kind":{"Impl":{"id":671}},"from":{"krate":0,"index":657},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\linked_list.rs","byte_start":146356,"byte_end":146364,"line_start":293,"line_end":293,"column_start":24,"column_end":32},"kind":{"Impl":{"id":672}},"from":{"krate":0,"index":657},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\rand.rs","byte_start":156744,"byte_end":156752,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":7348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\wake.rs","byte_start":9455613,"byte_end":9455617,"line_start":8,"line_end":8,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2045},"to":{"krate":0,"index":7366}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\wake.rs","byte_start":9455620,"byte_end":9455624,"line_start":8,"line_end":8,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2057},"to":{"krate":0,"index":7366}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\wake.rs","byte_start":9455935,"byte_end":9455943,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":7390},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\try_lock.rs","byte_start":9458031,"byte_end":9458038,"line_start":18,"line_end":18,"column_start":31,"column_end":38},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":7406},"to":{"krate":2,"index":2045}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\try_lock.rs","byte_start":9458075,"byte_end":9458082,"line_start":19,"line_end":19,"column_start":31,"column_end":38},"kind":{"Impl":{"id":676}},"from":{"krate":0,"index":7406},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\try_lock.rs","byte_start":9458120,"byte_end":9458129,"line_start":21,"line_end":21,"column_start":31,"column_end":40},"kind":{"Impl":{"id":677}},"from":{"krate":0,"index":7410},"to":{"krate":2,"index":2057}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\try_lock.rs","byte_start":9458315,"byte_end":9458322,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"kind":{"Impl":{"id":678}},"from":{"krate":0,"index":7406},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\try_lock.rs","byte_start":9458956,"byte_end":9458965,"line_start":62,"line_end":62,"column_start":19,"column_end":28},"kind":{"Impl":{"id":679}},"from":{"krate":0,"index":7410},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\try_lock.rs","byte_start":9459097,"byte_end":9459106,"line_start":70,"line_end":70,"column_start":22,"column_end":31},"kind":{"Impl":{"id":680}},"from":{"krate":0,"index":7410},"to":{"krate":2,"index":2255}},{"span":{"file_name":"C:\\Users\\jwh20\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-1.2.0\\src\\util\\try_lock.rs","byte_start":9459228,"byte_end":9459237,"line_start":76,"line_end":76,"column_start":18,"column_end":27},"kind":{"Impl":{"id":681}},"from":{"krate":0,"index":7410},"to":{"krate":2,"index":2266}}]}